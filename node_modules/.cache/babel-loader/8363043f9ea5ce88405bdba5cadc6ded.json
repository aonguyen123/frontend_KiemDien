{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\ClassList\\\\components\\\\DialogAddClass\\\\DialogAddClass.js\";\nimport React, { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Card, CardHeader, CardContent, CardActions, Divider, Grid, Button, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { LoadingButton } from 'components';\nimport styles from './styles';\nimport moment from 'moment';\n\nconst DialogAddClass = props => {\n  const open = props.open,\n        handleCloseDialog = props.handleCloseDialog,\n        classes = props.classes,\n        addClass = props.addClass,\n        actionClass = props.actionClass,\n        errors = props.errors,\n        clearErrors = props.clearErrors;\n\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedDateStart = _useState2[0],\n        setSelectedDateStart = _useState2[1];\n\n  const endDate = new Date();\n  endDate.setDate(endDate.getDate() + 1);\n\n  const _useState3 = useState(endDate),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedDateEnd = _useState4[0],\n        setSelectedDateEnd = _useState4[1];\n\n  const _useState5 = useState(new Date()),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedTime = _useState6[0],\n        setSelectedTime = _useState6[1];\n\n  const _useState7 = useState({\n    tenlop: '',\n    mota: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        value = _useState8[0],\n        setValue = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        loadingButton = _useState10[0],\n        setLoadingButton = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        errDate = _useState12[0],\n        setErrDate = _useState12[1];\n\n  const today = moment();\n\n  const handleTimeChange = date => {\n    setSelectedTime(date);\n  };\n\n  const handleDateChangeDateStart = date => {\n    setSelectedDateStart(date);\n  };\n\n  const handleDateChangeDateEnd = date => {\n    setSelectedDateEnd(date);\n  };\n\n  const handleClose = () => {\n    setValue({\n      tenlop: '',\n      mota: ''\n    });\n    handleCloseDialog(false);\n    clearErrors();\n  };\n\n  const handleChange = e => {\n    setValue(_objectSpread({}, value, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleClickAddClass = e => {\n    e.preventDefault();\n\n    if (!moment(selectedDateStart).isBefore(selectedDateEnd)) {\n      setErrDate(true);\n    } else {\n      setErrDate(false);\n      setLoadingButton(true);\n      const newClass = {};\n      newClass.tenlop = value.tenlop;\n      newClass.mota = value.mota;\n      newClass.giobatdau = selectedTime;\n      newClass.thoigianbatdau = selectedDateStart;\n      newClass.thoigianketthuc = selectedDateEnd;\n      addClass(newClass);\n    }\n  };\n\n  useEffect(() => {\n    if (actionClass.status === 'ADD_CLASS_SUCCESS') {\n      setLoadingButton(false);\n    }\n\n    if (errors) {\n      setLoadingButton(false);\n    }\n  }, [actionClass, errors]);\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Add class\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Class name\",\n    margin: \"dense\",\n    name: \"tenlop\",\n    variant: \"outlined\",\n    required: true,\n    onChange: handleChange,\n    error: errors.tenlop ? true : false,\n    helperText: errors.tenlop ? errors.tenlop : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    margin: \"dense\",\n    id: \"time-picker\",\n    label: \"Start time\",\n    ampm: false,\n    fullWidth: true,\n    value: selectedTime,\n    onChange: handleTimeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    inputVariant: \"outlined\",\n    label: \"Start date\",\n    format: \"dd/MM/yyyy\",\n    onChange: handleDateChangeDateStart,\n    fullWidth: true,\n    value: selectedDateStart,\n    minDate: today,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    inputVariant: \"outlined\",\n    label: \"End date\",\n    format: \"dd/MM/yyyy\",\n    onChange: handleDateChangeDateEnd,\n    fullWidth: true,\n    value: selectedDateEnd,\n    minDate: moment(selectedDateStart).add(1, 'days'),\n    error: errDate,\n    helperText: errDate ? 'Date should not be before minimal date' : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Description\",\n    margin: \"dense\",\n    name: \"mota\",\n    required: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"3\",\n    onChange: handleChange,\n    error: errors.mota ? true : false,\n    helperText: errors.mota ? errors.mota : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }))))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleClickAddClass,\n    disabled: loadingButton ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Save\", loadingButton ? React.createElement(LoadingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }) : null), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Cancel\")))))));\n};\n\nexport default withStyles(styles)(DialogAddClass);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\ClassList\\components\\DialogAddClass\\DialogAddClass.js"],"names":["React","useState","useEffect","Dialog","Card","CardHeader","CardContent","CardActions","Divider","Grid","Button","TextField","withStyles","MuiPickersUtilsProvider","DatePicker","TimePicker","DateFnsUtils","LoadingButton","styles","moment","DialogAddClass","props","open","handleCloseDialog","classes","addClass","actionClass","errors","clearErrors","Date","selectedDateStart","setSelectedDateStart","endDate","setDate","getDate","selectedDateEnd","setSelectedDateEnd","selectedTime","setSelectedTime","tenlop","mota","value","setValue","loadingButton","setLoadingButton","errDate","setErrDate","today","handleTimeChange","date","handleDateChangeDateStart","handleDateChangeDateEnd","handleClose","handleChange","e","target","name","handleClickAddClass","preventDefault","isBefore","newClass","giobatdau","thoigianbatdau","thoigianketthuc","status","root","add"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    DatePicker,\r\n    TimePicker\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { LoadingButton } from 'components';\r\nimport styles from './styles';\r\nimport moment from 'moment';\r\n\r\nconst DialogAddClass = props => {\r\n    const { open, handleCloseDialog, classes, addClass, actionClass, errors, clearErrors } = props;\r\n    const [selectedDateStart, setSelectedDateStart] = useState(new Date());\r\n    const endDate = new Date();\r\n    endDate.setDate(endDate.getDate() + 1);\r\n    const [selectedDateEnd, setSelectedDateEnd] = useState(endDate);\r\n    const [selectedTime, setSelectedTime] = useState(new Date());\r\n    const [value, setValue] = useState({\r\n        tenlop: '',\r\n        mota: ''\r\n    });\r\n    const [loadingButton, setLoadingButton] = useState(false);\r\n    const [errDate, setErrDate] = useState(false);\r\n\r\n    const today = moment();\r\n\r\n    const handleTimeChange = date => {\r\n        setSelectedTime(date);\r\n    };\r\n    const handleDateChangeDateStart = date => {\r\n        setSelectedDateStart(date);\r\n    };\r\n    const handleDateChangeDateEnd = date => {\r\n        setSelectedDateEnd(date);\r\n    };\r\n    const handleClose = () => {\r\n        setValue({\r\n            tenlop: '',\r\n            mota: ''\r\n        })\r\n        handleCloseDialog(false);\r\n        clearErrors();\r\n    };\r\n    const handleChange = e => {\r\n        setValue({\r\n            ...value,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    const handleClickAddClass = e => {\r\n        e.preventDefault();\r\n        if(!moment(selectedDateStart).isBefore(selectedDateEnd))\r\n        {\r\n            setErrDate(true);\r\n        }\r\n        else\r\n        {\r\n            setErrDate(false);\r\n            setLoadingButton(true);\r\n            const newClass = {};\r\n            newClass.tenlop = value.tenlop;\r\n            newClass.mota = value.mota;\r\n            newClass.giobatdau = selectedTime;\r\n            newClass.thoigianbatdau = selectedDateStart;\r\n            newClass.thoigianketthuc = selectedDateEnd;\r\n            addClass(newClass);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if(actionClass.status === 'ADD_CLASS_SUCCESS')\r\n        {\r\n            setLoadingButton(false);\r\n        }\r\n        if(errors)\r\n        {\r\n            setLoadingButton(false);\r\n        }\r\n    }, [actionClass, errors]);\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"draggable-dialog-title\"\r\n        >\r\n            <div className={classes.root}>\r\n                <Card>\r\n                    <form autoComplete=\"off\" noValidate>\r\n                        <CardHeader title=\"Add class\" />\r\n                        <Divider />\r\n                        <CardContent>\r\n                            <Grid container spacing={2}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Class name\"\r\n                                            margin=\"dense\"\r\n                                            name=\"tenlop\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            onChange={handleChange}\r\n                                            error={errors.tenlop ? true : false}\r\n                                            helperText = {\r\n                                                errors.tenlop ? errors.tenlop : null\r\n                                            }\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TimePicker\r\n                                            inputVariant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            id=\"time-picker\"\r\n                                            label=\"Start time\"\r\n                                            ampm={false}\r\n                                            fullWidth\r\n                                            value={selectedTime}\r\n                                            onChange={handleTimeChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <DatePicker\r\n                                            inputVariant=\"outlined\"\r\n                                            label=\"Start date\"\r\n                                            format=\"dd/MM/yyyy\"\r\n                                            onChange={handleDateChangeDateStart}\r\n                                            fullWidth\r\n                                            value={selectedDateStart}\r\n                                            minDate={today}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <DatePicker\r\n                                            inputVariant=\"outlined\"\r\n                                            label=\"End date\"\r\n                                            format=\"dd/MM/yyyy\"\r\n                                            onChange={handleDateChangeDateEnd}\r\n                                            fullWidth\r\n                                            value={selectedDateEnd}\r\n                                            minDate={moment(selectedDateStart).add(1, 'days')}\r\n                                            error={errDate}\r\n                                            helperText={\r\n                                                errDate ? 'Date should not be before minimal date' : null\r\n                                            }\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={12} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Description\"\r\n                                            margin=\"dense\"\r\n                                            name=\"mota\"\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            multiline\r\n                                            rows=\"3\"\r\n                                            onChange={handleChange}\r\n                                            error={errors.mota ? true : false}\r\n                                            helperText = {\r\n                                                errors.mota ? errors.mota : null\r\n                                            }\r\n                                        />\r\n                                    </Grid>\r\n                                </MuiPickersUtilsProvider>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        <Divider />\r\n                        <CardActions>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"flex-end\"\r\n                                alignItems=\"flex-end\"\r\n                            >\r\n                                <Button \r\n                                    type=\"submit\" \r\n                                    color=\"primary\" \r\n                                    onClick={handleClickAddClass}\r\n                                    disabled={loadingButton ? true : false}\r\n                                >\r\n                                    Save\r\n                                    {loadingButton ? <LoadingButton /> : null}\r\n                                </Button>\r\n                                <Button onClick={handleClose} color=\"secondary\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </CardActions>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\nexport default withStyles(styles)(DialogAddClass);\r\n"]},"metadata":{},"sourceType":"module"}