{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\Account.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport jwt_decode from 'jwt-decode';\nimport { AccountProfile, AccountDetails } from './components';\nimport { LoadingCenter } from './../../components';\nimport styles from './styles';\nimport { getInfoUser } from './../../actions/authentication';\nimport { uploadPicture, updateInfo, removePicture } from './../../actions/account';\nimport { getCity } from './../../actions/city';\nimport { Notifies } from './../../components';\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setShowNotifies = params => {\n      this.setState({\n        showNotifies: params\n      });\n    };\n\n    this.state = {\n      showNotifies: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.citys.length === 0) {\n      this.props.getCity();\n    }\n\n    if (localStorage.jwtToken) {\n      if (Object.entries(this.props.user).length === 0) {\n        const decode = jwt_decode(localStorage.jwtToken);\n        this.props.getInfoUser(decode._id);\n      }\n    }\n  }\n\n  componentDidUpdate(preProps) {\n    if (preProps.info !== this.props.info) {\n      this.setState({\n        showNotifies: true\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          errors = _this$props.errors,\n          user = _this$props.user,\n          classes = _this$props.classes,\n          file = _this$props.file,\n          isAuth = _this$props.isAuth,\n          getInfoUser = _this$props.getInfoUser,\n          uploadPicture = _this$props.uploadPicture,\n          citys = _this$props.citys,\n          info = _this$props.info,\n          updateInfo = _this$props.updateInfo,\n          statusUpdateInfo = _this$props.statusUpdateInfo,\n          removePicture = _this$props.removePicture;\n    const showNotifies = this.state.showNotifies;\n\n    if (Object.entries(user).length === 0) {\n      return React.createElement(LoadingCenter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, showNotifies ? React.createElement(Notifies, {\n      variant: \"success\",\n      message: statusUpdateInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) : null, React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      md: 6,\n      xl: 4,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(AccountProfile, {\n      errors: errors,\n      user: user,\n      file: file,\n      isAuth: isAuth,\n      getInfoUser: getInfoUser,\n      uploadPicture: uploadPicture,\n      removePicture: removePicture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      lg: 8,\n      md: 6,\n      xl: 8,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(AccountDetails, {\n      user: user,\n      citys: citys,\n      info: info,\n      updateInfo: updateInfo,\n      errors: errors,\n      getInfoUser: getInfoUser,\n      setShowNotifies: params => this.setShowNotifies(params),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nAccount.propTypes = {\n  errors: PropTypes.object,\n  user: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  user: state.auth.user,\n  file: state.file,\n  isAuth: state.auth.isAuthenticated,\n  citys: state.citys,\n  info: state.info.user,\n  statusUpdateInfo: state.info.status\n});\n\nexport default connect(mapStateToProps, {\n  getInfoUser,\n  uploadPicture,\n  getCity,\n  updateInfo,\n  removePicture\n})(withStyles(styles)(Account));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\Account.js"],"names":["React","Component","withStyles","Grid","connect","PropTypes","jwt_decode","AccountProfile","AccountDetails","LoadingCenter","styles","getInfoUser","uploadPicture","updateInfo","removePicture","getCity","Notifies","Account","constructor","props","setShowNotifies","params","setState","showNotifies","state","componentDidMount","citys","length","localStorage","jwtToken","Object","entries","user","decode","_id","componentDidUpdate","preProps","info","render","errors","classes","file","isAuth","statusUpdateInfo","root","propTypes","object","mapStateToProps","auth","isAuthenticated","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport jwt_decode from 'jwt-decode';\n\nimport { AccountProfile, AccountDetails } from './components';\nimport { LoadingCenter } from './../../components';\nimport styles from './styles';\nimport { getInfoUser } from './../../actions/authentication';\nimport { uploadPicture, updateInfo, removePicture } from './../../actions/account';\nimport { getCity } from './../../actions/city';\nimport { Notifies } from './../../components';\n\nclass Account extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showNotifies: false\n        };\n    }\n    setShowNotifies = params => {\n        this.setState({\n            showNotifies: params\n        });\n    }\n    componentDidMount() {\n        if(this.props.citys.length === 0)\n        {\n            this.props.getCity();    \n        }\n        if(localStorage.jwtToken)\n        {\n            if(Object.entries(this.props.user).length === 0)\n            {                \n                const decode = jwt_decode(localStorage.jwtToken);\n                this.props.getInfoUser(decode._id);\n            }\n        }\n    }\n    componentDidUpdate(preProps)\n    {\n        if(preProps.info !== this.props.info)\n        {\n            this.setState({\n                showNotifies: true\n            });\n        }\n    }\n    render() {\n        const {\n            errors,\n            user,\n            classes,\n            file,\n            isAuth,\n            getInfoUser,\n            uploadPicture,\n            citys,\n            info,\n            updateInfo,\n            statusUpdateInfo,\n            removePicture\n        } = this.props;\n        const { showNotifies } = this.state;\n        if (Object.entries(user).length === 0) {\n            return <LoadingCenter />;\n        }\n        return (\n            <div className={classes.root}>\n                {\n                    (showNotifies) ? <Notifies variant=\"success\" message={statusUpdateInfo} /> : null\n                }                    \n                <Grid container spacing={4}>\n                    <Grid item lg={4} md={6} xl={4} xs={12}>\n                        <AccountProfile\n                            errors={errors}\n                            user={user}\n                            file={file}\n                            isAuth={isAuth}\n                            getInfoUser={getInfoUser}\n                            uploadPicture={uploadPicture}\n                            removePicture={removePicture}\n                        />\n                    </Grid>\n                    <Grid item lg={8} md={6} xl={8} xs={12}>\n                        <AccountDetails\n                            user={user}\n                            citys={citys}\n                            info={info}\n                            updateInfo={updateInfo}\n                            errors={errors}\n                            getInfoUser={getInfoUser}\n                            setShowNotifies={params => this.setShowNotifies(params)}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n};\nAccount.propTypes = {\n    errors: PropTypes.object,\n    user: PropTypes.object\n};\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    user: state.auth.user,\n    file: state.file,\n    isAuth: state.auth.isAuthenticated,\n    citys: state.citys,\n    info: state.info.user,\n    statusUpdateInfo: state.info.status\n});\nexport default connect(\n    mapStateToProps,\n    { getInfoUser, uploadPicture, getCity, updateInfo, removePicture }\n)(withStyles(styles)(Account));\n"]},"metadata":{},"sourceType":"module"}