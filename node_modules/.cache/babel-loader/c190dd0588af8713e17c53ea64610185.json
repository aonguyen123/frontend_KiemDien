{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Assignes\\\\components\\\\CardClassAssignes\\\\CardClassAssignes.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Card, CardHeader, Avatar, Typography, CardContent, Divider, CardActions, Button, Grid, Link } from '@material-ui/core';\nimport moment from 'moment';\nimport { URI } from './../../../../constants/types';\nimport DrawClassAssignes from './../DrawClassAssignes/DrawClassAssignes';\nimport { LoadingButton } from 'components';\nimport styles from './styles';\n\nconst CardClassAssignes = props => {\n  const classes = props.classes,\n        className = props.className,\n        lop = props.lop,\n        loadingLocal = props.loadingLocal,\n        changeManagerPerson = props.changeManagerPerson,\n        users = props.users,\n        removeManagerPerson = props.removeManagerPerson,\n        searchTaskDraw = props.searchTaskDraw;\n\n  const _useState = useState({\n    right: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loadingButton = _useState4[0],\n        setLoadingButton = _useState4[1];\n\n  const handleChangePerson = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const handleClickRemovePerson = () => {\n    setLoadingButton(true);\n    removeManagerPerson(lop._id);\n  };\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(DrawClassAssignes, {\n    open: state.right,\n    handleChangePerson: handleChangePerson,\n    changeManagerPerson: changeManagerPerson,\n    loadingLocal: loadingLocal,\n    users: users,\n    idClass: lop._id,\n    searchTaskDraw: searchTaskDraw,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      src: lop.hinhdaidien ? \"\".concat(URI, \"/getAvatar/\").concat(lop.hinhdaidien) : 'http://www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=retro',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    title: React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, lop.tenlop),\n    subheader: lop.tenUser ? React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"by\", ' ', React.createElement(\"span\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, lop.tenUser), ' ', \"| \", \"Updated \".concat(moment(lop.updatedAt).fromNow())) : React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Updated \".concat(moment(lop.updatedAt).fromNow())),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, lop.mota))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, lop.dssv.length), React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Total member\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, moment(lop.thoigianketthuc).fromNow()), React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"End time\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, lop.managed ? 'Managed' : 'Not managed'), React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Status\")))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"text\",\n    color: \"primary\",\n    onClick: handleChangePerson('right', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Change\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Link, {\n    color: \"primary\",\n    component: RouterLink,\n    to: \"/classes/classDetail/\".concat(lop._id),\n    underline: \"none\",\n    variant: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Clearn more\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"text\",\n    color: \"secondary\",\n    disabled: !lop.managed || loadingButton,\n    onClick: handleClickRemovePerson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, loadingButton && React.createElement(LoadingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), \"Remove\")))));\n};\n\nexport default withStyles(styles)(CardClassAssignes);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Assignes\\components\\CardClassAssignes\\CardClassAssignes.js"],"names":["React","useState","clsx","withStyles","Link","RouterLink","Card","CardHeader","Avatar","Typography","CardContent","Divider","CardActions","Button","Grid","moment","URI","DrawClassAssignes","LoadingButton","styles","CardClassAssignes","props","classes","className","lop","loadingLocal","changeManagerPerson","users","removeManagerPerson","searchTaskDraw","right","state","setState","loadingButton","setLoadingButton","handleChangePerson","side","open","event","type","key","handleClickRemovePerson","_id","root","hinhdaidien","tenlop","tenUser","fontWeight","fontSize","updatedAt","fromNow","content","mota","info","dssv","length","thoigianketthuc","managed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Avatar,\r\n    Typography,\r\n    CardContent,\r\n    Divider,\r\n    CardActions,\r\n    Button,\r\n    Grid,\r\n    Link\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { URI } from './../../../../constants/types';\r\nimport DrawClassAssignes from './../DrawClassAssignes/DrawClassAssignes';\r\nimport { LoadingButton } from 'components';\r\nimport styles from './styles';\r\n\r\nconst CardClassAssignes = props => {\r\n    const {\r\n        classes,\r\n        className,\r\n        lop,\r\n        loadingLocal,\r\n        changeManagerPerson,\r\n        users,\r\n        removeManagerPerson,\r\n        searchTaskDraw\r\n    } = props;\r\n    const [state, setState] = useState({ right: false });\r\n    const [loadingButton, setLoadingButton] = useState(false);\r\n\r\n    const handleChangePerson = (side, open) => event => {\r\n        if (\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n        setState({ ...state, [side]: open });\r\n    };\r\n    const handleClickRemovePerson = () => {\r\n        setLoadingButton(true);\r\n        removeManagerPerson(lop._id);\r\n    }\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, className)}>\r\n            <DrawClassAssignes\r\n                open={state.right}\r\n                handleChangePerson={handleChangePerson}\r\n                changeManagerPerson={changeManagerPerson}\r\n                loadingLocal={loadingLocal}\r\n                users={users}\r\n                idClass={lop._id}\r\n                searchTaskDraw={searchTaskDraw}\r\n            />\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar\r\n                        src={\r\n                            lop.hinhdaidien\r\n                                ? `${URI}/getAvatar/${lop.hinhdaidien}`\r\n                                : 'http://www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=retro'\r\n                        }\r\n                    />\r\n                }\r\n                title={<Typography variant=\"h5\">{lop.tenlop}</Typography>}\r\n                subheader={\r\n                    lop.tenUser ? (\r\n                        <Typography variant=\"body2\">\r\n                            by{' '}\r\n                            <span style={{ fontWeight: 'bold', fontSize: 15 }}>\r\n                                {lop.tenUser}\r\n                            </span>{' '}\r\n                            | {`Updated ${moment(lop.updatedAt).fromNow()}`}\r\n                        </Typography>\r\n                    ) : (\r\n                        <Typography variant=\"body2\">\r\n                            {`Updated ${moment(lop.updatedAt).fromNow()}`}\r\n                        </Typography>\r\n                    )\r\n                }\r\n            />\r\n            <CardContent>\r\n                <div className={classes.content}>\r\n                    <Typography variant=\"body1\" color=\"textSecondary\">\r\n                        {lop.mota}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent>\r\n            <Divider />\r\n            <div className={classes.info}>\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\" color=\"textPrimary\">\r\n                            {lop.dssv.length}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" color=\"textSecondary\">\r\n                            Total member\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\" color=\"textPrimary\">\r\n                            {moment(lop.thoigianketthuc).fromNow()}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" color=\"textSecondary\">\r\n                            End time\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\" color=\"textPrimary\">\r\n                            {lop.managed ? 'Managed' : 'Not managed'}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"body1\"\r\n                            color=\"textSecondary\"\r\n                            align=\"center\"\r\n                        >\r\n                            Status\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <CardActions>\r\n                <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            color=\"primary\"\r\n                            onClick={handleChangePerson('right', true)}\r\n                        >\r\n                            Change\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link\r\n                            color=\"primary\"\r\n                            component={RouterLink}\r\n                            to={`/classes/classDetail/${lop._id}`}\r\n                            underline=\"none\"\r\n                            variant=\"button\"\r\n                        >\r\n                            Clearn more\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            disabled={!lop.managed || loadingButton}\r\n                            onClick={handleClickRemovePerson}\r\n                        >\r\n                            {loadingButton && <LoadingButton />}\r\n                            Remove\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\nexport default withStyles(styles)(CardClassAssignes);\r\n"]},"metadata":{},"sourceType":"module"}