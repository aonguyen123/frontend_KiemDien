{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\PresencesDetail\\\\components\\\\PresencesTable\\\\PresencesTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, TablePagination } from '@material-ui/core';\nimport moment from 'moment';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { getInitials } from 'helpers'; //import { ToolbarTable } from './components';\n\nimport styles from './styles';\n\nconst PresencesTable = props => {\n  const className = props.className,\n        classes = props.classes,\n        presenceDetailClass = props.presenceDetailClass;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedUsers = _useState2[0],\n        setSelectedUsers = _useState2[1];\n\n  const _useState3 = useState(5),\n        _useState4 = _slicedToArray(_useState3, 2),\n        rowsPerPage = _useState4[0],\n        setRowsPerPage = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        page = _useState6[0],\n        setPage = _useState6[1];\n\n  const checkDateList = presenceDetailClass.checkDateList,\n        classById = presenceDetailClass.classById;\n  console.log(presenceDetailClass);\n\n  const handleSelectAll = event => {// let selectedUsers;\n    // if (event.target.checked) {\n    //     selectedUsers = users.map(user => user._id);\n    // } else {\n    //     selectedUsers = [];\n    // }\n    // setSelectedUsers(selectedUsers);\n  };\n\n  const handleSelectOne = (event, id) => {// const selectedIndex = selectedUsers.indexOf(id);\n    // let newSelectedUsers = [];\n    // if (selectedIndex === -1) {\n    //     newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    // } else if (selectedIndex === 0) {\n    //     newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    // } else if (selectedIndex === selectedUsers.length - 1) {\n    //     newSelectedUsers = newSelectedUsers.concat(\n    //         selectedUsers.slice(0, -1)\n    //     );\n    // } else if (selectedIndex > 0) {\n    //     newSelectedUsers = newSelectedUsers.concat(\n    //         selectedUsers.slice(0, selectedIndex),\n    //         selectedUsers.slice(selectedIndex + 1)\n    //     );\n    // }\n    // setSelectedUsers(newSelectedUsers);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, checkDateList.dateList.map(date => React.createElement(Table, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    rowSpan: 2,\n    padding: \"checkbox\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Checkbox // checked={\n  //     selectedUsers.length ===\n  //     users.length\n  // }\n  , {\n    color: \"primary\" // indeterminate={\n    //     selectedUsers.length > 0 &&\n    //     selectedUsers.length <\n    //         users.length\n    // }\n    ,\n    onChange: handleSelectAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    rowSpan: 2,\n    align: \"center\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Member code\"), React.createElement(TableCell, {\n    rowSpan: 2,\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    rowSpan: 2,\n    align: \"center\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Birth date\"), React.createElement(TableCell, {\n    rowSpan: 2,\n    align: \"center\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(TableCell, {\n    className: classes.borderTable,\n    colSpan: 1,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Check date\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"11/11/2019\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.tableRow,\n    hover: true // selected={\n    //     selectedUsers.indexOf(\n    //         user._id\n    //     ) !== -1\n    // }\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Checkbox // checked={\n  //     selectedUsers.indexOf(\n  //         user._id\n  //     ) !== -1\n  // }\n  , {\n    color: \"primary\" // onChange={event =>\n    //     handleSelectOne(event, user._id)\n    // }\n    ,\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"311231313\")), React.createElement(TableCell, {\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"nguyend uc ao\"), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"20/0912/21/2\"), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"nam\"), React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.borderTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(CheckIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }))))))))), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: classById.dssv ? classById.dssv.length : 0,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [],\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    labelRowsPerPage: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })));\n};\n\nexport default withStyles(styles)(PresencesTable);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\PresencesDetail\\components\\PresencesTable\\PresencesTable.js"],"names":["React","useState","useEffect","clsx","PerfectScrollbar","withStyles","Card","CardActions","CardContent","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","moment","CheckIcon","getInitials","styles","PresencesTable","props","className","classes","presenceDetailClass","selectedUsers","setSelectedUsers","rowsPerPage","setRowsPerPage","page","setPage","checkDateList","classById","console","log","handleSelectAll","event","handleSelectOne","id","handlePageChange","handleRowsPerPageChange","target","value","root","content","inner","dateList","map","date","borderTable","tableRow","actions","dssv","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography,\r\n    TablePagination\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { getInitials } from 'helpers';\r\n//import { ToolbarTable } from './components';\r\nimport styles from './styles';\r\n\r\nconst PresencesTable = props => {\r\n    const { className, classes, presenceDetailClass } = props;\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [page, setPage] = useState(0);\r\n    const { checkDateList, classById } = presenceDetailClass;\r\n\r\n    console.log(presenceDetailClass);\r\n\r\n    const handleSelectAll = event => {\r\n        // let selectedUsers;\r\n        // if (event.target.checked) {\r\n        //     selectedUsers = users.map(user => user._id);\r\n        // } else {\r\n        //     selectedUsers = [];\r\n        // }\r\n        // setSelectedUsers(selectedUsers);\r\n    };\r\n    const handleSelectOne = (event, id) => {\r\n        // const selectedIndex = selectedUsers.indexOf(id);\r\n        // let newSelectedUsers = [];\r\n        // if (selectedIndex === -1) {\r\n        //     newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\r\n        // } else if (selectedIndex === 0) {\r\n        //     newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\r\n        // } else if (selectedIndex === selectedUsers.length - 1) {\r\n        //     newSelectedUsers = newSelectedUsers.concat(\r\n        //         selectedUsers.slice(0, -1)\r\n        //     );\r\n        // } else if (selectedIndex > 0) {\r\n        //     newSelectedUsers = newSelectedUsers.concat(\r\n        //         selectedUsers.slice(0, selectedIndex),\r\n        //         selectedUsers.slice(selectedIndex + 1)\r\n        //     );\r\n        // }\r\n        // setSelectedUsers(newSelectedUsers);\r\n    };\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page);\r\n    };\r\n    const handleRowsPerPageChange = event => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, className)}>\r\n            {/* <ToolbarTable\r\n                selectedUsers={selectedUsers}\r\n                deleteUsers={deleteUsers}\r\n            /> */}\r\n            <CardContent className={classes.content}>\r\n                <PerfectScrollbar>\r\n                    <div className={classes.inner}>\r\n                        {checkDateList.dateList.map(date => (\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell\r\n                                            rowSpan={2}\r\n                                            padding=\"checkbox\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            <Checkbox\r\n                                                // checked={\r\n                                                //     selectedUsers.length ===\r\n                                                //     users.length\r\n                                                // }\r\n                                                color=\"primary\"\r\n                                                // indeterminate={\r\n                                                //     selectedUsers.length > 0 &&\r\n                                                //     selectedUsers.length <\r\n                                                //         users.length\r\n                                                // }\r\n                                                onChange={handleSelectAll}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            rowSpan={2}\r\n                                            align=\"center\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            Member code\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            rowSpan={2}\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            Name\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            rowSpan={2}\r\n                                            align=\"center\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            Birth date\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            rowSpan={2}\r\n                                            align=\"center\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            Gender\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            className={classes.borderTable}\r\n                                            colSpan={1}\r\n                                            align=\"center\"\r\n                                        >\r\n                                            Check date\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell\r\n                                            align=\"center\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            11/11/2019\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow\r\n                                        className={classes.tableRow}\r\n                                        hover\r\n                                        // selected={\r\n                                        //     selectedUsers.indexOf(\r\n                                        //         user._id\r\n                                        //     ) !== -1\r\n                                        // }\r\n                                    >\r\n                                        <TableCell\r\n                                            padding=\"checkbox\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            <Checkbox\r\n                                                // checked={\r\n                                                //     selectedUsers.indexOf(\r\n                                                //         user._id\r\n                                                //     ) !== -1\r\n                                                // }\r\n                                                color=\"primary\"\r\n                                                // onChange={event =>\r\n                                                //     handleSelectOne(event, user._id)\r\n                                                // }\r\n                                                value=\"true\"\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            align=\"center\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            <Typography variant=\"body1\">\r\n                                                311231313\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            nguyend uc ao\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            align=\"center\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            20/0912/21/2\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            align=\"center\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            nam\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            align=\"center\"\r\n                                            className={classes.borderTable}\r\n                                        >\r\n                                            <CheckIcon />\r\n                                        </TableCell>\r\n\r\n                                        {/* <TableCell\r\n                                                align=\"center\"\r\n                                                className={classes.borderTable}\r\n                                            >\r\n                                                <CheckIcon />\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                align=\"center\"\r\n                                                className={classes.borderTable}\r\n                                            >\r\n                                                <CheckIcon />\r\n                                            </TableCell> */}\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        ))}\r\n                    </div>\r\n                </PerfectScrollbar>\r\n            </CardContent>\r\n            <CardActions className={classes.actions}>\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={classById.dssv ? classById.dssv.length : 0}\r\n                    onChangePage={handlePageChange}\r\n                    onChangeRowsPerPage={handleRowsPerPageChange}\r\n                    page={page}\r\n                    rowsPerPage={rowsPerPage}\r\n                    rowsPerPageOptions={[]}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'previous page'\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'next page'\r\n                    }}\r\n                    labelRowsPerPage=\"\"\r\n                />\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\nexport default withStyles(styles)(PresencesTable);\r\n"]},"metadata":{},"sourceType":"module"}