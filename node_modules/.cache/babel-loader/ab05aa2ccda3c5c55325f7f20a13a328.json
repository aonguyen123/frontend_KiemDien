{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Settings\\\\Settings.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { Notifications, Password } from './components';\nimport styles from './styles';\nimport { updatePassword } from './../../actions/account';\nimport { Notifies } from 'components';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCloseNotify = params => {\n      this.setState({\n        openNotify: params\n      });\n    };\n\n    this.state = {\n      openNotify: false\n    };\n  }\n\n  componentDidUpdate(preProps) {\n    if (preProps.info !== this.props.info) {\n      this.setState({\n        openNotify: true\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          updatePassword = _this$props.updatePassword,\n          user = _this$props.user,\n          statusUpdateInfo = _this$props.statusUpdateInfo,\n          errors = _this$props.errors,\n          info = _this$props.info;\n    const openNotify = this.state.openNotify;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Notifies, {\n      openNotify: openNotify,\n      setCloseNotify: params => this.setCloseNotify(params),\n      variant: \"success\",\n      message: statusUpdateInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 7,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Notifications, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 5,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Password, {\n      user: user,\n      updatePassword: updatePassword,\n      errors: errors,\n      info: info,\n      statusUpdateInfo: statusUpdateInfo,\n      setShowNotifies: params => this.setShowNotifies(params),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  statusUpdateInfo: state.info.status,\n  user: state.auth.user,\n  info: state.info.user,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  updatePassword\n})(withStyles(styles)(Settings));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Settings\\Settings.js"],"names":["React","Component","withStyles","Grid","connect","Notifications","Password","styles","updatePassword","Notifies","Settings","constructor","props","setCloseNotify","params","setState","openNotify","state","componentDidUpdate","preProps","info","render","classes","user","statusUpdateInfo","errors","root","setShowNotifies","mapStateToProps","status","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nimport { Notifications, Password } from './components';\nimport styles from './styles';\nimport { updatePassword } from './../../actions/account';\nimport { Notifies } from 'components';\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openNotify: false\n        };\n    }\n    setCloseNotify = params => {\n        this.setState({\n            openNotify: params\n        });\n    }\n    componentDidUpdate(preProps)\n    {\n        if(preProps.info !== this.props.info)\n        {\n            this.setState({\n                openNotify: true\n            })\n        }\n    }\n    render() {\n        const {\n            classes,\n            updatePassword,\n            user,\n            statusUpdateInfo,\n            errors,\n            info\n        } = this.props;\n        const { openNotify } = this.state;\n        return (\n            <div className={classes.root}>\n                <Notifies \n                    openNotify={openNotify}\n                    setCloseNotify={params => this.setCloseNotify(params)}\n                    variant=\"success\" \n                    message={statusUpdateInfo} \n                />\n                <Grid container spacing={4}>\n                    <Grid item md={7} xs={12}>\n                        <Notifications />\n                    </Grid>\n                    <Grid item md={5} xs={12}>\n                        <Password\n                            user={user}\n                            updatePassword={updatePassword}\n                            errors={errors}\n                            info={info}\n                            statusUpdateInfo={statusUpdateInfo}\n                            setShowNotifies={(params) => this.setShowNotifies(params)}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    statusUpdateInfo: state.info.status,\n    user: state.auth.user,\n    info: state.info.user,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n    { updatePassword }\n)(withStyles(styles)(Settings));\n"]},"metadata":{},"sourceType":"module"}