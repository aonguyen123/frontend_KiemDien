{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport moment from 'moment';\nimport { STATISTICAL_TOTAL_USER } from './../constants/types';\nconst initialState = {\n  dataUserMonthCurrent: [],\n  dataUserMonthLast: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case STATISTICAL_TOTAL_USER:\n      return _objectSpread({}, state, {\n        dataUserMonthCurrent: xuly(action.payload.users).usersMonthCurrent,\n        dataUserMonthLast: xuly(action.payload.users).usersMonthLast\n      });\n\n    default:\n      return state;\n  }\n}\n;\n\nconst xuly = users => {\n  let usersMonthCurrent = [],\n      usersMonthLast = [];\n  const month = moment().format('MM');\n  const lastMonth = moment().subtract(1, 'month').format('MM');\n\n  if (users.length !== 0) {\n    usersMonthCurrent = users.filter(user => moment(user.createdAt).format('MM') === month);\n    usersMonthLast = users.filter(user => moment(user.createdAt).format('MM') === lastMonth);\n  }\n\n  return {\n    usersMonthCurrent,\n    usersMonthLast\n  };\n};","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\reducers\\statisticalTotalUserReducer.js"],"names":["moment","STATISTICAL_TOTAL_USER","initialState","dataUserMonthCurrent","dataUserMonthLast","state","action","type","xuly","payload","users","usersMonthCurrent","usersMonthLast","month","format","lastMonth","subtract","length","filter","user","createdAt"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,sBAAT,QAAuC,sBAAvC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,oBAAoB,EAAE,EADL;AAEjBC,EAAAA,iBAAiB,EAAE;AAFF,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKN,sBAAL;AACI,+BACOI,KADP;AAEIF,QAAAA,oBAAoB,EAAEK,IAAI,CAACF,MAAM,CAACG,OAAP,CAAeC,KAAhB,CAAJ,CAA2BC,iBAFrD;AAGIP,QAAAA,iBAAiB,EAAEI,IAAI,CAACF,MAAM,CAACG,OAAP,CAAeC,KAAhB,CAAJ,CAA2BE;AAHlD;;AAKJ;AACI,aAAOP,KAAP;AATR;AAWH;AAAA;;AACD,MAAMG,IAAI,GAAGE,KAAK,IAAI;AAClB,MAAIC,iBAAiB,GAAG,EAAxB;AAAA,MAA4BC,cAAc,GAAG,EAA7C;AACA,QAAMC,KAAK,GAAGb,MAAM,GAAGc,MAAT,CAAgB,IAAhB,CAAd;AACA,QAAMC,SAAS,GAAGf,MAAM,GAAGgB,QAAT,CAAkB,CAAlB,EAAqB,OAArB,EAA8BF,MAA9B,CAAqC,IAArC,CAAlB;;AACA,MAAGJ,KAAK,CAACO,MAAN,KAAiB,CAApB,EACA;AACIN,IAAAA,iBAAiB,GAAGD,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAInB,MAAM,CAACmB,IAAI,CAACC,SAAN,CAAN,CAAuBN,MAAvB,CAA8B,IAA9B,MAAwCD,KAA7D,CAApB;AACAD,IAAAA,cAAc,GAAGF,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAInB,MAAM,CAACmB,IAAI,CAACC,SAAN,CAAN,CAAuBN,MAAvB,CAA8B,IAA9B,MAAwCC,SAA7D,CAAjB;AACH;;AACD,SAAO;AACHJ,IAAAA,iBADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CAbD","sourcesContent":["import moment from 'moment';\r\nimport { STATISTICAL_TOTAL_USER } from './../constants/types';\r\n\r\nconst initialState = {\r\n    dataUserMonthCurrent: [],\r\n    dataUserMonthLast: []\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch(action.type)\r\n    {\r\n        case STATISTICAL_TOTAL_USER:\r\n            return {\r\n                ...state,\r\n                dataUserMonthCurrent: xuly(action.payload.users).usersMonthCurrent,\r\n                dataUserMonthLast: xuly(action.payload.users).usersMonthLast\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst xuly = users => {\r\n    let usersMonthCurrent = [], usersMonthLast = [];\r\n    const month = moment().format('MM');\r\n    const lastMonth = moment().subtract(1, 'month').format('MM');\r\n    if(users.length !== 0)\r\n    {\r\n        usersMonthCurrent = users.filter(user => moment(user.createdAt).format('MM') === month);\r\n        usersMonthLast = users.filter(user => moment(user.createdAt).format('MM') === lastMonth);\r\n    }\r\n    return {\r\n        usersMonthCurrent,\r\n        usersMonthLast\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}