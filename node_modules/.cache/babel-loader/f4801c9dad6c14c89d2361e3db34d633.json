{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\ClassDetail\\\\components\\\\CardClassAvatar\\\\CardClassAvatar.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Avatar, Divider, Button, CardHeader } from '@material-ui/core';\nimport { URI } from './../../../../constants/types';\nimport { LoadingButton } from 'components';\nimport styles from './styles';\n\nconst CardClassAvatar = props => {\n  const classes = props.classes,\n        className = props.className,\n        classById = props.classById,\n        updateAvatarClassById = props.updateAvatarClassById,\n        errors = props.errors,\n        removeAvatarClass = props.removeAvatarClass;\n\n  let _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 1),\n      avatar = _useState2[0];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loadingButtonUpload = _useState4[0],\n        setLoadingButtonUpload = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loadingButtonRemove = _useState6[0],\n        setLoadingButtonRemove = _useState6[1];\n\n  useEffect(() => {\n    if (errors) {\n      setLoadingButtonUpload(false);\n    }\n  }, [errors, loadingButton]);\n\n  const handleChange = e => {\n    setLoadingButtonUpload(true);\n    avatar = e.target.files[0];\n\n    if (avatar) {\n      updateAvatarClassById(avatar, classById._id);\n    }\n  };\n\n  const handleRemoveAvatarClass = () => {\n    setLoadingButtonRemove(true);\n    removeAvatarClass(classById._id);\n  };\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Class avatar\",\n    subheader: \"The class avatar can be upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: classById.hinhdaidien ? \"\".concat(URI, \"/getAvatar/\").concat(classById.hinhdaidien) : 'http://www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=retro',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"text-button-file\",\n    multiple: true,\n    type: \"file\",\n    onChange: handleChange,\n    disabled: loadingButtonUpload,\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"text-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Button, {\n    component: \"span\",\n    className: classes.uploadButton,\n    color: \"primary\",\n    variant: \"text\",\n    disabled: loadingButtonUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, loadingButtonUpload ? React.createElement(LoadingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }) : null, \"Upload avatar\")), React.createElement(Button, {\n    variant: \"text\",\n    onClick: handleRemoveAvatarClass,\n    disabled: loadingButtonRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, loadingButtonRemove ? React.createElement(LoadingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }) : null, \"Remove avatar\")));\n};\n\nexport default withStyles(styles)(CardClassAvatar);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\ClassDetail\\components\\CardClassAvatar\\CardClassAvatar.js"],"names":["React","useState","useEffect","clsx","withStyles","Card","CardActions","CardContent","Avatar","Divider","Button","CardHeader","URI","LoadingButton","styles","CardClassAvatar","props","classes","className","classById","updateAvatarClassById","errors","removeAvatarClass","avatar","loadingButtonUpload","setLoadingButtonUpload","loadingButtonRemove","setLoadingButtonRemove","loadingButton","handleChange","e","target","files","_id","handleRemoveAvatarClass","root","details","hinhdaidien","input","uploadButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Avatar,\r\n    Divider,\r\n    Button,\r\n    CardHeader\r\n} from '@material-ui/core';\r\nimport { URI } from './../../../../constants/types';\r\nimport { LoadingButton } from 'components';\r\nimport styles from './styles';\r\n\r\nconst CardClassAvatar = props => {\r\n    const { classes, className, classById, updateAvatarClassById, errors, removeAvatarClass } = props;\r\n    let [avatar] = useState('');\r\n    const [loadingButtonUpload, setLoadingButtonUpload] = useState(false);\r\n    const [loadingButtonRemove, setLoadingButtonRemove] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(errors)\r\n        {\r\n            setLoadingButtonUpload(false);\r\n        }\r\n    }, [errors, loadingButton]);\r\n\r\n    const handleChange = e => {\r\n        setLoadingButtonUpload(true);\r\n        avatar = e.target.files[0];\r\n        if (avatar) {\r\n            updateAvatarClassById(avatar, classById._id);\r\n        }\r\n    };\r\n    const handleRemoveAvatarClass = () => {\r\n        setLoadingButtonRemove(true);\r\n        removeAvatarClass(classById._id);\r\n    }\r\n\r\n    return(\r\n        <Card className={clsx(classes.root, className)}>\r\n            <CardHeader\r\n                title=\"Class avatar\"\r\n                subheader=\"The class avatar can be upload\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <div className={classes.details}>\r\n                    <Avatar\r\n                        className={classes.avatar}\r\n                        src={\r\n                                classById.hinhdaidien \r\n                                ? `${URI}/getAvatar/${classById.hinhdaidien}` \r\n                                : 'http://www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=retro'\r\n                            }\r\n                    />\r\n                </div>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"text-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                    disabled={loadingButtonUpload}\r\n                    value=\"\"\r\n                />\r\n                <label htmlFor=\"text-button-file\">\r\n                    <Button\r\n                        component=\"span\"\r\n                        className={classes.uploadButton}\r\n                        color=\"primary\"\r\n                        variant=\"text\"\r\n                        disabled={loadingButtonUpload}\r\n                    >\r\n                        {loadingButtonUpload ? <LoadingButton /> : null}\r\n                        Upload avatar\r\n                    </Button>\r\n                </label>\r\n                <Button\r\n                    variant=\"text\"\r\n                    onClick={handleRemoveAvatarClass}\r\n                    disabled={loadingButtonRemove}\r\n                >\r\n                    {loadingButtonRemove ? <LoadingButton /> : null}\r\n                    Remove avatar\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\nexport default withStyles(styles)(CardClassAvatar);\r\n"]},"metadata":{},"sourceType":"module"}