{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\components\\\\AccountProfile\\\\AccountProfile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport { getInfoUser } from './../../../../actions/authentication';\nimport { uploadPicture } from './../../../../actions/account';\nimport styles from './styles';\n\nclass AccountProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.profileComplete = (user, isAuth) => {\n      if (isAuth) {\n        let complete = 0;\n\n        if (user.firstName) {\n          complete += 20;\n        }\n\n        if (user.lastName) {\n          complete += 20;\n        }\n\n        if (user.sdt) {\n          complete += 20;\n        }\n\n        if (user.city) {\n          complete += 20;\n        }\n\n        if (user.avatar) {\n          complete += 20;\n        }\n\n        return complete;\n      } else {\n        return 0;\n      }\n    };\n\n    this.handleChange = (e, user) => {\n      let file = this.state.avatar;\n      file = e.target.files[0];\n\n      if (file) {\n        this.props.uploadPicture(file, user._id);\n      }\n    };\n\n    this.state = {\n      avatar: ''\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.file !== this.props.file) {\n      this.props.getInfoUser(this.props.user._id);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          user = _this$props.user,\n          isAuth = _this$props.isAuth,\n          classes = _this$props.classes;\n    return React.createElement(Card, {\n      className: clsx(classes.root, className),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\".concat(user.firstName, \" \").concat(user.lastName)), React.createElement(Typography, {\n      className: classes.locationText,\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, user.city, \", \", user.country), React.createElement(Typography, {\n      className: classes.dateText,\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, moment().format('hh:mm A'), \" (\", 'GTM-7', \")\")), React.createElement(Avatar, {\n      className: classes.avatar,\n      src: user.avatar ? \"\".concat(URL_getImage).concat(user.avatar) : \"//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Profile Completeness: \".concat(this.profileComplete(user, isAuth), \"%\")), React.createElement(LinearProgress, {\n      value: this.profileComplete(user, isAuth),\n      variant: \"determinate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"text-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: e => this.handleChange(e, user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"text-button-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      component: \"span\",\n      className: classes.uploadButton,\n      color: \"primary\",\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Upload picture\")), React.createElement(Button, {\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Remove picture\")));\n  }\n\n}\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n  auth: PropTypes.object,\n  uploadPicture: PropTypes.func,\n  file: PropTypes.string,\n  errors: PropTypes.object\n};\nexport default withStyles(styles)(AccountProfile);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\components\\AccountProfile\\AccountProfile.js"],"names":["React","Component","PropTypes","clsx","moment","withStyles","connect","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","URL_getImage","getInfoUser","uploadPicture","styles","AccountProfile","constructor","props","profileComplete","user","isAuth","complete","firstName","lastName","sdt","city","avatar","handleChange","e","file","state","target","files","_id","componentWillUpdate","nextProps","nextState","render","className","classes","root","details","locationText","country","dateText","format","progress","input","uploadButton","propTypes","string","auth","object","func","errors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Typography,\n    Divider,\n    Button,\n    LinearProgress\n} from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport { getInfoUser } from './../../../../actions/authentication';\nimport { uploadPicture } from './../../../../actions/account';\nimport styles from './styles';\n\nclass AccountProfile extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            avatar: ''\n        };\n    }      \n    profileComplete = (user, isAuth) => {\n        if (isAuth) {\n            let complete = 0;\n            if (user.firstName) {\n                complete += 20;\n            }\n            if (user.lastName) {\n                complete += 20;\n            }\n            if (user.sdt) {\n                complete += 20;\n            }\n            if (user.city) {\n                complete += 20;\n            }\n            if (user.avatar) {\n                complete += 20;\n            }\n            return complete;\n        } else {\n            return 0;\n        }\n    };\n    handleChange = (e, user) => {\n        let file = this.state.avatar;\n        file = e.target.files[0];\n        if (file) {\n            this.props.uploadPicture(file, user._id);\n        }\n    };\n    componentWillUpdate(nextProps, nextState)\n    {\n        if(nextProps.file !== this.props.file)\n        {\n            this.props.getInfoUser(this.props.user._id)\n        }\n    }\n    render() {\n        const {\n            className,\n            user,\n            isAuth,\n            classes\n        } = this.props;\n        return (\n            <Card className={clsx(classes.root, className)}>\n                <CardContent>\n                    <div className={classes.details}>\n                        <div>\n                            <Typography gutterBottom variant=\"h2\">\n                                {`${user.firstName} ${user.lastName}`}\n                            </Typography>\n                            <Typography\n                                className={classes.locationText}\n                                color=\"textSecondary\"\n                                variant=\"body1\"\n                            >\n                                {user.city}, {user.country}\n                            </Typography>\n                            <Typography\n                                className={classes.dateText}\n                                color=\"textSecondary\"\n                                variant=\"body1\"\n                            >\n                                {moment().format('hh:mm A')} ({'GTM-7'})\n                            </Typography>\n                        </div>\n                        <Avatar\n                            className={classes.avatar}\n                            src={user.avatar ? `${URL_getImage}${user.avatar}` : `//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm`}\n                        />\n                    </div>\n                    <div className={classes.progress}>\n                        <Typography variant=\"body1\">\n                            {`Profile Completeness: ${this.profileComplete(\n                                user,\n                                isAuth\n                            )}%`}\n                        </Typography>\n                        <LinearProgress\n                            value={this.profileComplete(user, isAuth)}\n                            variant=\"determinate\"\n                        />\n                    </div>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        id=\"text-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={(e) => this.handleChange(e, user)}\n                    />\n                    <label htmlFor=\"text-button-file\">\n                        <Button\n                            component=\"span\"\n                            className={classes.uploadButton}\n                            color=\"primary\"\n                            variant=\"text\"\n                        >\n                            Upload picture\n                        </Button>\n                    </label>\n                    <Button variant=\"text\">Remove picture</Button>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nAccountProfile.propTypes = {\n    className: PropTypes.string,\n    auth: PropTypes.object,\n    uploadPicture: PropTypes.func,\n    file: PropTypes.string,\n    errors: PropTypes.object\n};\n\nexport default withStyles(styles)(AccountProfile);\n"]},"metadata":{},"sourceType":"module"}