{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Presences\\\\components\\\\PresencesCard\\\\PresencesCard.js\";\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Typography, Grid, Link, Avatar, Button } from '@material-ui/core';\nimport { StatusBullet } from 'components';\nimport { URI } from './../../../../constants/types';\nimport styles from './styles';\nconst statusColors = {\n  true: 'success',\n  false: 'danger'\n};\n\nconst PresencesCard = props => {\n  const className = props.className,\n        classes = props.classes,\n        lop = props.lop;\n\n  const handleClick = id => {\n    console.log(id);\n  };\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      src: lop.hinhdaidien ? \"\".concat(URI, \"/getAvatar/\").concat(lop.hinhdaidien) : 'http://www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=retro',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    title: React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, lop.tenlop),\n    subheader: React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"by\", ' ', React.createElement(\"span\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: '30'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, lop.tenUser)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, moment(lop.thoigianketthuc).fromNow()), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"End Time\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, moment(lop.thoigianbatdau).format('DD/MM/YYYY')), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Start date\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.statusContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(StatusBullet, {\n    className: classes.status,\n    color: statusColors[lop.status],\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, lop.status ? 'Active' : 'Inactive')), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Status\")))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, lop.dssv.length), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Total member\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, moment(lop.thoigianketthuc).format('DD/MM/YYYY')), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"End date\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: e => handleClick(lop._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Link, {\n    color: \"primary\",\n    component: RouterLink,\n    to: \"#\",\n    underline: \"none\",\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, 'View'))))))));\n};\n\nexport default withStyles(styles)(PresencesCard);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Presences\\components\\PresencesCard\\PresencesCard.js"],"names":["React","Link","RouterLink","moment","clsx","withStyles","Card","CardHeader","CardContent","Typography","Grid","Avatar","Button","StatusBullet","URI","styles","statusColors","true","false","PresencesCard","props","className","classes","lop","handleClick","id","console","log","root","hinhdaidien","tenlop","fontWeight","fontSize","tenUser","thoigianketthuc","fromNow","thoigianbatdau","format","statusContainer","status","dssv","length","e","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACIC,IADJ,EAEIC,UAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,IALJ,EAMIT,IANJ,EAOIU,MAPJ,EAQIC,MARJ,QASO,mBATP;AAUA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,GAAT,QAAoB,+BAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,SADW;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA,QACnBC,SADmB,GACSD,KADT,CACnBC,SADmB;AAAA,QACRC,OADQ,GACSF,KADT,CACRE,OADQ;AAAA,QACCC,GADD,GACSH,KADT,CACCG,GADD;;AAG3B,QAAMC,WAAW,GAAGC,EAAE,IAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACH,GAFD;;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAErB,IAAI,CAACkB,OAAO,CAACM,IAAT,EAAeP,SAAf,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,MAAM,EACF,oBAAC,MAAD;AACI,MAAA,GAAG,EACCE,GAAG,CAACM,WAAJ,aACSf,GADT,wBAC0BS,GAAG,CAACM,WAD9B,IAEM,oFAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAUI,IAAA,KAAK,EAAE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BN,GAAG,CAACO,MAA9B,CAVX;AAWI,IAAA,SAAS,EACL,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACO,GADP,EAEI;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,QAAQ,EAAE;AAAhC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,GAAG,CAACU,OADT,CAFJ,CAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAqBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,eAAxB;AAAwC,IAAA,UAAU,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,OAAO,EAAC,QAHZ;AAII,IAAA,OAAO,EAAE,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,MAAM,CAACoB,GAAG,CAACW,eAAL,CAAN,CAA4BC,OAA5B,EADL,CADJ,EAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CANJ,EAcI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhC,MAAM,CAACoB,GAAG,CAACa,cAAL,CAAN,CAA2BC,MAA3B,CACG,YADH,CADL,CADJ,EAMI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CAdJ,EAwBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACgB,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACI,IAAA,SAAS,EAAEhB,OAAO,CAACiB,MADvB;AAEI,IAAA,KAAK,EAAEvB,YAAY,CAACO,GAAG,CAACgB,MAAL,CAFvB;AAGI,IAAA,IAAI,EAAC,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,GAAG,CAACgB,MAAJ,GAAa,QAAb,GAAwB,UAD7B,CANJ,CADJ,EAWI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CAxBJ,CADJ,CADJ,EAyCI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,OAAO,EAAC,QAHZ;AAII,IAAA,OAAO,EAAE,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,GAAG,CAACiB,IAAJ,CAASC,MADd,CADJ,EAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CANJ,EAcI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtC,MAAM,CAACoB,GAAG,CAACW,eAAL,CAAN,CAA4BG,MAA5B,CACG,YADH,CADL,CADJ,EAMI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CAdJ,EAwBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,OAAO,EAAEK,CAAC,IAAIlB,WAAW,CAACD,GAAG,CAACoB,GAAL,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,SAAS,EAAEzC,UAFf;AAGI,IAAA,EAAE,EAAC,GAHP;AAII,IAAA,SAAS,EAAC,MAJd;AAKI,IAAA,OAAO,EAAC,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOK,MAPL,CALJ,CADJ,CAxBJ,CADJ,CAzCJ,CADJ,CArBJ,CADJ;AAgHH,CAvHD;;AAwHA,eAAeG,UAAU,CAACU,MAAD,CAAV,CAAmBI,aAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Typography,\r\n    Grid,\r\n    Link,\r\n    Avatar,\r\n    Button\r\n} from '@material-ui/core';\r\nimport { StatusBullet } from 'components';\r\nimport { URI } from './../../../../constants/types';\r\nimport styles from './styles';\r\n\r\nconst statusColors = {\r\n    true: 'success',\r\n    false: 'danger'\r\n};\r\n\r\nconst PresencesCard = props => {\r\n    const { className, classes, lop } = props;\r\n\r\n    const handleClick = id => {\r\n        console.log(id);\r\n    };\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, className)}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar\r\n                        src={\r\n                            lop.hinhdaidien\r\n                                ? `${URI}/getAvatar/${lop.hinhdaidien}`\r\n                                : 'http://www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=retro'\r\n                        }\r\n                    />\r\n                }\r\n                title={<Typography variant=\"h5\">{lop.tenlop}</Typography>}\r\n                subheader={\r\n                    <Typography variant=\"body2\">\r\n                        by{' '}\r\n                        <span style={{ fontWeight: 'bold', fontSize: '30' }}>\r\n                            {lop.tenUser}\r\n                        </span>\r\n                    </Typography>\r\n                }\r\n            />\r\n            <CardContent>\r\n                <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            spacing={2}\r\n                        >\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\">\r\n                                    {moment(lop.thoigianketthuc).fromNow()}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    End Time\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\">\r\n                                    {moment(lop.thoigianbatdau).format(\r\n                                        'DD/MM/YYYY'\r\n                                    )}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    Start date\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <div className={classes.statusContainer}>\r\n                                    <StatusBullet\r\n                                        className={classes.status}\r\n                                        color={statusColors[lop.status]}\r\n                                        size=\"sm\"\r\n                                    />\r\n                                    <Typography variant=\"h6\">\r\n                                        {lop.status ? 'Active' : 'Inactive'}\r\n                                    </Typography>\r\n                                </div>\r\n                                <Typography variant=\"body2\">Status</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            spacing={2}\r\n                        >\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\">\r\n                                    {lop.dssv.length}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    Total member\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\">\r\n                                    {moment(lop.thoigianketthuc).format(\r\n                                        'DD/MM/YYYY'\r\n                                    )}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    End date\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={e => handleClick(lop._id)}\r\n                                >\r\n                                    <Link\r\n                                        color=\"primary\"\r\n                                        component={RouterLink}\r\n                                        to=\"#\"\r\n                                        underline=\"none\"\r\n                                        variant=\"h6\"\r\n                                    >\r\n                                        {'View'}\r\n                                    </Link>\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\nexport default withStyles(styles)(PresencesCard);\r\n"]},"metadata":{},"sourceType":"module"}