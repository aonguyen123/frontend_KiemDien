{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Dashboard\\\\components\\\\LatestAssigned\\\\LatestAssigned.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport mockData from './data';\nimport { StatusBullet } from 'components';\nimport styles from './styles';\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst LatestOrders = props => {\n  const className = props.className,\n        classes = props.classes;\n\n  const _useState = useState(mockData),\n        _useState2 = _slicedToArray(_useState, 1),\n        orders = _useState2[0];\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Latest Assigned\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Class Name\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Manager Person\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"End Time\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, orders.map(order => React.createElement(TableRow, {\n    hover: true,\n    key: order.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, order.ref), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, order.customer.name), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, moment(order.createdAt).format('DD/MM/YYYY')), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.statusContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(StatusBullet, {\n    className: classes.status,\n    color: statusColors[order.status],\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), order.status))))))))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"View all \", React.createElement(ArrowRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))));\n};\n\nexport default withStyles(styles)(LatestOrders);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\components\\LatestAssigned\\LatestAssigned.js"],"names":["React","useState","clsx","moment","PerfectScrollbar","withStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","ArrowRightIcon","mockData","StatusBullet","styles","statusColors","delivered","pending","refunded","LatestOrders","props","className","classes","orders","root","content","inner","map","order","id","ref","customer","name","createdAt","format","statusContainer","status","actions"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACIC,IADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,WAJJ,EAKIC,MALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,SARJ,EASIC,SATJ,EAUIC,SAVJ,EAWIC,QAXJ,QAYO,mBAZP;AAaA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,QAAP,MAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,SADM;AAEjBC,EAAAA,OAAO,EAAE,MAFQ;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB;;AAMA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,QAClBC,SADkB,GACKD,KADL,CAClBC,SADkB;AAAA,QACPC,OADO,GACKF,KADL,CACPE,OADO;;AAAA,oBAGT3B,QAAQ,CAACiB,QAAD,CAHC;AAAA;AAAA,QAGnBW,MAHmB;;AAK1B,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE3B,IAAI,CAAC0B,OAAO,CAACE,IAAT,EAAeH,SAAf,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,iBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEC,OAAO,CAACG,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ,CADJ,EASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,MAAM,CAACI,GAAP,CAAWC,KAAK,IACb,oBAAC,QAAD;AAAU,IAAA,KAAK,MAAf;AAAgB,IAAA,GAAG,EAAEA,KAAK,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,KAAK,CAACE,GAAlB,CADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,QAAN,CAAeC,IADpB,CAFJ,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnC,MAAM,CAAC+B,KAAK,CAACK,SAAP,CAAN,CAAwBC,MAAxB,CACG,YADH,CADL,CALJ,EAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EACLZ,OAAO,CAACa,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,YAAD;AACI,IAAA,SAAS,EAAEb,OAAO,CAACc,MADvB;AAEI,IAAA,KAAK,EACDrB,YAAY,CACRa,KAAK,CAACQ,MADE,CAHpB;AAOI,IAAA,IAAI,EAAC,IAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAcKR,KAAK,CAACQ,MAdX,CADJ,CAVJ,CADH,CADL,CATJ,CADJ,CADJ,CADJ,CALJ,EAsDI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtDJ,EAuDI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEd,OAAO,CAACe,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAqC,IAAA,OAAO,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACa,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CADJ,CAvDJ,CADJ;AA+DH,CApED;;AAqEA,eAAetC,UAAU,CAACe,MAAD,CAAV,CAAmBK,YAAnB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardHeader,\n    CardContent,\n    Button,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport mockData from './data';\nimport { StatusBullet } from 'components';\nimport styles from './styles';\n\nconst statusColors = {\n    delivered: 'success',\n    pending: 'info',\n    refunded: 'danger'\n};\n\nconst LatestOrders = props => {\n    const { className, classes } = props;\n\n    const [orders] = useState(mockData);\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardHeader\n                title=\"Latest Assigned\"\n            />\n            <Divider />\n            <CardContent className={classes.content}>\n                <PerfectScrollbar>\n                    <div className={classes.inner}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Class Name</TableCell>\n                                    <TableCell>Manager Person</TableCell>\n                                    <TableCell>End Time</TableCell>\n                                    <TableCell>Status</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {orders.map(order => (\n                                    <TableRow hover key={order.id}>\n                                        <TableCell>{order.ref}</TableCell>\n                                        <TableCell>\n                                            {order.customer.name}\n                                        </TableCell>\n                                        <TableCell>\n                                            {moment(order.createdAt).format(\n                                                'DD/MM/YYYY'\n                                            )}\n                                        </TableCell>\n                                        <TableCell>\n                                            <div\n                                                className={\n                                                    classes.statusContainer\n                                                }\n                                            >\n                                                <StatusBullet\n                                                    className={classes.status}\n                                                    color={\n                                                        statusColors[\n                                                            order.status\n                                                        ]\n                                                    }\n                                                    size=\"sm\"\n                                                />\n                                                {order.status}\n                                            </div>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </PerfectScrollbar>\n            </CardContent>\n            <Divider />\n            <CardActions className={classes.actions}>\n                <Button color=\"primary\" size=\"small\" variant=\"text\">\n                    View all <ArrowRightIcon />\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\nexport default withStyles(styles)(LatestOrders);\n"]},"metadata":{},"sourceType":"module"}