{"ast":null,"code":"import { UPLOAD_PICTURE, GET_ERRORS, UPDATE_INFO, REMOVE_PICTURE, UPDATE_PASSWORD, CLEARN_ERRORS } from './../constants/types';\nimport callAPI from './../common/callApi';\nexport const uploadPicture = (file, idUser) => dispatch => {\n  const formData = new FormData();\n  formData.set('idUser', idUser);\n  formData.append('avatar', file);\n  callAPI('/updateAvatar', 'POST', formData).then(res => {\n    const filePath = res.data.filePath;\n    const fileName = filePath.split('/')[1];\n    dispatch({\n      type: UPLOAD_PICTURE,\n      payload: fileName\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const removePicture = idUser => dispatch => {\n  callAPI('/removeAvatar', 'PUT', {\n    idUser\n  }).then(res => {\n    dispatch({\n      type: REMOVE_PICTURE,\n      payload: res.data.success\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const updateInfo = user => dispatch => {\n  callAPI('/updateInfo', 'PUT', user).then(res => {\n    dispatch({\n      type: UPDATE_INFO,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const updatePassword = user => dispatch => {\n  callAPI('/updatePassword', 'PUT', {\n    user\n  }).then(res => {\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEARN_ERRORS,\n      payload: {}\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\actions\\account.js"],"names":["UPLOAD_PICTURE","GET_ERRORS","UPDATE_INFO","REMOVE_PICTURE","UPDATE_PASSWORD","CLEARN_ERRORS","callAPI","uploadPicture","file","idUser","dispatch","formData","FormData","set","append","then","res","filePath","data","fileName","split","type","payload","catch","err","response","removePicture","success","updateInfo","user","updatePassword"],"mappings":"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","sourcesContent":["import { \r\n    UPLOAD_PICTURE, GET_ERRORS, UPDATE_INFO, REMOVE_PICTURE, UPDATE_PASSWORD,\r\n    CLEARN_ERRORS \r\n} from './../constants/types';\r\nimport callAPI from './../common/callApi';\r\n\r\nexport const uploadPicture = (file, idUser) => dispatch => {\r\n    const formData = new FormData();\r\n    formData.set('idUser', idUser);\r\n    formData.append('avatar', file);\r\n    callAPI('/updateAvatar', 'POST', formData)\r\n        .then(res => {\r\n            const filePath = res.data.filePath;\r\n            const fileName= filePath.split('/')[1];\r\n            dispatch({\r\n                type: UPLOAD_PICTURE,\r\n                payload: fileName\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};\r\nexport const removePicture = idUser => dispatch => {\r\n    callAPI('/removeAvatar', 'PUT', {idUser})\r\n        .then(res => {\r\n            dispatch({\r\n                type: REMOVE_PICTURE,\r\n                payload: res.data.success\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        });\r\n};\r\nexport const updateInfo = user => dispatch => {\r\n    callAPI('/updateInfo', 'PUT', user)\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPDATE_INFO,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};\r\nexport const updatePassword = user => dispatch => {\r\n    callAPI('/updatePassword', 'PUT', {user})\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPDATE_PASSWORD,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: CLEARN_ERRORS,\r\n                payload: {}\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};"]},"metadata":{},"sourceType":"module"}