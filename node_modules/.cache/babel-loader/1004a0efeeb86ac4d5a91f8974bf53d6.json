{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Dashboard\\\\components\\\\MemberByPresence\\\\chart.js\";\nimport React from 'react';\nimport palette from 'theme/palette';\nimport PresentIcon from '@material-ui/icons/Spellcheck';\nimport ResonIcon from '@material-ui/icons/Warning';\nimport AbsentIcon from '@material-ui/icons/CancelPresentation';\nimport moment from 'moment';\nexport const fillData = (dataPresences, index) => {\n  let data;\n  const checkDates = dataPresences.checkDates,\n        classPresences = dataPresences.classPresences;\n  const monthCurrent = moment().format('MM');\n  let listDataPresent = 0;\n  let listDataReason = 0;\n  let listDataAbsent = 0;\n  let total = 0;\n\n  if (classPresences.length !== 0) {\n    classPresences.forEach(lop => {\n      checkDates.forEach(item => {\n        if (item.idClass === lop._id) {\n          total += item.dateList.length * lop.dssv.length;\n        }\n      });\n      lop.dssv.forEach(sv => {\n        sv.checkDate.forEach(date => {\n          if (moment(date.date, 'DD/MM/YYYY').format('MM') === monthCurrent && date.status) {\n            listDataPresent++;\n          } else if (moment(date.date, 'DD/MM/YYYY').format('MM') === monthCurrent && !date.status) {\n            listDataReason++;\n          }\n        });\n      });\n    });\n    listDataAbsent = total - (listDataPresent + listDataReason);\n  } else {\n    data = null;\n  } // dataClass.forEach(lop => {\n  //     presences.presenceList.forEach(kd => {\n  //     });\n  // });\n  //const start = moment(new Date()).startOf('isoWeek');\n  // presences.forEach(e => {\n  //     e.presenceList.forEach(item => {\n  //         if(moment(item.checkDate, 'DD/MM/YYYY').isSame(start, 'isoWeek') && item.status)\n  //         {\n  //             listDataPresent.push(item);\n  //         }\n  //         else if(moment(item.checkDate, 'DD/MM/YYYY').isSame(start, 'isoWeek') && !item.status)\n  //         {\n  //             listDataReason.push(item);\n  //         }\n  //     });\n  // });\n  // console.log(listDataPresent.length);\n  // console.log(listDataReason.length);\n  //console.log(moment().isBetween(start, end));\n\n\n  data = {\n    datasets: [{\n      data: [Math.round(listDataPresent / (listDataPresent + listDataAbsent + listDataReason) * 100), Math.round(listDataAbsent / (listDataPresent + listDataAbsent + listDataReason) * 100), Math.round(listDataReason / (listDataPresent + listDataAbsent + listDataReason) * 100)],\n      backgroundColor: [palette.primary.main, palette.error.main, palette.warning.main],\n      borderWidth: 5,\n      borderColor: palette.white,\n      hoverBorderColor: palette.white\n    }],\n    labels: ['Present', 'Absent', 'Reason']\n  };\n  return {\n    data\n  };\n};\nexport const statusPresences = [{\n  title: 'Present',\n  value: '63',\n  icon: React.createElement(PresentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }),\n  color: palette.primary.main\n}, {\n  title: 'Absent',\n  value: '15',\n  icon: React.createElement(AbsentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }),\n  color: palette.error.main\n}, {\n  title: 'Reson',\n  value: '23',\n  icon: React.createElement(ResonIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }),\n  color: palette.warning.main\n}];\nexport const options = {\n  legend: {\n    display: false\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  layout: {\n    padding: 0\n  },\n  tooltips: {\n    enabled: true,\n    mode: 'index',\n    intersect: false,\n    borderWidth: 1,\n    borderColor: palette.divider,\n    backgroundColor: palette.white,\n    titleFontColor: palette.text.primary,\n    bodyFontColor: palette.text.secondary,\n    footerFontColor: palette.text.secondary\n  }\n};","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\components\\MemberByPresence\\chart.js"],"names":["React","palette","PresentIcon","ResonIcon","AbsentIcon","moment","fillData","dataPresences","index","data","checkDates","classPresences","monthCurrent","format","listDataPresent","listDataReason","listDataAbsent","total","length","forEach","lop","item","idClass","_id","dateList","dssv","sv","checkDate","date","status","datasets","Math","round","backgroundColor","primary","main","error","warning","borderWidth","borderColor","white","hoverBorderColor","labels","statusPresences","title","value","icon","color","options","legend","display","responsive","maintainAspectRatio","layout","padding","tooltips","enabled","mode","intersect","divider","titleFontColor","text","bodyFontColor","secondary","footerFontColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AAC9C,MAAIC,IAAJ;AAD8C,QAEtCC,UAFsC,GAEPH,aAFO,CAEtCG,UAFsC;AAAA,QAE1BC,cAF0B,GAEPJ,aAFO,CAE1BI,cAF0B;AAG9C,QAAMC,YAAY,GAAGP,MAAM,GAAGQ,MAAT,CAAgB,IAAhB,CAArB;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAGN,cAAc,CAACO,MAAf,KAA0B,CAA7B,EACA;AACIP,IAAAA,cAAc,CAACQ,OAAf,CAAuBC,GAAG,IAAI;AAE1BV,MAAAA,UAAU,CAACS,OAAX,CAAmBE,IAAI,IAAI;AACvB,YAAGA,IAAI,CAACC,OAAL,KAAiBF,GAAG,CAACG,GAAxB,EACA;AACIN,UAAAA,KAAK,IAAII,IAAI,CAACG,QAAL,CAAcN,MAAd,GAAuBE,GAAG,CAACK,IAAJ,CAASP,MAAzC;AACH;AACJ,OALD;AAOAE,MAAAA,GAAG,CAACK,IAAJ,CAASN,OAAT,CAAiBO,EAAE,IAAI;AACnBA,QAAAA,EAAE,CAACC,SAAH,CAAaR,OAAb,CAAqBS,IAAI,IAAI;AACzB,cAAGvB,MAAM,CAACuB,IAAI,CAACA,IAAN,EAAY,YAAZ,CAAN,CAAgCf,MAAhC,CAAuC,IAAvC,MAAiDD,YAAjD,IAAiEgB,IAAI,CAACC,MAAzE,EACA;AACIf,YAAAA,eAAe;AAClB,WAHD,MAIK,IAAGT,MAAM,CAACuB,IAAI,CAACA,IAAN,EAAY,YAAZ,CAAN,CAAgCf,MAAhC,CAAuC,IAAvC,MAAiDD,YAAjD,IAAiE,CAACgB,IAAI,CAACC,MAA1E,EACL;AACId,YAAAA,cAAc;AACjB;AACJ,SATD;AAUH,OAXD;AAYH,KArBD;AAsBAC,IAAAA,cAAc,GAAGC,KAAK,IAAIH,eAAe,GAAGC,cAAtB,CAAtB;AACH,GAzBD,MA2BA;AACIN,IAAAA,IAAI,GAAG,IAAP;AACH,GAtC6C,CAuC9C;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AAEAA,EAAAA,IAAI,GAAG;AACHqB,IAAAA,QAAQ,EAAE,CACN;AACIrB,MAAAA,IAAI,EAAE,CACFsB,IAAI,CAACC,KAAL,CAAWlB,eAAe,IAAIA,eAAe,GAAGE,cAAlB,GAAmCD,cAAvC,CAAf,GAAwE,GAAnF,CADE,EAEFgB,IAAI,CAACC,KAAL,CAAWhB,cAAc,IAAIF,eAAe,GAAGE,cAAlB,GAAmCD,cAAvC,CAAd,GAAuE,GAAlF,CAFE,EAGFgB,IAAI,CAACC,KAAL,CAAWjB,cAAc,IAAID,eAAe,GAAGE,cAAlB,GAAmCD,cAAvC,CAAd,GAAuE,GAAlF,CAHE,CADV;AAMIkB,MAAAA,eAAe,EAAE,CACbhC,OAAO,CAACiC,OAAR,CAAgBC,IADH,EAEblC,OAAO,CAACmC,KAAR,CAAcD,IAFD,EAGblC,OAAO,CAACoC,OAAR,CAAgBF,IAHH,CANrB;AAWIG,MAAAA,WAAW,EAAE,CAXjB;AAYIC,MAAAA,WAAW,EAAEtC,OAAO,CAACuC,KAZzB;AAaIC,MAAAA,gBAAgB,EAAExC,OAAO,CAACuC;AAb9B,KADM,CADP;AAkBHE,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB;AAlBL,GAAP;AAoBA,SAAO;AACHjC,IAAAA;AADG,GAAP;AAGH,CAzFM;AA0FP,OAAO,MAAMkC,eAAe,GAAG,CAC3B;AACIC,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,KAAK,EAAE,IAFX;AAGIC,EAAAA,IAAI,EAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAIIC,EAAAA,KAAK,EAAE9C,OAAO,CAACiC,OAAR,CAAgBC;AAJ3B,CAD2B,EAO3B;AACIS,EAAAA,KAAK,EAAE,QADX;AAEIC,EAAAA,KAAK,EAAE,IAFX;AAGIC,EAAAA,IAAI,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAIIC,EAAAA,KAAK,EAAE9C,OAAO,CAACmC,KAAR,CAAcD;AAJzB,CAP2B,EAa3B;AACIS,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,KAAK,EAAE,IAFX;AAGIC,EAAAA,IAAI,EAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAIIC,EAAAA,KAAK,EAAE9C,OAAO,CAACoC,OAAR,CAAgBF;AAJ3B,CAb2B,CAAxB;AAoBP,OAAO,MAAMa,OAAO,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADW;AAInBC,EAAAA,UAAU,EAAE,IAJO;AAKnBC,EAAAA,mBAAmB,EAAE,KALF;AAMnBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GANW;AAOnBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,IADH;AAENC,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,SAAS,EAAE,KAHL;AAINpB,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,WAAW,EAAEtC,OAAO,CAAC0D,OALf;AAMN1B,IAAAA,eAAe,EAAEhC,OAAO,CAACuC,KANnB;AAONoB,IAAAA,cAAc,EAAE3D,OAAO,CAAC4D,IAAR,CAAa3B,OAPvB;AAQN4B,IAAAA,aAAa,EAAE7D,OAAO,CAAC4D,IAAR,CAAaE,SARtB;AASNC,IAAAA,eAAe,EAAE/D,OAAO,CAAC4D,IAAR,CAAaE;AATxB;AAPS,CAAhB","sourcesContent":["import React from 'react';\r\nimport palette from 'theme/palette';\r\nimport PresentIcon from '@material-ui/icons/Spellcheck';\r\nimport ResonIcon from '@material-ui/icons/Warning';\r\nimport AbsentIcon from '@material-ui/icons/CancelPresentation';\r\nimport moment from 'moment';\r\n\r\nexport const fillData = (dataPresences, index) => {\r\n    let data;\r\n    const { checkDates, classPresences } = dataPresences;\r\n    const monthCurrent = moment().format('MM');\r\n    let listDataPresent = 0;\r\n    let listDataReason = 0;\r\n    let listDataAbsent = 0;\r\n    let total = 0;\r\n\r\n    if(classPresences.length !== 0)\r\n    {\r\n        classPresences.forEach(lop => {\r\n\r\n            checkDates.forEach(item => {\r\n                if(item.idClass === lop._id)\r\n                {\r\n                    total += item.dateList.length * lop.dssv.length;\r\n                }\r\n            });\r\n    \r\n            lop.dssv.forEach(sv => {\r\n                sv.checkDate.forEach(date => {\r\n                    if(moment(date.date, 'DD/MM/YYYY').format('MM') === monthCurrent && date.status)\r\n                    {\r\n                        listDataPresent++;\r\n                    }\r\n                    else if(moment(date.date, 'DD/MM/YYYY').format('MM') === monthCurrent && !date.status)\r\n                    {\r\n                        listDataReason++;\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        listDataAbsent = total - (listDataPresent + listDataReason);\r\n    }\r\n    else\r\n    {\r\n        data = null;\r\n    }\r\n    // dataClass.forEach(lop => {\r\n    //     presences.presenceList.forEach(kd => {\r\n           \r\n    //     });\r\n    // });\r\n\r\n    //const start = moment(new Date()).startOf('isoWeek');\r\n\r\n    \r\n    // presences.forEach(e => {\r\n    //     e.presenceList.forEach(item => {\r\n    //         if(moment(item.checkDate, 'DD/MM/YYYY').isSame(start, 'isoWeek') && item.status)\r\n    //         {\r\n    //             listDataPresent.push(item);\r\n    //         }\r\n    //         else if(moment(item.checkDate, 'DD/MM/YYYY').isSame(start, 'isoWeek') && !item.status)\r\n    //         {\r\n    //             listDataReason.push(item);\r\n    //         }\r\n    //     });\r\n    // });\r\n        \r\n    // console.log(listDataPresent.length);\r\n    // console.log(listDataReason.length);\r\n\r\n    //console.log(moment().isBetween(start, end));\r\n\r\n    data = {\r\n        datasets: [\r\n            {\r\n                data: [\r\n                    Math.round(listDataPresent / (listDataPresent + listDataAbsent + listDataReason) * 100),\r\n                    Math.round(listDataAbsent / (listDataPresent + listDataAbsent + listDataReason) * 100),\r\n                    Math.round(listDataReason / (listDataPresent + listDataAbsent + listDataReason) * 100)\r\n                ],\r\n                backgroundColor: [\r\n                    palette.primary.main,\r\n                    palette.error.main,\r\n                    palette.warning.main\r\n                ],\r\n                borderWidth: 5,\r\n                borderColor: palette.white,\r\n                hoverBorderColor: palette.white\r\n            }\r\n        ],\r\n        labels: ['Present', 'Absent', 'Reason']\r\n    };\r\n    return {\r\n        data\r\n    };\r\n};\r\nexport const statusPresences = [\r\n    {\r\n        title: 'Present',\r\n        value: '63',\r\n        icon: <PresentIcon />,\r\n        color: palette.primary.main\r\n    },\r\n    {\r\n        title: 'Absent',\r\n        value: '15',\r\n        icon: <AbsentIcon />,\r\n        color: palette.error.main\r\n    },\r\n    {\r\n        title: 'Reson',\r\n        value: '23',\r\n        icon: <ResonIcon />,\r\n        color: palette.warning.main\r\n    }\r\n];\r\nexport const options = {\r\n    legend: {\r\n        display: false\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    layout: { padding: 0 },\r\n    tooltips: {\r\n        enabled: true,\r\n        mode: 'index',\r\n        intersect: false,\r\n        borderWidth: 1,\r\n        borderColor: palette.divider,\r\n        backgroundColor: palette.white,\r\n        titleFontColor: palette.text.primary,\r\n        bodyFontColor: palette.text.secondary,\r\n        footerFontColor: palette.text.secondary\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}