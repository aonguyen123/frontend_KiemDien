{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\SignIn\\\\SignIn.js\";\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from './../../actions/authentication';\nimport { closeNotify } from './../../actions/notify';\nimport { LoadingButton } from 'components';\nimport styles from './styles';\n\nconst SignIn = props => {\n  const errors = props.errors,\n        history = props.history,\n        login = props.login,\n        classes = props.classes,\n        auth = props.auth,\n        showNotify = props.showNotify,\n        closeNotify = props.closeNotify;\n\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loadingButton = _useState4[0],\n        setLoadingButton = _useState4[1];\n\n  useEffect(() => {\n    setLoadingButton(false);\n  }, [errors]);\n  useEffect(() => {\n    if (localStorage.jwtToken) {\n      history.push('/');\n    }\n  });\n\n  const handleChange = e => {\n    setValue(_objectSpread({}, value, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    setLoadingButton(true);\n    login(value, history);\n  };\n\n  const setCloseNotify = () => {\n    closeNotify();\n  };\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    onChange: handleChange,\n    error: errors.email ? true : false,\n    helperText: errors.email ? errors.email : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: handleChange,\n    error: errors.password ? true : false,\n    helperText: errors.password ? errors.password : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      value: \"remember\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }),\n    label: \"Remember me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: loadingButton,\n    className: classes.submit,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Sign In\", loadingButton && React.createElement(LoadingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Link, {\n    color: \"primary\",\n    component: RouterLink,\n    to: \"#\",\n    underline: \"none\",\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, 'Forgot password?'))))));\n};\n\nSignIn.propTypes = {\n  errors: PropTypes.object,\n  login: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  showNotify: state.showNotify.isShow\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  closeNotify\n})(withRouter(withStyles(styles)(SignIn)));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\SignIn\\SignIn.js"],"names":["React","useState","useEffect","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","RouterLink","withRouter","Grid","LockOutlinedIcon","Typography","withStyles","Container","connect","PropTypes","login","closeNotify","LoadingButton","styles","SignIn","props","errors","history","classes","auth","showNotify","email","password","value","setValue","loadingButton","setLoadingButton","localStorage","jwtToken","push","handleChange","e","target","name","handleClick","preventDefault","setCloseNotify","paper","avatar","form","wrapper","submit","propTypes","object","func","mapStateToProps","state","isShow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { login } from './../../actions/authentication';\nimport { closeNotify } from './../../actions/notify';\nimport { LoadingButton } from 'components';\nimport styles from './styles';\n\nconst SignIn = props => {\n    const { errors, history, login, classes, auth, showNotify, closeNotify } = props;\n    const [value, setValue] = useState({\n        email: '',\n        password: ''\n    });\n    const [loadingButton, setLoadingButton] = useState(false);\n\n    useEffect(() => {\n        setLoadingButton(false);\n    }, [errors]);\n    useEffect(() => {\n        if(localStorage.jwtToken)\n        {\n            history.push('/');\n        }\n    });\n\n    const handleChange = e => {\n        setValue({\n            ...value,\n            [e.target.name]: e.target.value\n        })\n    }\n    const handleClick = e => {\n        e.preventDefault();\n        setLoadingButton(true);\n        login(value, history);\n    }\n    const setCloseNotify = () => {\n        closeNotify();\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={handleChange}\n                        error={errors.email ? true : false}\n                        helperText={\n                            errors.email ? errors.email: null\n                        }\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={handleChange}\n                        error={errors.password ? true : false}\n                        helperText={\n                            errors.password ? errors.password : null\n                        }\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <div className={classes.wrapper}>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loadingButton}\n                            className={classes.submit}\n                            onClick={handleClick}\n                        >\n                            Sign In\n                            {\n                                loadingButton && <LoadingButton />\n                            }\n                        </Button>\n                    </div>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link\n                                color=\"primary\"\n                                component={RouterLink}\n                                to=\"#\"\n                                underline=\"none\"\n                                variant=\"h6\"\n                            >\n                                {'Forgot password?'}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n};\nSignIn.propTypes = {\n    errors: PropTypes.object,\n    login: PropTypes.func\n}\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors,\n    showNotify: state.showNotify.isShow\n});\nexport default connect(mapStateToProps, { login, closeNotify } )(withRouter(withStyles(styles)(SignIn)));"]},"metadata":{},"sourceType":"module"}