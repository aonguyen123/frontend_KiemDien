{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\components\\\\AccountProfile\\\\AccountProfile.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from '@material-ui/core';\nimport { URI } from './../../../../constants/types';\nimport { LoadingButton } from 'components';\nimport styles from './styles';\n\nconst AccountProfile = props => {\n  const className = props.className,\n        classes = props.classes,\n        account = props.account,\n        uploadPictureAccount = props.uploadPictureAccount,\n        removePictureAccount = props.removePictureAccount;\n\n  let _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 1),\n      avatar = _useState2[0];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loadingButtonUpload = _useState4[0],\n        setLoadingButtonUpload = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loadingButtonRemove = _useState6[0],\n        setLoadingButtonRemove = _useState6[1];\n\n  const profileComplete = account => {\n    let complete = 0;\n\n    if (account.firstName) {\n      complete += 20;\n    }\n\n    if (account.lastName) {\n      complete += 20;\n    }\n\n    if (account.sdt) {\n      complete += 20;\n    }\n\n    if (account.city) {\n      complete += 20;\n    }\n\n    if (account.avatar) {\n      complete += 20;\n    }\n\n    return complete;\n  };\n\n  const handleChange = e => {\n    setLoadingButtonUpload(true);\n    avatar = e.target.files[0];\n\n    if (avatar) {\n      uploadPictureAccount(avatar, account._id);\n    }\n  };\n\n  const handleRemoveAvatar = () => {\n    setLoadingButtonRemove(true);\n    removePictureAccount(account._id);\n  };\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"\".concat(account.firstName, \" \").concat(account.lastName)), React.createElement(Typography, {\n    className: classes.locationText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, account.city, \", \", account.country), React.createElement(Typography, {\n    className: classes.dateText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, moment().format('hh:mm A'), \" (\", 'GTM-7', \")\")), React.createElement(Avatar, {\n    className: classes.avatar,\n    src: account.avatar ? \"\".concat(URI, \"/getAvatar/\").concat(account.avatar) : \"//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Profile Completeness: \".concat(profileComplete(account), \"%\")), React.createElement(LinearProgress, {\n    value: profileComplete(account),\n    variant: \"determinate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"text-button-file\",\n    multiple: true,\n    type: \"file\",\n    onChange: handleChange //disabled={isLoadingButtonUpload ? true : false}\n    ,\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"text-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Button, {\n    component: \"span\",\n    className: classes.uploadButton,\n    color: \"primary\",\n    variant: \"text\",\n    disabled: loadingButtonUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, loadingButtonUpload && React.createElement(LoadingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), \"Upload avatar\")), React.createElement(Button, {\n    variant: \"text\",\n    onClick: handleRemoveAvatar,\n    disabled: loadingButtonRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, loadingButtonRemove && React.createElement(LoadingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), \"Remove avatar\")));\n};\n\nexport default withStyles(styles)(AccountProfile);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\components\\AccountProfile\\AccountProfile.js"],"names":["React","useState","clsx","moment","withStyles","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","URI","LoadingButton","styles","AccountProfile","props","className","classes","account","uploadPictureAccount","removePictureAccount","avatar","loadingButtonUpload","setLoadingButtonUpload","loadingButtonRemove","setLoadingButtonRemove","profileComplete","complete","firstName","lastName","sdt","city","handleChange","e","target","files","_id","handleRemoveAvatar","root","details","locationText","country","dateText","format","progress","input","uploadButton"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Typography,\n    Divider,\n    Button,\n    LinearProgress\n} from '@material-ui/core';\nimport { URI } from './../../../../constants/types';\nimport { LoadingButton } from 'components';\nimport styles from './styles';\n\nconst AccountProfile = props => {\n    const { className, classes, account, uploadPictureAccount, removePictureAccount } = props;\n    let [avatar] = useState('');\n    const [loadingButtonUpload, setLoadingButtonUpload] = useState(false);\n    const [loadingButtonRemove, setLoadingButtonRemove] = useState(false);\n\n    const profileComplete = account => {\n        let complete = 0;\n            if (account.firstName) {\n                complete += 20;\n            }\n            if (account.lastName) {\n                complete += 20;\n            }\n            if (account.sdt) {\n                complete += 20;\n            }\n            if (account.city) {\n                complete += 20;\n            }\n            if (account.avatar) {\n                complete += 20;\n            }\n            return complete;\n    };\n    const handleChange = e => {\n        setLoadingButtonUpload(true);\n        avatar = e.target.files[0];\n        if (avatar) {\n            uploadPictureAccount(avatar, account._id);\n        }\n    };\n    const handleRemoveAvatar = () => {\n        setLoadingButtonRemove(true);\n        removePictureAccount(account._id);\n    };\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardContent>\n                <div className={classes.details}>\n                    <div>\n                        <Typography gutterBottom variant=\"h2\">\n                            {`${account.firstName} ${account.lastName}`}\n                        </Typography>\n                        <Typography\n                            className={classes.locationText}\n                            color=\"textSecondary\"\n                            variant=\"body1\"\n                        >\n                            {account.city}, {account.country}\n                        </Typography>\n                        <Typography\n                            className={classes.dateText}\n                            color=\"textSecondary\"\n                            variant=\"body1\"\n                        >\n                            {moment().format('hh:mm A')} ({'GTM-7'})\n                        </Typography>\n                    </div>\n                    <Avatar\n                        className={classes.avatar}\n                        src={\n                            account.avatar\n                                ? `${URI}/getAvatar/${account.avatar}`\n                                : `//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm`\n                        }\n                    />\n                </div>\n                <div className={classes.progress}>\n                    <Typography variant=\"body1\">\n                        {`Profile Completeness: ${profileComplete(account)}%`}\n                    </Typography>\n                    <LinearProgress\n                        value={profileComplete(account)}\n                        variant=\"determinate\"\n                    />\n                </div>\n            </CardContent>\n            <Divider />\n            <CardActions>\n                <input\n                    accept=\"image/*\"\n                    className={classes.input}\n                    id=\"text-button-file\"\n                    multiple\n                    type=\"file\"\n                    onChange={handleChange}\n                    //disabled={isLoadingButtonUpload ? true : false}\n                    value=\"\"\n                />\n                <label htmlFor=\"text-button-file\">\n                    <Button\n                        component=\"span\"\n                        className={classes.uploadButton}\n                        color=\"primary\"\n                        variant=\"text\"\n                        disabled={loadingButtonUpload}\n                    >\n                        {loadingButtonUpload && <LoadingButton />}\n                        Upload avatar\n                    </Button>\n                </label>\n                <Button \n                    variant=\"text\" \n                    onClick={handleRemoveAvatar}\n                    disabled={loadingButtonRemove}\n                >\n                    {loadingButtonRemove && <LoadingButton />}\n                    Remove avatar\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\nexport default withStyles(styles)(AccountProfile);"]},"metadata":{},"sourceType":"module"}