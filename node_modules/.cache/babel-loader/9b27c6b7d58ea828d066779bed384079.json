{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Assignes\\\\components\\\\AssignesToolbar\\\\AssignesToolbar.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport { Button, MenuItem, Menu, Typography } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { SearchInput } from 'components';\nimport styles from './styles';\nconst options = ['All class', 'Class not managed', 'Managed class'];\n\nconst ProductsToolbar = props => {\n  const className = props.className,\n        classes = props.classes;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        anchorEl = _useState2[0],\n        setAnchorEl = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedIndex = _useState4[0],\n        setSelectedIndex = _useState4[1];\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  const handleClose = event => {\n    setAnchorEl(null);\n  };\n\n  return React.createElement(\"div\", {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    className: classes.searchInput,\n    placeholder: \"Search class\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Button, {\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    variant: \"text\",\n    className: classes.paperButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, options[selectedIndex]), React.createElement(ArrowDropDownIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, options.map((option, index) => React.createElement(MenuItem, {\n    onClick: event => handleMenuItemClick(event, index),\n    key: option,\n    selected: index === selectedIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, option)))));\n};\n\nexport default withStyles(styles)(ProductsToolbar);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Assignes\\components\\AssignesToolbar\\AssignesToolbar.js"],"names":["React","useState","clsx","withStyles","Button","MenuItem","Menu","Typography","ArrowDropDownIcon","SearchInput","styles","options","ProductsToolbar","props","className","classes","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","handleClick","event","currentTarget","handleMenuItemClick","index","handleClose","root","row","searchInput","spacer","paperButton","Boolean","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    MenuItem,\r\n    Menu,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { SearchInput } from 'components';\r\nimport styles from './styles';\r\n\r\nconst options = ['All class', 'Class not managed', 'Managed class'];\r\nconst ProductsToolbar = props => {\r\n    const { className, classes } = props;\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClose = event => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={clsx(classes.root, className)}>\r\n            <div className={classes.row}>\r\n                <SearchInput\r\n                    className={classes.searchInput}\r\n                    placeholder=\"Search class\"\r\n                />\r\n            </div>\r\n            <div className={classes.row}>\r\n                <span className={classes.spacer} />\r\n                <Button\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick}\r\n                    variant=\"text\"\r\n                    className={classes.paperButton}\r\n                >\r\n                    <Typography variant=\"h6\">{options[selectedIndex]}</Typography>\r\n                    <ArrowDropDownIcon />\r\n                </Button>\r\n\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    {\r\n                        options.map((option, index) => (\r\n                            <MenuItem \r\n                                onClick={event => handleMenuItemClick(event, index)}\r\n                                key={option}\r\n                                selected={index === selectedIndex}\r\n                            >\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(ProductsToolbar);\r\n"]},"metadata":{},"sourceType":"module"}