{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\layouts\\\\Main\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Sidebar, Topbar, Footer } from './components';\nimport { logout } from './../../actions/authentication';\nimport { getCity } from './../../actions/city';\nimport styles from './styles';\n\nconst Main = props => {\n  const children = props.children,\n        user = props.user,\n        logout = props.logout,\n        classes = props.classes,\n        history = props.history,\n        citys = props.citys,\n        getCity = props.getCity;\n  useEffect(() => {\n    if (citys.length === 0) {\n      getCity();\n    }\n\n    if (!localStorage.jwtToken) {\n      history.push('/sign-in');\n    }\n  }, [history, getCity, citys]);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openSidebar = _useState2[0],\n        setOpenSidebar = _useState2[1];\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n  return React.createElement(\"div\", {\n    className: clsx({\n      [classes.root]: true,\n      [classes.shiftContent]: isDesktop\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Topbar, {\n    onSidebarOpen: handleSidebarOpen,\n    logout: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    onClose: handleSidebarClose,\n    open: shouldOpenSidebar,\n    variant: isDesktop ? 'persistent' : 'temporary',\n    logout: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, children, Object.entries(user).length !== 0 ? React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : null));\n};\n\nMain.propTypes = {\n  children: PropTypes.node,\n  user: PropTypes.object,\n  logout: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  users: state.users.users,\n  isAuth: state.auth.isAuthenticated,\n  citys: state.citys\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  getCity\n})(withRouter(withStyles(styles)(Main)));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\layouts\\Main\\Main.js"],"names":["React","useState","useEffect","PropTypes","clsx","withStyles","useTheme","useMediaQuery","connect","withRouter","Sidebar","Topbar","Footer","logout","getCity","styles","Main","props","children","user","classes","history","citys","length","localStorage","jwtToken","push","theme","isDesktop","breakpoints","up","defaultMatches","openSidebar","setOpenSidebar","handleSidebarOpen","handleSidebarClose","shouldOpenSidebar","root","shiftContent","content","Object","entries","propTypes","node","object","func","mapStateToProps","state","auth","users","isAuth","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { Sidebar, Topbar, Footer } from './components';\nimport { logout } from './../../actions/authentication';\nimport { getCity } from './../../actions/city';\nimport styles from './styles';\n\nconst Main = props => {\n    const { children, user, logout, classes, history, citys, getCity } = props;\n    useEffect(() => {\n        if(citys.length === 0)\n        {\n            getCity();    \n        }\n        if(!localStorage.jwtToken)\n        {\n            history.push('/sign-in');\n        }\n    },[history, getCity, citys]);\n    const theme = useTheme();\n    const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n        defaultMatches: true\n    });\n\n    const [openSidebar, setOpenSidebar] = useState(false);\n\n    const handleSidebarOpen = () => {\n        setOpenSidebar(true);\n    };\n\n    const handleSidebarClose = () => {\n        setOpenSidebar(false);\n    };\n\n    const shouldOpenSidebar = isDesktop ? true : openSidebar;\n    return (\n        <div\n            className={clsx({\n                [classes.root]: true,\n                [classes.shiftContent]: isDesktop\n            })}\n        >\n            <Topbar \n                onSidebarOpen={handleSidebarOpen}\n                logout={logout}\n            />\n            <Sidebar\n                onClose={handleSidebarClose}\n                open={shouldOpenSidebar}\n                variant={isDesktop ? 'persistent' : 'temporary'}\n                logout={logout}\n            />\n            <main className={classes.content}>\n                {children}\n                { (Object.entries(user).length !== 0) ? <Footer /> : null }\n            </main>\n        </div>\n    );\n};\n\nMain.propTypes = {\n    children: PropTypes.node,\n    user: PropTypes.object,\n    logout: PropTypes.func\n};\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    users: state.users.users,\n    isAuth: state.auth.isAuthenticated,\n    citys: state.citys\n})\nexport default connect(mapStateToProps, { logout, getCity })(withRouter(withStyles(styles)(Main)));\n"]},"metadata":{},"sourceType":"module"}