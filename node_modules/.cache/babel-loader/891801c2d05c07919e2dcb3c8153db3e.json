{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\components\\\\Notifies\\\\Notifies.js\";\nimport React from 'react';\nimport { amber, green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slide from '@material-ui/core/Slide';\nimport styles from './styles';\n\nfunction TransitionRight(props) {\n  return React.createElement(Slide, Object.assign({}, props, {\n    direction: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n\n  const className = props.className,\n        message = props.message,\n        onClose = props.onClose,\n        variant = props.variant,\n        other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  const Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\n\nconst Notifies = props => {\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const message = props.message,\n        variant = props.variant;\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    TransitionComponent: TransitionRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(MySnackbarContentWrapper, {\n    onClose: handleClose,\n    variant: variant,\n    message: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })));\n};\n\nexport default withStyles(styles)(Notifies);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\components\\Notifies\\Notifies.js"],"names":["React","amber","green","PropTypes","clsx","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","IconButton","Snackbar","SnackbarContent","WarningIcon","withStyles","makeStyles","Slide","styles","TransitionRight","props","variantIcon","success","warning","error","info","useStyles1","theme","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","classes","className","onClose","variant","other","Icon","propTypes","string","func","oneOf","isRequired","Notifies","useState","open","setOpen","handleClose","event","reason","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport styles from './styles';\r\n\r\nfunction TransitionRight(props) {\r\n    return <Slide {...props} direction=\"right\" />;\r\n}\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n};\r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600]\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700]\r\n    },\r\n    icon: {\r\n        fontSize: 20\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\r\n};\r\n\r\nconst Notifies = props => {\r\n    const [open, setOpen] = React.useState(true);\r\n    const { message, variant } = props;\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                TransitionComponent={TransitionRight}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={handleClose}\r\n                    variant={variant}\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\nexport default withStyles(styles)(Notifies);\r\n"]},"metadata":{},"sourceType":"module"}