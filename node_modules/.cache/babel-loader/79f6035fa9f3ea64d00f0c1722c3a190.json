{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\components\\\\AccountProfile\\\\AccountProfile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport { getInfoUser } from './../../../../actions/authentication';\nimport { uploadPicture } from './../../../../actions/account';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  avatar: {\n    marginLeft: 'auto',\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nclass AccountProfile extends Component {\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Nisi\");\n  }\n\n} // const AccountProfile = props => {\n//     const { className, user, uploadPicture, isAuth, getInfoUser, file } = props;\n//     const classes = useStyles();\n//     let [avatar, setAvatar] = useState('');\n//     const profileComplete = () => {\n//         if (isAuth) {\n//             let complete = 0;\n//             if (user.firstName) {\n//                 complete += 20;\n//             }\n//             if (user.lastName) {\n//                 complete += 20;\n//             }\n//             if (user.sdt) {\n//                 complete += 20;\n//             }\n//             if (user.city) {\n//                 complete += 20;\n//             }\n//             // if (user.avatar.slice(0, 18) !== '//www.gravatar.com') {\n//             //     complete += 20;\n//             // }\n//             return complete;\n//         } else {\n//             return 0;\n//         }\n//     };\n//     const handleChange = async e => {\n//         avatar = e.target.files[0];\n//         if(avatar)\n//         {\n//            const rs = await uploadPicture(avatar, user.id);\n//            if(rs === undefined)\n//            {\n//                 await getInfoUser(user.id);\n//            }\n//         }\n//     };\n//     console.log(user);\n//     // useEffect(() => {\n//     //     if(file)\n//     //     {\n//     //         getInfoUser(user.id);\n//     //         file = false;\n//     //     }\n//     // },[file]);\n//     return (\n//         <Card className={clsx(classes.root, className)}>\n//             <CardContent>\n//                 <div className={classes.details}>\n//                     <div>\n//                         <Typography gutterBottom variant=\"h2\">\n//                             {`${user.firstName} ${user.lastName}`}\n//                         </Typography>\n//                         <Typography\n//                             className={classes.locationText}\n//                             color=\"textSecondary\"\n//                             variant=\"body1\"\n//                         >\n//                             {user.city}, {user.country}\n//                         </Typography>\n//                         <Typography\n//                             className={classes.dateText}\n//                             color=\"textSecondary\"\n//                             variant=\"body1\"\n//                         >\n//                             {moment().format('hh:mm A')} ({'GTM-7'})\n//                         </Typography>\n//                     </div>\n//                     <Avatar\n//                         className={classes.avatar}\n//                         src={`${URL_getImage}${user.avatar}`}\n//                     />\n//                 </div>\n//                 <div className={classes.progress}>\n//                     <Typography variant=\"body1\">\n//                         {`Profile Completeness: ${profileComplete()}%`}\n//                     </Typography>\n//                     <LinearProgress\n//                         value={profileComplete()}\n//                         variant=\"determinate\"\n//                     />\n//                 </div>\n//             </CardContent>\n//             <Divider />\n//             <CardActions>\n//                 <input\n//                     accept=\"image/*\"\n//                     className={classes.input}\n//                     id=\"text-button-file\"\n//                     multiple\n//                     type=\"file\"\n//                     onChange={handleChange}\n//                 />\n//                 <label htmlFor=\"text-button-file\">\n//                     <Button\n//                         component=\"span\"\n//                         className={classes.uploadButton}\n//                         color=\"primary\"\n//                         variant=\"text\"\n//                     >\n//                         Upload picture\n//                     </Button>\n//                 </label>\n//                 <Button variant=\"text\">Remove picture</Button>\n//             </CardActions>\n//         </Card>\n//     );\n// };\n\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n  auth: PropTypes.object,\n  uploadPicture: PropTypes.func,\n  file: PropTypes.string,\n  errors: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  file: state.file,\n  isAuth: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getInfoUser,\n  uploadPicture\n})(AccountProfile);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\components\\AccountProfile\\AccountProfile.js"],"names":["React","Component","PropTypes","clsx","moment","makeStyles","connect","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","URL_getImage","getInfoUser","uploadPicture","useStyles","theme","root","details","display","avatar","marginLeft","height","width","flexShrink","flexGrow","progress","marginTop","spacing","uploadButton","marginRight","input","AccountProfile","render","propTypes","className","string","auth","object","func","file","errors","mapStateToProps","state","user","isAuth","isAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,IADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,MAJJ,EAKIC,UALJ,EAMIC,OANJ,EAOIC,MAPJ,EAQIC,cARJ,QASO,mBATP;AAUA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAACc,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE,EAD6B;AAEnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GAF0B;AAKnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,KAAK,EAAE,GAHH;AAIJC,IAAAA,UAAU,EAAE,CAJR;AAKJC,IAAAA,QAAQ,EAAE;AALN,GAL2B;AAYnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd;AADL,GAZyB;AAenCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAEd,KAAK,CAACY,OAAN,CAAc,CAAd;AADH,GAfqB;AAkBnCG,EAAAA,KAAK,EAAE;AACHZ,IAAAA,OAAO,EAAE;AADN;AAlB4B,CAAL,CAAN,CAA5B;;AAuBA,MAAMa,cAAN,SAA6BlC,SAA7B,CAAuC;AACnCmC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AALkC,C,CAOvcAAc,CAACE,SAAf,GAA2B;AACvBC,EAAAA,SAAS,EAAEpC,SAAS,CAACqC,MADE;AAEvBC,EAAAA,IAAI,EAAEtC,SAAS,CAACuC,MAFO;AAGvBxB,EAAAA,aAAa,EAAEf,SAAS,CAACwC,IAHF;AAIvBC,EAAAA,IAAI,EAAEzC,SAAS,CAACqC,MAJO;AAKvBK,EAAAA,MAAM,EAAE1C,SAAS,CAACuC;AALK,CAA3B;;AAOA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,IAAI,EAAED,KAAK,CAACN,IAAN,CAAWO,IADa;AAE9BJ,EAAAA,IAAI,EAAEG,KAAK,CAACH,IAFkB;AAG9BK,EAAAA,MAAM,EAAEF,KAAK,CAACN,IAAN,CAAWS;AAHW,CAAL,CAA7B;;AAKA,eAAe3C,OAAO,CAClBuC,eADkB,EAElB;AAAE7B,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAFkB,CAAP,CAGbkB,cAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Typography,\n    Divider,\n    Button,\n    LinearProgress\n} from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport { getInfoUser } from './../../../../actions/authentication';\nimport { uploadPicture } from './../../../../actions/account';\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    details: {\n        display: 'flex'\n    },\n    avatar: {\n        marginLeft: 'auto',\n        height: 110,\n        width: 100,\n        flexShrink: 0,\n        flexGrow: 0\n    },\n    progress: {\n        marginTop: theme.spacing(2)\n    },\n    uploadButton: {\n        marginRight: theme.spacing(2)\n    },\n    input: {\n        display: 'none'\n    }\n}));\n\nclass AccountProfile extends Component {\n    render() {\n        return (\n            <h1>Nisi</h1>\n        );\n    }\n}\n// const AccountProfile = props => {\n//     const { className, user, uploadPicture, isAuth, getInfoUser, file } = props;\n//     const classes = useStyles();\n//     let [avatar, setAvatar] = useState('');\n\n//     const profileComplete = () => {\n//         if (isAuth) {\n//             let complete = 0;\n//             if (user.firstName) {\n//                 complete += 20;\n//             }\n//             if (user.lastName) {\n//                 complete += 20;\n//             }\n//             if (user.sdt) {\n//                 complete += 20;\n//             }\n//             if (user.city) {\n//                 complete += 20;\n//             }\n//             // if (user.avatar.slice(0, 18) !== '//www.gravatar.com') {\n//             //     complete += 20;\n//             // }\n//             return complete;\n//         } else {\n//             return 0;\n//         }\n//     };\n//     const handleChange = async e => {\n//         avatar = e.target.files[0];\n//         if(avatar)\n//         {\n//            const rs = await uploadPicture(avatar, user.id);\n//            if(rs === undefined)\n//            {\n//                 await getInfoUser(user.id);\n//            }\n//         }\n//     };\n//     console.log(user);\n    \n//     // useEffect(() => {\n//     //     if(file)\n//     //     {\n//     //         getInfoUser(user.id);\n//     //         file = false;\n//     //     }\n//     // },[file]);\n    \n//     return (\n//         <Card className={clsx(classes.root, className)}>\n//             <CardContent>\n//                 <div className={classes.details}>\n//                     <div>\n//                         <Typography gutterBottom variant=\"h2\">\n//                             {`${user.firstName} ${user.lastName}`}\n//                         </Typography>\n//                         <Typography\n//                             className={classes.locationText}\n//                             color=\"textSecondary\"\n//                             variant=\"body1\"\n//                         >\n//                             {user.city}, {user.country}\n//                         </Typography>\n//                         <Typography\n//                             className={classes.dateText}\n//                             color=\"textSecondary\"\n//                             variant=\"body1\"\n//                         >\n//                             {moment().format('hh:mm A')} ({'GTM-7'})\n//                         </Typography>\n//                     </div>\n//                     <Avatar\n//                         className={classes.avatar}\n//                         src={`${URL_getImage}${user.avatar}`}\n//                     />\n//                 </div>\n//                 <div className={classes.progress}>\n//                     <Typography variant=\"body1\">\n//                         {`Profile Completeness: ${profileComplete()}%`}\n//                     </Typography>\n//                     <LinearProgress\n//                         value={profileComplete()}\n//                         variant=\"determinate\"\n//                     />\n//                 </div>\n//             </CardContent>\n//             <Divider />\n//             <CardActions>\n//                 <input\n//                     accept=\"image/*\"\n//                     className={classes.input}\n//                     id=\"text-button-file\"\n//                     multiple\n//                     type=\"file\"\n//                     onChange={handleChange}\n//                 />\n//                 <label htmlFor=\"text-button-file\">\n//                     <Button\n//                         component=\"span\"\n//                         className={classes.uploadButton}\n//                         color=\"primary\"\n//                         variant=\"text\"\n//                     >\n//                         Upload picture\n//                     </Button>\n//                 </label>\n//                 <Button variant=\"text\">Remove picture</Button>\n//             </CardActions>\n//         </Card>\n//     );\n// };\n\nAccountProfile.propTypes = {\n    className: PropTypes.string,\n    auth: PropTypes.object,\n    uploadPicture: PropTypes.func,\n    file: PropTypes.string,\n    errors: PropTypes.object\n};\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    file: state.file,\n    isAuth: state.auth.isAuthenticated\n});\nexport default connect(\n    mapStateToProps,\n    { getInfoUser, uploadPicture }\n)(AccountProfile);\n"]},"metadata":{},"sourceType":"module"}