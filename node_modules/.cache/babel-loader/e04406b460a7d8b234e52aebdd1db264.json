{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\Account.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AccountProfile, AccountDetails } from './components';\nimport { LoadingCenter } from './../../components';\nimport styles from './styles';\nimport { getInfoUser } from './../../actions/authentication';\nimport { uploadPicture, updateInfo } from './../../actions/account';\nimport { getCity } from './../../actions/city';\nimport { Notifies } from './../../components';\n\nconst Account = props => {\n  const errors = props.errors,\n        user = props.user,\n        classes = props.classes,\n        file = props.file,\n        isAuth = props.isAuth,\n        getInfoUser = props.getInfoUser,\n        uploadPicture = props.uploadPicture,\n        citys = props.citys,\n        getCity = props.getCity,\n        info = props.info,\n        updateInfo = props.updateInfo,\n        statusUpdateInfo = props.statusUpdateInfo;\n  useEffect(() => {\n    getCity();\n  }, [getCity]);\n\n  if (Object.entries(user).length === 0) {\n    return React.createElement(LoadingCenter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 6,\n    xl: 4,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(AccountProfile, {\n    errors: errors,\n    user: user,\n    file: file,\n    isAuth: isAuth,\n    getInfoUser: getInfoUser,\n    uploadPicture: uploadPicture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 8,\n    md: 6,\n    xl: 8,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(AccountDetails, {\n    user: user,\n    citys: citys,\n    info: info,\n    updateInfo: updateInfo,\n    errors: errors,\n    getInfoUser: getInfoUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))));\n};\n\nAccount.propTypes = {\n  errors: PropTypes.object,\n  user: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  user: state.auth.user,\n  file: state.file,\n  isAuth: state.auth.isAuthenticated,\n  citys: state.citys,\n  info: state.info.user,\n  statusUpdateInfo: state.info.status\n});\n\nexport default connect(mapStateToProps, {\n  getInfoUser,\n  uploadPicture,\n  getCity,\n  updateInfo\n})(withStyles(styles)(Account));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\Account.js"],"names":["React","useEffect","useRef","withStyles","Grid","connect","PropTypes","AccountProfile","AccountDetails","LoadingCenter","styles","getInfoUser","uploadPicture","updateInfo","getCity","Notifies","Account","props","errors","user","classes","file","isAuth","citys","info","statusUpdateInfo","Object","entries","length","root","propTypes","object","mapStateToProps","state","auth","isAuthenticated","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { AccountProfile, AccountDetails } from './components';\nimport { LoadingCenter } from './../../components';\nimport styles from './styles';\nimport { getInfoUser } from './../../actions/authentication';\nimport { uploadPicture, updateInfo } from './../../actions/account';\nimport { getCity } from './../../actions/city';\nimport { Notifies } from './../../components';\n\nconst Account = props => {\n    const {\n        errors,\n        user,\n        classes,\n        file,\n        isAuth,\n        getInfoUser,\n        uploadPicture,\n        citys,\n        getCity,\n        info,\n        updateInfo,\n        statusUpdateInfo\n    } = props;\n    \n    useEffect(() => {\n        getCity();\n    }, [getCity]);\n    if (Object.entries(user).length === 0) {\n        return <LoadingCenter />;\n    }\n    return (\n        <div className={classes.root}>\n            {/* {lastUser !== user ? (\n                <Notifies variant=\"success\" message={statusUpdateInfo} />\n            ) : null} */}\n            <Grid container spacing={4}>\n                <Grid item lg={4} md={6} xl={4} xs={12}>\n                    <AccountProfile\n                        errors={errors}\n                        user={user}\n                        file={file}\n                        isAuth={isAuth}\n                        getInfoUser={getInfoUser}\n                        uploadPicture={uploadPicture}\n                    />\n                </Grid>\n                <Grid item lg={8} md={6} xl={8} xs={12}>\n                    <AccountDetails\n                        user={user}\n                        citys={citys}\n                        info={info}\n                        updateInfo={updateInfo}\n                        errors={errors}\n                        getInfoUser={getInfoUser}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\nAccount.propTypes = {\n    errors: PropTypes.object,\n    user: PropTypes.object\n};\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    user: state.auth.user,\n    file: state.file,\n    isAuth: state.auth.isAuthenticated,\n    citys: state.citys,\n    info: state.info.user,\n    statusUpdateInfo: state.info.status\n});\nexport default connect(\n    mapStateToProps,\n    { getInfoUser, uploadPicture, getCity, updateInfo }\n)(withStyles(styles)(Account));\n"]},"metadata":{},"sourceType":"module"}