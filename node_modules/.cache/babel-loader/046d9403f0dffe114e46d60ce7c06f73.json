{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\components\\\\AccountDetails\\\\AccountDetails.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, CardActions, Divider, Grid, Button, TextField } from '@material-ui/core';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const className = props.className,\n        auth = props.auth,\n        citys = props.citys;\n  const classes = useStyles();\n\n  const _useState = useState(auth.user),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const states = [{\n    value: 'alabama',\n    label: 'Alabama'\n  }, {\n    value: 'new-york',\n    label: 'New York'\n  }, {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }];\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    subheader: \"The information can be edited\",\n    title: \"Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    helperText: \"Please specify the first name\",\n    label: \"First name\",\n    margin: \"dense\",\n    name: \"firstName\",\n    onChange: handleChange,\n    required: true,\n    value: values.firstName,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Last name\",\n    margin: \"dense\",\n    name: \"lastName\",\n    onChange: handleChange,\n    required: true,\n    value: values.lastName,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Email Address\",\n    margin: \"dense\",\n    name: \"email\",\n    onChange: handleChange,\n    required: true,\n    value: values.email,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Phone Number\",\n    margin: \"dense\",\n    name: \"phone\",\n    onChange: handleChange,\n    type: \"number\",\n    value: values.sdt,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Select City\",\n    margin: \"dense\",\n    name: \"state\",\n    onChange: handleChange,\n    required: true,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    value: values.city,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, states.map(option => React.createElement(\"option\", {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, option.label)))), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Country\",\n    margin: \"dense\",\n    name: \"country\",\n    onChange: handleChange,\n    required: true,\n    value: values.country,\n    variant: \"outlined\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Save details\"))));\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string,\n  auth: PropTypes.object\n};\nexport default AccountDetails;","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\components\\AccountDetails\\AccountDetails.js"],"names":["React","useState","clsx","PropTypes","makeStyles","Card","CardHeader","CardContent","CardActions","Divider","Grid","Button","TextField","useStyles","root","AccountDetails","props","className","auth","citys","classes","user","values","setValues","handleChange","event","target","name","value","states","label","firstName","lastName","email","sdt","native","city","map","option","country","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    Button,\n    TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nconst AccountDetails = props => {\n    const { className, auth, citys } = props;\n\n    const classes = useStyles();\n\n    const [values, setValues] = useState(auth.user);\n\n    const handleChange = event => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const states = [\n        {\n            value: 'alabama',\n            label: 'Alabama'\n        },\n        {\n            value: 'new-york',\n            label: 'New York'\n        },\n        {\n            value: 'san-francisco',\n            label: 'San Francisco'\n        }\n    ];\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <form autoComplete=\"off\" noValidate>\n                <CardHeader\n                    subheader=\"The information can be edited\"\n                    title=\"Profile\"\n                />\n                <Divider />\n                <CardContent>\n                    <Grid container spacing={3}>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                helperText=\"Please specify the first name\"\n                                label=\"First name\"\n                                margin=\"dense\"\n                                name=\"firstName\"\n                                onChange={handleChange}\n                                required\n                                value={values.firstName}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Last name\"\n                                margin=\"dense\"\n                                name=\"lastName\"\n                                onChange={handleChange}\n                                required\n                                value={values.lastName}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Email Address\"\n                                margin=\"dense\"\n                                name=\"email\"\n                                onChange={handleChange}\n                                required\n                                value={values.email}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Phone Number\"\n                                margin=\"dense\"\n                                name=\"phone\"\n                                onChange={handleChange}\n                                type=\"number\"\n                                value={values.sdt}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Select City\"\n                                margin=\"dense\"\n                                name=\"state\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={values.city}\n                                variant=\"outlined\"\n                            >\n                                {states.map(option => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                    >\n                                        {option.label}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Country\"\n                                margin=\"dense\"\n                                name=\"country\"\n                                onChange={handleChange}\n                                required\n                                value={values.country}\n                                variant=\"outlined\"\n                                disabled\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                    <Button color=\"primary\" variant=\"contained\">\n                        Save details\n                    </Button>\n                </CardActions>\n            </form>\n        </Card>\n    );\n};\n\nAccountDetails.propTypes = {\n    className: PropTypes.string,\n    auth: PropTypes.object\n};\n\nexport default AccountDetails;\n"]},"metadata":{},"sourceType":"module"}