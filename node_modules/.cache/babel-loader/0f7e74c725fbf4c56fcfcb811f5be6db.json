{"ast":null,"code":"import palette from 'theme/palette';\nimport moment from 'moment';\nexport const fillData = dataPresences => {\n  let data,\n      total = 0,\n      subTotal = 0,\n      Mon = 0,\n      Tue = 0,\n      Wed = 0,\n      Thu = 0,\n      Fri = 0,\n      Sat = 0,\n      Sun = 0;\n  const checkDates = dataPresences.checkDates,\n        classPresences = dataPresences.classPresences;\n  const dayFirstWeek = moment().subtract(1, 'weeks').startOf('isoWeek'),\n        dayLastWeek = moment().subtract(1, 'weeks').endOf('isoWeek');\n  classPresences.forEach(lop => {\n    checkDates.forEach(item => {\n      if (item.idClass === lop._id) {\n        item.dateList.forEach(ngay => {\n          if (moment(ngay.date, 'DD/MM/YYYY').isBetween(dayFirstWeek, dayLastWeek, null, '[]')) {\n            subTotal++;\n          }\n        });\n      }\n    });\n    total += subTotal * lop.dssv.length;\n    subTotal = 0;\n  });\n\n  if (total !== 0) {\n    classPresences.forEach(lop => {\n      lop.dssv.forEach(sv => {\n        sv.checkDate.forEach(date => {\n          if (moment(date.date, 'DD/MM/YYYY').isSame(dayFirstWeek, 'isoWeek') && moment(date.date, 'DD/MM/YYYY').format('dddd') === 'Monday' && date.status) {\n            Mon++;\n          }\n        });\n      });\n    });\n    console.log(Mon);\n    data = {\n      labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      datasets: [{\n        label: 'Present',\n        backgroundColor: 'rgba(241, 91, 193, 0.27)',\n        data: [6, 82, 22, 31, 21, 73, 20],\n        fill: 'origin'\n      }]\n    };\n  } else {\n    data = null;\n  }\n\n  return {\n    data\n  };\n};\nexport const options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  lineTension: 0,\n  tooltips: {\n    enabled: true,\n    mode: 'index',\n    intersect: false,\n    borderWidth: 1,\n    borderColor: palette.divider,\n    backgroundColor: palette.white,\n    titleFontColor: palette.text.primary,\n    bodyFontColor: palette.text.secondary,\n    footerFontColor: palette.text.secondary\n  },\n  layout: {\n    padding: 0\n  },\n  scales: {\n    xAxes: [{\n      gridLines: {\n        borderDash: [2]\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        borderDash: [2],\n        color: palette.divider,\n        zeroLineBorderDash: [2],\n        zeroLineColor: palette.divider\n      }\n    }]\n  }\n};","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\components\\PresentStatistical\\chart.js"],"names":["palette","moment","fillData","dataPresences","data","total","subTotal","Mon","Tue","Wed","Thu","Fri","Sat","Sun","checkDates","classPresences","dayFirstWeek","subtract","startOf","dayLastWeek","endOf","forEach","lop","item","idClass","_id","dateList","ngay","date","isBetween","dssv","length","sv","checkDate","isSame","format","status","console","log","labels","datasets","label","backgroundColor","fill","options","responsive","maintainAspectRatio","legend","display","lineTension","tooltips","enabled","mode","intersect","borderWidth","borderColor","divider","white","titleFontColor","text","primary","bodyFontColor","secondary","footerFontColor","layout","padding","scales","xAxes","gridLines","borderDash","yAxes","color","zeroLineBorderDash","zeroLineColor"],"mappings":"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","sourcesContent":["import palette from 'theme/palette';\nimport moment from 'moment';\n\nexport const fillData = dataPresences => {\n    let data, total = 0, subTotal = 0, Mon=0, Tue=0, Wed=0, Thu=0, Fri=0, Sat=0, Sun=0;\n    const { checkDates, classPresences } = dataPresences;\n    const dayFirstWeek = moment().subtract(1, 'weeks').startOf('isoWeek'),\n        dayLastWeek = moment().subtract(1, 'weeks').endOf('isoWeek');\n\n    classPresences.forEach(lop => {\n        checkDates.forEach(item => {\n            if (item.idClass === lop._id) {\n                item.dateList.forEach(ngay => {\n                    if (\n                        moment(ngay.date, 'DD/MM/YYYY').isBetween(dayFirstWeek, dayLastWeek, null, '[]')\n                    ) {\n                        subTotal++;\n                    }\n                });\n            }\n        });\n        total += subTotal * lop.dssv.length;\n        subTotal = 0;\n    });\n    if(total !== 0)\n    {\n\n        classPresences.forEach(lop => {\n            lop.dssv.forEach(sv => {\n                sv.checkDate.forEach(date => {\n                    if (\n                        moment(date.date, 'DD/MM/YYYY').isSame(dayFirstWeek, 'isoWeek') &&\n                        moment(date.date, 'DD/MM/YYYY').format('dddd') === 'Monday' &&\n                        date.status\n                    ) {\n                        Mon++;\n                    } \n                });\n            });\n        });\n        console.log(Mon)\n        data = {\n            labels: [\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thu',\n                'Fri',\n                'Sat',\n                'Sun'\n            ],\n            datasets: [\n                {\n                    label: 'Present',\n                    backgroundColor: 'rgba(241, 91, 193, 0.27)',\n                    data: [6, 82, 22, 31, 21, 73, 20],\n                    fill: 'origin',\n                }\n            ]\n        };\n    }\n    else\n    {\n        data = null;\n    }\n    return {\n        data\n    };\n};\n\n\n\nexport const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: { display: false },\n    lineTension: 0,\n    tooltips: {\n        enabled: true,\n        mode: 'index',\n        intersect: false,\n        borderWidth: 1,\n        borderColor: palette.divider,\n        backgroundColor: palette.white,\n        titleFontColor: palette.text.primary,\n        bodyFontColor: palette.text.secondary,\n        footerFontColor: palette.text.secondary\n    },\n\n    layout: { padding: 0 },\n    scales: {\n        xAxes: [\n            {\n                gridLines: {\n                    borderDash: [2],\n                }\n            }\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    borderDash: [2],\n                    color: palette.divider,\n                    zeroLineBorderDash: [2],\n                    zeroLineColor: palette.divider\n                }\n            }\n        ]\n    }\n};\n"]},"metadata":{},"sourceType":"module"}