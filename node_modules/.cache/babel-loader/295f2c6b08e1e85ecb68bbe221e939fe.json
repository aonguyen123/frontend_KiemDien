{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\UserList\\\\UserList.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { UsersToolbar, UsersTable } from './components';\nimport { getUsers, deleteUsers, createUser, clearErrors } from './../../actions/users';\nimport { LoadingCenter } from 'components';\nimport { Notifies } from 'components';\nimport styles from './styles';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCloseNotify = params => {\n      this.setState({\n        openNotify: params,\n        openNotifyDelete: params\n      });\n    };\n\n    this.search = keyword => {\n      const keywordLowerCase = keyword.toLowerCase();\n      let users = this.props.users;\n      users = users.filter(el => el.email.toLowerCase().includes(keywordLowerCase));\n      this.setState({\n        users\n      });\n    };\n\n    this.state = {\n      isLoading: true,\n      openNotify: false,\n      openNotifyDelete: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers();\n  }\n\n  componentDidUpdate(preProps, preState) {\n    if (preState.users.length !== this.props.users.length) {\n      this.setState({\n        isLoading: false,\n        users: this.props.users\n      });\n    }\n\n    if (this.props.statusUser === 'DELETE_SUCCESS') {\n      this.props.getUsers();\n    }\n\n    if (preProps.addUser !== this.props.addUser) {\n      this.setState({\n        openNotify: true\n      });\n      this.props.getUsers();\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          deleteUsers = _this$props.deleteUsers,\n          createUser = _this$props.createUser,\n          errors = _this$props.errors,\n          addUser = _this$props.addUser,\n          statusAdd = _this$props.statusAdd,\n          clearErrors = _this$props.clearErrors;\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          openNotify = _this$state.openNotify,\n          openNotifyDelete = _this$state.openNotifyDelete,\n          users = _this$state.users;\n\n    if (isLoading) {\n      return React.createElement(LoadingCenter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Notifies, {\n      variant: \"success\",\n      message: statusAdd,\n      openNotify: openNotify,\n      setCloseNotify: params => this.setCloseNotify(params),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Notifies, {\n      variant: \"success\",\n      message: \"Delete user success\",\n      openNotify: openNotifyDelete,\n      setCloseNotify: params => this.setCloseNotify(params),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(UsersToolbar, {\n      createUser: createUser,\n      errors: errors,\n      addUser: addUser,\n      clearErrors: clearErrors,\n      searchUser: keyword => this.search(keyword),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(UsersTable, {\n      users: users,\n      deleteUsers: deleteUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.users,\n  statusUser: state.users.status,\n  errors: state.errors,\n  addUser: state.userAdd.userAdd,\n  statusAdd: state.userAdd.status\n});\n\nexport default connect(mapStateToProps, {\n  getUsers,\n  deleteUsers,\n  createUser,\n  clearErrors\n})(withStyles(styles)(UserList));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\UserList\\UserList.js"],"names":["React","Component","withStyles","connect","UsersToolbar","UsersTable","getUsers","deleteUsers","createUser","clearErrors","LoadingCenter","Notifies","styles","UserList","constructor","props","setCloseNotify","params","setState","openNotify","openNotifyDelete","search","keyword","keywordLowerCase","toLowerCase","users","filter","el","email","includes","state","isLoading","componentDidMount","componentDidUpdate","preProps","preState","length","statusUser","addUser","render","classes","errors","statusAdd","root","content","mapStateToProps","status","userAdd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\n\nimport { UsersToolbar, UsersTable } from './components';\nimport {\n    getUsers,\n    deleteUsers,\n    createUser,\n    clearErrors\n} from './../../actions/users';\nimport { LoadingCenter } from 'components';\nimport { Notifies } from 'components';\nimport styles from './styles';\n\nclass UserList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            openNotify: false,\n            openNotifyDelete: false,\n            users: []\n        };\n    }\n    setCloseNotify = params => {\n        this.setState({\n            openNotify: params,\n            openNotifyDelete: params\n        });\n    }\n    componentDidMount() {\n        this.props.getUsers();\n    }\n    componentDidUpdate(preProps, preState) {\n        if(preState.users.length !== this.props.users.length)\n        {\n            this.setState({\n                isLoading: false,\n                users: this.props.users\n            })\n        }\n        if(this.props.statusUser === 'DELETE_SUCCESS')\n        {\n            this.props.getUsers();  \n        }\n        if (preProps.addUser !== this.props.addUser) {\n            this.setState({\n                openNotify: true\n            });\n            this.props.getUsers();\n        }\n    }\n    search = keyword => {\n        const keywordLowerCase = keyword.toLowerCase();\n        let {users} = this.props;\n        users = users.filter(el =>\n            el.email.toLowerCase().includes(keywordLowerCase)\n        );\n        this.setState({\n            users\n        })\n    }\n    render() {\n        const {\n            classes,\n            deleteUsers,\n            createUser,\n            errors,\n            addUser,\n            statusAdd,\n            clearErrors\n        } = this.props;\n        const { isLoading, openNotify, openNotifyDelete, users } = this.state;\n        if (isLoading) {\n            return <LoadingCenter />;\n        }\n        return (\n            <div className={classes.root}>\n                <Notifies\n                    variant=\"success\"\n                    message={statusAdd}\n                    openNotify={openNotify}\n                    setCloseNotify={params => this.setCloseNotify(params)}\n                />\n                <Notifies\n                    variant=\"success\"\n                    message=\"Delete user success\"\n                    openNotify={openNotifyDelete}\n                    setCloseNotify={params => this.setCloseNotify(params)}\n                />\n                <UsersToolbar\n                    createUser={createUser}\n                    errors={errors}\n                    addUser={addUser}\n                    clearErrors={clearErrors}\n                    searchUser={keyword => this.search(keyword)}\n                />\n                <div className={classes.content}>\n                    <UsersTable users={users} deleteUsers={deleteUsers} />\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    users: state.users.users,\n    statusUser: state.users.status,\n    errors: state.errors,\n    addUser: state.userAdd.userAdd,\n    statusAdd: state.userAdd.status\n});\nexport default connect(\n    mapStateToProps,\n    { getUsers, deleteUsers, createUser, clearErrors }\n)(withStyles(styles)(UserList));\n"]},"metadata":{},"sourceType":"module"}