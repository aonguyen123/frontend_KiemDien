{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\layouts\\\\Main\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport jwt_decode from 'jwt-decode';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Sidebar, Topbar, Footer } from './components';\nimport { getInfoAccountSideBar } from './../../actions/account';\nimport { logout } from './../../actions/authentication';\nimport styles from './styles';\n\nconst Main = props => {\n  const children = props.children,\n        logout = props.logout,\n        classes = props.classes,\n        history = props.history,\n        getInfoAccountSideBar = props.getInfoAccountSideBar,\n        account = props.account;\n  useEffect(() => {\n    if (localStorage.jwtToken) {\n      const decode = jwt_decode(localStorage.jwtToken);\n      const currentTime = Date.now() / 1000;\n\n      if (decode.exp < currentTime) {\n        logout(history);\n      }\n    }\n\n    if (!localStorage.jwtToken) {\n      history.push('/sign-in');\n    }\n  }); // useEffect(() => {\n  //     if (localStorage.jwtToken) {\n  //         const decode = jwt_decode(localStorage.jwtToken);\n  //         getInfoAccountSideBar(decode._id);\n  //     }\n  // }, [getInfoAccountSideBar]);\n\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openSidebar = _useState2[0],\n        setOpenSidebar = _useState2[1];\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n  return React.createElement(\"div\", {\n    className: clsx({\n      [classes.root]: true,\n      [classes.shiftContent]: isDesktop\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Topbar, {\n    onSidebarOpen: handleSidebarOpen,\n    logout: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    onClose: handleSidebarClose,\n    open: shouldOpenSidebar,\n    variant: isDesktop ? 'persistent' : 'temporary',\n    logout: logout,\n    account: account,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, children, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })));\n};\n\nMain.propTypes = {\n  children: PropTypes.node,\n  logout: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  account: state.account\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  getInfoAccountSideBar\n})(withRouter(withStyles(styles)(Main)));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\layouts\\Main\\Main.js"],"names":["React","useState","useEffect","PropTypes","clsx","jwt_decode","withStyles","useTheme","useMediaQuery","connect","withRouter","Sidebar","Topbar","Footer","getInfoAccountSideBar","logout","styles","Main","props","children","classes","history","account","localStorage","jwtToken","decode","currentTime","Date","now","exp","push","theme","isDesktop","breakpoints","up","defaultMatches","openSidebar","setOpenSidebar","handleSidebarOpen","handleSidebarClose","shouldOpenSidebar","root","shiftContent","content","propTypes","node","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport jwt_decode from 'jwt-decode';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Sidebar, Topbar, Footer } from './components';\nimport { getInfoAccountSideBar } from './../../actions/account';\nimport { logout } from './../../actions/authentication';\nimport styles from './styles';\n\nconst Main = props => {\n    const {\n        children,\n        logout,\n        classes,\n        history,\n        getInfoAccountSideBar,\n        account,\n    } = props;\n\n    useEffect(() => {\n        if (localStorage.jwtToken) {\n            const decode = jwt_decode(localStorage.jwtToken);\n            const currentTime = Date.now() / 1000;\n            if (decode.exp < currentTime) {\n                logout(history);\n            }\n        }\n        if (!localStorage.jwtToken) {\n            history.push('/sign-in');\n        }\n    });\n    // useEffect(() => {\n    //     if (localStorage.jwtToken) {\n    //         const decode = jwt_decode(localStorage.jwtToken);\n    //         getInfoAccountSideBar(decode._id);\n    //     }\n    // }, [getInfoAccountSideBar]);\n\n    const theme = useTheme();\n    const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n        defaultMatches: true\n    });\n\n    const [openSidebar, setOpenSidebar] = useState(false);\n\n    const handleSidebarOpen = () => {\n        setOpenSidebar(true);\n    };\n\n    const handleSidebarClose = () => {\n        setOpenSidebar(false);\n    };\n\n    const shouldOpenSidebar = isDesktop ? true : openSidebar;\n    return (\n        <div\n            className={clsx({\n                [classes.root]: true,\n                [classes.shiftContent]: isDesktop\n            })}\n        >\n            <Topbar onSidebarOpen={handleSidebarOpen} logout={logout} />\n            <Sidebar\n                onClose={handleSidebarClose}\n                open={shouldOpenSidebar}\n                variant={isDesktop ? 'persistent' : 'temporary'}\n                logout={logout}\n                account={account}\n            />\n            <main className={classes.content}>\n                {children}\n                <Footer />\n            </main>\n        </div>\n    );\n};\n\nMain.propTypes = {\n    children: PropTypes.node,\n    logout: PropTypes.func\n};\nconst mapStateToProps = state => ({\n    account: state.account,\n});\nexport default connect(\n    mapStateToProps,\n    { logout, getInfoAccountSideBar }\n)(withRouter(withStyles(styles)(Main)));\n"]},"metadata":{},"sourceType":"module"}