{"ast":null,"code":"import { UPLOAD_PICTURE_ACCOUNT, GET_ERRORS, UPDATE_INFO_ACCOUNT, REMOVE_PICTURE_ACCOUNT, UPDATE_PASSWORD_ACCOUNT, CLEARN_ERRORS, OPEN_NOTIFY } from './../constants/types';\nimport { callAPI } from 'common';\nexport const updateInfoAccount = account => dispatch => {\n  callAPI('/updateInfoAccount', 'PUT', {\n    account\n  }).then(res => {\n    dispatch({\n      type: UPDATE_INFO_ACCOUNT,\n      payload: res.data\n    });\n    dispatch({\n      type: OPEN_NOTIFY\n    });\n    dispatch({\n      type: CLEARN_ERRORS,\n      payload: {}\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const uploadPictureAccount = (file, idAccount) => dispatch => {\n  const formData = new FormData();\n  formData.set('idAccount', idAccount);\n  formData.append('avatar', file);\n  callAPI('/updateAvatarAccount', 'POST', formData).then(res => {\n    dispatch({\n      type: UPLOAD_PICTURE_ACCOUNT,\n      payload: res.data\n    });\n    dispatch({\n      type: OPEN_NOTIFY\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const removePictureAccount = idAccount => dispatch => {\n  callAPI('/removeAvatarAccount', 'PUT', {\n    idAccount\n  }).then(res => {\n    dispatch({\n      type: REMOVE_PICTURE_ACCOUNT,\n      payload: res.data\n    });\n    dispatch({\n      type: OPEN_NOTIFY\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const updatePassword = (idAccount, password) => dispatch => {\n  callAPI('/updatePasswordAccount', 'PUT', {\n    idAccount,\n    password\n  }).then(res => {\n    dispatch({\n      type: UPDATE_PASSWORD_ACCOUNT,\n      payload: res.data\n    });\n    dispatch({\n      type: OPEN_NOTIFY\n    });\n    dispatch({\n      type: CLEARN_ERRORS,\n      payload: {}\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\actions\\actionAccount.js"],"names":["UPLOAD_PICTURE_ACCOUNT","GET_ERRORS","UPDATE_INFO_ACCOUNT","REMOVE_PICTURE_ACCOUNT","UPDATE_PASSWORD_ACCOUNT","CLEARN_ERRORS","OPEN_NOTIFY","callAPI","updateInfoAccount","account","dispatch","then","res","type","payload","data","catch","err","response","uploadPictureAccount","file","idAccount","formData","FormData","set","append","removePictureAccount","updatePassword","password"],"mappings":"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","sourcesContent":["import { \r\n    UPLOAD_PICTURE_ACCOUNT, GET_ERRORS, UPDATE_INFO_ACCOUNT, REMOVE_PICTURE_ACCOUNT, UPDATE_PASSWORD_ACCOUNT,\r\n    CLEARN_ERRORS, OPEN_NOTIFY\r\n} from './../constants/types';\r\nimport { callAPI } from 'common';\r\n\r\nexport const updateInfoAccount = account => dispatch => {\r\n    callAPI('/updateInfoAccount', 'PUT', {account})\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPDATE_INFO_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: OPEN_NOTIFY\r\n            });\r\n            dispatch({\r\n                type: CLEARN_ERRORS,\r\n                payload: {}\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};\r\nexport const uploadPictureAccount = (file, idAccount) => dispatch => {\r\n    const formData = new FormData();\r\n    formData.set('idAccount', idAccount);\r\n    formData.append('avatar', file);\r\n    callAPI('/updateAvatarAccount', 'POST', formData)\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPLOAD_PICTURE_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: OPEN_NOTIFY\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};\r\nexport const removePictureAccount = idAccount => dispatch => {\r\n    callAPI('/removeAvatarAccount', 'PUT', {idAccount})\r\n        .then(res => {\r\n            dispatch({\r\n                type: REMOVE_PICTURE_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: OPEN_NOTIFY\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        });\r\n};\r\nexport const updatePassword = (idAccount, password) => dispatch => {\r\n    callAPI('/updatePasswordAccount', 'PUT', {idAccount, password})\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: OPEN_NOTIFY\r\n            });\r\n            dispatch({\r\n                type: CLEARN_ERRORS,\r\n                payload: {}\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};"]},"metadata":{},"sourceType":"module"}