{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\layouts\\\\Main\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport jwt_decode from 'jwt-decode';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Sidebar, Topbar, Footer } from './components';\nimport { logout, getInfoUser } from './../../actions/authentication';\nimport styles from './styles';\nimport { LoadingCenter } from 'components';\n\nconst Main = props => {\n  const children = props.children,\n        user = props.user,\n        logout = props.logout,\n        getInfoUser = props.getInfoUser,\n        classes = props.classes;\n  useEffect(() => {\n    if (!localStorage.jwtToken) {\n      window.location.href = 'sign-in';\n    }\n\n    const decode = jwt_decode(localStorage.jwtToken);\n    getInfoUser(decode._id);\n  }, [getInfoUser]);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openSidebar = _useState2[0],\n        setOpenSidebar = _useState2[1];\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n  return React.createElement(LoadingCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }); // return (\n  //     <div\n  //         className={clsx({\n  //             [classes.root]: true,\n  //             [classes.shiftContent]: isDesktop\n  //         })}\n  //     >\n  //         <Topbar \n  //             onSidebarOpen={handleSidebarOpen}\n  //             logout={logout}\n  //         />\n  //         <Sidebar\n  //             onClose={handleSidebarClose}\n  //             open={shouldOpenSidebar}\n  //             variant={isDesktop ? 'persistent' : 'temporary'}\n  //             logout={logout}\n  //             user={user}\n  //         />\n  //         <main className={classes.content}>\n  //             {children}\n  //             { (Object.entries(user).length !== 0) ? <Footer /> : null }\n  //         </main>\n  //     </div>\n  // );\n};\n\nMain.propTypes = {\n  children: PropTypes.node,\n  user: PropTypes.object,\n  logout: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuth: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  getInfoUser\n})(withRouter(withStyles(styles)(Main)));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\layouts\\Main\\Main.js"],"names":["React","useState","useEffect","PropTypes","clsx","jwt_decode","withStyles","useTheme","useMediaQuery","connect","withRouter","Sidebar","Topbar","Footer","logout","getInfoUser","styles","LoadingCenter","Main","props","children","user","classes","localStorage","jwtToken","window","location","href","decode","_id","theme","isDesktop","breakpoints","up","defaultMatches","openSidebar","setOpenSidebar","handleSidebarOpen","handleSidebarClose","shouldOpenSidebar","propTypes","node","object","func","mapStateToProps","state","auth","isAuth","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport jwt_decode from 'jwt-decode';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { Sidebar, Topbar, Footer } from './components';\nimport { logout, getInfoUser } from './../../actions/authentication';\nimport styles from './styles';\nimport { LoadingCenter } from 'components';\n\nconst Main = props => {\n    const { children, user, logout, getInfoUser, classes } = props;\n    useEffect(() => {\n        if(!localStorage.jwtToken)\n        {\n            window.location.href = 'sign-in';\n        }\n        const decode = jwt_decode(localStorage.jwtToken);\n        getInfoUser(decode._id);\n    },[getInfoUser]);\n    const theme = useTheme();\n    const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n        defaultMatches: true\n    });\n\n    const [openSidebar, setOpenSidebar] = useState(false);\n\n    const handleSidebarOpen = () => {\n        setOpenSidebar(true);\n    };\n\n    const handleSidebarClose = () => {\n        setOpenSidebar(false);\n    };\n\n    const shouldOpenSidebar = isDesktop ? true : openSidebar;\n    return <LoadingCenter />\n    // return (\n    //     <div\n    //         className={clsx({\n    //             [classes.root]: true,\n    //             [classes.shiftContent]: isDesktop\n    //         })}\n    //     >\n    //         <Topbar \n    //             onSidebarOpen={handleSidebarOpen}\n    //             logout={logout}\n    //         />\n    //         <Sidebar\n    //             onClose={handleSidebarClose}\n    //             open={shouldOpenSidebar}\n    //             variant={isDesktop ? 'persistent' : 'temporary'}\n    //             logout={logout}\n    //             user={user}\n    //         />\n    //         <main className={classes.content}>\n    //             {children}\n    //             { (Object.entries(user).length !== 0) ? <Footer /> : null }\n    //         </main>\n    //     </div>\n    // );\n};\n\nMain.propTypes = {\n    children: PropTypes.node,\n    user: PropTypes.object,\n    logout: PropTypes.func\n};\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    isAuth: state.auth.isAuthenticated\n})\nexport default connect(mapStateToProps, { logout, getInfoUser })(withRouter(withStyles(styles)(Main)));\n"]},"metadata":{},"sourceType":"module"}