{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\SignIn\\\\components\\\\ForgotPassword\\\\ForgotPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Card, CardHeader, CardContent, CardActions, Divider, Grid, Button, TextField } from '@material-ui/core';\nimport { LoadingButton } from 'components';\n\nconst ForgotPassword = props => {\n  const open = props.open,\n        handleCloseDialog = props.handleCloseDialog,\n        classes = props.classes;\n\n  const _useState = useState({\n    email: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loadingButton = _useState4[0],\n        SetLoadingButton = _useState4[1]; // useEffect(() => {\n  //     SetLoadingButton(false);\n  // }, [errors]);\n\n\n  const handleClose = () => {\n    handleCloseDialog(false);\n  };\n\n  const handleChange = event => {\n    setValue(_objectSpread({}, value, {\n      [event.target.name]: event.target.value\n    }));\n  }; // const handleClick = () => {\n  //     SetLoadingButton(true);\n  // };\n\n\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Add user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Email\",\n    margin: \"dense\",\n    name: \"email\",\n    variant: \"outlined\",\n    required: true,\n    onChange: handleChange // error={errors.email ? true : false}\n    // helperText={\n    //     errors.email ? errors.email : null\n    // }\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\" //onClick={handleClick} \n    ,\n    color: \"primary\" //disabled={loadingButton ? true : false}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Cancel\")))))));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\SignIn\\components\\ForgotPassword\\ForgotPassword.js"],"names":["React","useState","useEffect","Dialog","Card","CardHeader","CardContent","CardActions","Divider","Grid","Button","TextField","LoadingButton","ForgotPassword","props","open","handleCloseDialog","classes","email","value","setValue","loadingButton","SetLoadingButton","handleClose","handleChange","event","target","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { LoadingButton } from 'components';\r\n\r\nconst ForgotPassword = props => {\r\n    const { open, handleCloseDialog, classes } = props;\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n    });\r\n    const [loadingButton, SetLoadingButton] = useState(false);\r\n    \r\n    // useEffect(() => {\r\n    //     SetLoadingButton(false);\r\n    // }, [errors]);\r\n\r\n    const handleClose = () => {\r\n        handleCloseDialog(false);\r\n    };\r\n    const handleChange = event => {\r\n        setValue({\r\n            ...value,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n    // const handleClick = () => {\r\n    //     SetLoadingButton(true);\r\n    // };\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"draggable-dialog-title\"\r\n        >\r\n            <div>\r\n                <Card>\r\n                    <form autoComplete=\"off\" noValidate>\r\n                        <CardHeader title=\"Add user\" />\r\n                        <Divider />\r\n                        <CardContent>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item md={12} xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Email\"\r\n                                        margin=\"dense\"\r\n                                        name=\"email\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        onChange={handleChange}\r\n                                        // error={errors.email ? true : false}\r\n                                        // helperText={\r\n                                        //     errors.email ? errors.email : null\r\n                                        // }\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        <Divider />\r\n                        <CardActions>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"flex-end\"\r\n                                alignItems=\"flex-end\"\r\n                            >\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    //onClick={handleClick} \r\n                                    color=\"primary\"\r\n                                    //disabled={loadingButton ? true : false}\r\n                                >\r\n                                    {/* { \r\n                                       loadingButton ? <LoadingButton /> : null\r\n                                    } */}\r\n                                    Save\r\n                                </Button>\r\n                                <Button onClick={handleClose} color=\"secondary\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </CardActions>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}