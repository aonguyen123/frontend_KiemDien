{"ast":null,"code":"import { GET_ERRORS, CLEARN_ERRORS, ADD_ClASS, OPEN_NOTIFY } from './../constants/types';\nimport callAPI from './../common/callApi';\nexport const addClass = newClass => dispatch => {\n  callAPI('/createClass', 'POST', {\n    newClass\n  }).then(res => {\n    dispatch({\n      type: OPEN_NOTIFY\n    });\n    dispatch({\n      type: ADD_ClASS,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEARN_ERRORS,\n      payload: {}\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\actions\\actionClass.js"],"names":["GET_ERRORS","CLEARN_ERRORS","ADD_ClASS","OPEN_NOTIFY","callAPI","addClass","newClass","dispatch","then","res","type","payload","data","catch","err","response"],"mappings":"AAAA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,WAJJ,QAKO,sBALP;AAMA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,QAAQ,IAAIC,QAAQ,IAAI;AAC5CH,EAAAA,OAAO,CAAC,cAAD,EAAiB,MAAjB,EAAyB;AAAEE,IAAAA;AAAF,GAAzB,CAAP,CACKE,IADL,CACUC,GAAG,IAAI;AACTF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGAI,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,SADD;AAELS,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,aADD;AAELU,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GAbL,EAcKE,KAdL,CAcWC,GAAG,IAAI;AACVP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,UADD;AAELW,MAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFjB,KAAD,CAAR;AAIH,GAnBL;AAoBH,CArBM","sourcesContent":["import {\r\n    GET_ERRORS,\r\n    CLEARN_ERRORS,\r\n    ADD_ClASS,\r\n    OPEN_NOTIFY\r\n} from './../constants/types';\r\nimport callAPI from './../common/callApi';\r\n\r\nexport const addClass = newClass => dispatch => {\r\n    callAPI('/createClass', 'POST', { newClass })\r\n        .then(res => {\r\n            dispatch({\r\n                type: OPEN_NOTIFY\r\n            });\r\n            dispatch({\r\n                type: ADD_ClASS,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: CLEARN_ERRORS,\r\n                payload: {}\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};"]},"metadata":{},"sourceType":"module"}