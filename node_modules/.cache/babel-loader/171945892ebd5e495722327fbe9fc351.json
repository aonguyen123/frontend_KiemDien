{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Dashboard\\\\Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { TotalClasses, TotalUsers, TasksProgress, TotalMember, PresentStatistical, MemberByPresence, LatestClasses, LatestAssigned, TopDashBoard } from './components';\nimport { closeNotify } from './../../actions/notify';\nimport { filterTask, getDateFilter, clearnTask, getIndexChooseWeek } from './../../actions/actionTask';\nimport { getDataDashBoard } from './../../actions/dashboard';\nimport { deleteClass } from './../../actions/actionClass';\nimport { Notifies, LoadingCenter } from 'components';\nimport styles from './styles';\n\nconst Dashboard = props => {\n  const classes = props.classes,\n        showNotify = props.showNotify,\n        closeNotify = props.closeNotify,\n        classLatest = props.classLatest,\n        getDataDashBoard = props.getDataDashBoard,\n        isLoading = props.isLoading,\n        deleteClass = props.deleteClass,\n        actionClass = props.actionClass,\n        assignesLatest = props.assignesLatest,\n        totalClass = props.totalClass,\n        totalUser = props.totalUser,\n        totalMember = props.totalMember,\n        filterTask = props.filterTask,\n        DataByPresences_Statistical = props.DataByPresences_Statistical,\n        dateFilter = props.dateFilter,\n        indexFilter = props.indexFilter,\n        getDateFilter = props.getDateFilter,\n        getIndexChooseWeek = props.getIndexChooseWeek,\n        chooseWeek = props.chooseWeek,\n        clearnTask = props.clearnTask;\n  useEffect(() => {\n    clearnTask();\n    getDataDashBoard();\n  }, [clearnTask, getDataDashBoard, actionClass]);\n\n  const setCloseNotify = () => {\n    closeNotify();\n  };\n\n  if (isLoading) return React.createElement(LoadingCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Notifies, {\n    variant: actionClass.isSuccess ? 'success' : 'error',\n    message: actionClass.message,\n    openNotify: showNotify,\n    setCloseNotify: setCloseNotify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TopDashBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    sm: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TotalClasses, {\n    totalClass: totalClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    sm: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TotalUsers, {\n    totalUser: totalUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    sm: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TasksProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    sm: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TotalMember, {\n    totalMember: totalMember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 8,\n    md: 12,\n    xl: 9,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(PresentStatistical, {\n    DataByPresences_Statistical: DataByPresences_Statistical,\n    getIndexChooseWeek: getIndexChooseWeek,\n    chooseWeek: chooseWeek,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(MemberByPresence, {\n    filterTask: filterTask,\n    getDateFilter: getDateFilter,\n    DataByPresences_Statistical: DataByPresences_Statistical,\n    dateFilter: dateFilter,\n    indexFilter: indexFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(LatestClasses, {\n    classLatest: classLatest,\n    deleteClass: deleteClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 8,\n    md: 12,\n    xl: 9,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(LatestAssigned, {\n    assignesLatest: assignesLatest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  showNotify: state.showNotify.isShow,\n  classLatest: state.classes.classes,\n  isLoading: state.isLoading.isLoading,\n  actionClass: state.actionClass,\n  assignesLatest: state.assignesClass,\n  totalClass: state.totalClass,\n  totalUser: state.totalUser,\n  totalMember: state.totalMember,\n  DataByPresences_Statistical: state.statisticalClassesPresences,\n  dateFilter: state.task.dateFilter,\n  indexFilter: state.task.index,\n  chooseWeek: state.task\n});\n\nexport default connect(mapStateToProps, {\n  closeNotify,\n  getDataDashBoard,\n  deleteClass,\n  filterTask,\n  getDateFilter,\n  clearnTask,\n  getIndexChooseWeek\n})(withStyles(styles)(Dashboard));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\Dashboard.js"],"names":["React","useEffect","connect","withStyles","Grid","TotalClasses","TotalUsers","TasksProgress","TotalMember","PresentStatistical","MemberByPresence","LatestClasses","LatestAssigned","TopDashBoard","closeNotify","filterTask","getDateFilter","clearnTask","getIndexChooseWeek","getDataDashBoard","deleteClass","Notifies","LoadingCenter","styles","Dashboard","props","classes","showNotify","classLatest","isLoading","actionClass","assignesLatest","totalClass","totalUser","totalMember","DataByPresences_Statistical","dateFilter","indexFilter","chooseWeek","setCloseNotify","root","isSuccess","message","mapStateToProps","state","isShow","assignesClass","statisticalClassesPresences","task","index"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport {\n    TotalClasses,\n    TotalUsers,\n    TasksProgress,\n    TotalMember,\n    PresentStatistical,\n    MemberByPresence,\n    LatestClasses,\n    LatestAssigned,\n    TopDashBoard\n} from './components';\nimport { closeNotify } from './../../actions/notify';\nimport {\n    filterTask,\n    getDateFilter,\n    clearnTask,\n    getIndexChooseWeek\n} from './../../actions/actionTask';\nimport { getDataDashBoard } from './../../actions/dashboard';\nimport { deleteClass } from './../../actions/actionClass';\nimport { Notifies, LoadingCenter } from 'components';\nimport styles from './styles';\n\nconst Dashboard = props => {\n    const {\n        classes,\n        showNotify,\n        closeNotify,\n        classLatest,\n        getDataDashBoard,\n        isLoading,\n        deleteClass,\n        actionClass,\n        assignesLatest,\n        totalClass,\n        totalUser,\n        totalMember,\n        filterTask,\n        DataByPresences_Statistical,\n        dateFilter,\n        indexFilter,\n        getDateFilter,\n        getIndexChooseWeek,\n        chooseWeek,\n        clearnTask\n    } = props;\n\n    useEffect(() => {\n        clearnTask();\n        getDataDashBoard();\n    }, [clearnTask, getDataDashBoard, actionClass]);\n\n    const setCloseNotify = () => {\n        closeNotify();\n    };\n\n    if (isLoading) return <LoadingCenter />;\n    return (\n        <div className={classes.root}>\n            <Notifies\n                variant={actionClass.isSuccess ? 'success' : 'error'}\n                message={actionClass.message}\n                openNotify={showNotify}\n                setCloseNotify={setCloseNotify}\n            />\n            <Grid container spacing={4}>\n                <Grid item lg={12} xs={12}>\n                    <TopDashBoard />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                    <TotalClasses totalClass={totalClass} />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                    <TotalUsers totalUser={totalUser} />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                    <TasksProgress />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                    <TotalMember totalMember={totalMember} />\n                </Grid>\n                <Grid item lg={8} md={12} xl={9} xs={12}>\n                    <PresentStatistical\n                        DataByPresences_Statistical={\n                            DataByPresences_Statistical\n                        }\n                        getIndexChooseWeek={getIndexChooseWeek}\n                        chooseWeek={chooseWeek}\n                    />\n                </Grid>\n                <Grid item lg={4} md={6} xl={3} xs={12}>\n                    <MemberByPresence\n                        filterTask={filterTask}\n                        getDateFilter={getDateFilter}\n                        DataByPresences_Statistical={\n                            DataByPresences_Statistical\n                        }\n                        dateFilter={dateFilter}\n                        indexFilter={indexFilter}\n                    />\n                </Grid>\n                <Grid item lg={4} md={6} xl={3} xs={12}>\n                    <LatestClasses\n                        classLatest={classLatest}\n                        deleteClass={deleteClass}\n                    />\n                </Grid>\n                <Grid item lg={8} md={12} xl={9} xs={12}>\n                    <LatestAssigned assignesLatest={assignesLatest} />\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\nconst mapStateToProps = state => ({\n    showNotify: state.showNotify.isShow,\n    classLatest: state.classes.classes,\n    isLoading: state.isLoading.isLoading,\n    actionClass: state.actionClass,\n    assignesLatest: state.assignesClass,\n    totalClass: state.totalClass,\n    totalUser: state.totalUser,\n    totalMember: state.totalMember,\n    DataByPresences_Statistical: state.statisticalClassesPresences,\n    dateFilter: state.task.dateFilter,\n    indexFilter: state.task.index,\n    chooseWeek: state.task\n});\nexport default connect(\n    mapStateToProps,\n    {\n        closeNotify,\n        getDataDashBoard,\n        deleteClass,\n        filterTask,\n        getDateFilter,\n        clearnTask,\n        getIndexChooseWeek\n    }\n)(withStyles(styles)(Dashboard));\n"]},"metadata":{},"sourceType":"module"}