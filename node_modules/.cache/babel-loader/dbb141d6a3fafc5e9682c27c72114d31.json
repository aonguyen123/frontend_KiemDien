{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Dashboard\\\\components\\\\LatestClasses\\\\LatestClasses.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, CardActions, Button, Divider, List, ListItem, ListItemAvatar, ListItemText, IconButton, Menu, MenuItem, Typography } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Link as LinkClasses } from 'react-router-dom';\nimport mockData from './data';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    padding: 0\n  },\n  image: {\n    height: 48,\n    width: 48\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestProducts = props => {\n  const className = props.className;\n  const classes = useStyles();\n\n  const _useState = useState(mockData),\n        _useState2 = _slicedToArray(_useState, 1),\n        products = _useState2[0];\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n  const open = Boolean(anchorEl);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Latest classes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, products.map((product, i) => React.createElement(ListItem, {\n    divider: i < products.length - 1,\n    key: product.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"Product\",\n    className: classes.image,\n    src: product.imageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: product.name,\n    secondary: \"Updated \".concat(product.updatedAt.fromNow()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(MoreVertIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"View detail\")), React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Edit\")), React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Delete\"))))))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(LinkClasses, {\n    to: \"/classes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"View all \", React.createElement(ArrowRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })))));\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\nexport default LatestProducts;","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\components\\LatestClasses\\LatestClasses.js"],"names":["React","useState","clsx","PropTypes","makeStyles","Card","CardHeader","CardContent","CardActions","Button","Divider","List","ListItem","ListItemAvatar","ListItemText","IconButton","Menu","MenuItem","Typography","ArrowRightIcon","MoreVertIcon","Link","LinkClasses","mockData","useStyles","theme","root","height","content","padding","image","width","actions","justifyContent","LatestProducts","props","className","classes","products","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","map","product","i","length","id","imageUrl","name","updatedAt","fromNow","vertical","horizontal","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    CardActions,\n    Button,\n    Divider,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    IconButton,\n    Menu,\n    MenuItem,\n    Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Link as LinkClasses } from 'react-router-dom';\n\nimport mockData from './data';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%'\n    },\n    content: {\n        padding: 0\n    },\n    image: {\n        height: 48,\n        width: 48\n    },\n    actions: {\n        justifyContent: 'flex-end'\n    }\n}));\n\nconst LatestProducts = props => {\n    const { className } = props;\n\n    const classes = useStyles();\n\n    const [products] = useState(mockData);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardHeader\n                title=\"Latest classes\"\n            />\n            <Divider />\n            <CardContent className={classes.content}>\n                <List>\n                    {products.map((product, i) => (\n                        <ListItem\n                            divider={i < products.length - 1}\n                            key={product.id}\n                        >\n                            <ListItemAvatar>\n                                <img\n                                    alt=\"Product\"\n                                    className={classes.image}\n                                    src={product.imageUrl}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={product.name}\n                                secondary={`Updated ${product.updatedAt.fromNow()}`}\n                            />\n                            <IconButton\n                                edge=\"end\"\n                                size=\"small\"\n                                onClick={handleClick}\n                            >\n                                <MoreVertIcon />\n                            </IconButton>\n                            <Menu\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right'\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right'\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>\n                                    <Typography variant=\"button\">View detail</Typography>\n                                </MenuItem>\n                                <MenuItem onClick={handleClose}>\n                                    <Typography variant=\"button\">Edit</Typography>\n                                </MenuItem>\n                                <MenuItem onClick={handleClose}>\n                                    <Typography variant=\"button\">Delete</Typography>\n                                </MenuItem>\n                            </Menu>\n                        </ListItem>\n                    ))}\n                </List>\n            </CardContent>\n            <Divider />\n            <CardActions className={classes.actions}>\n                <LinkClasses to=\"/classes\">\n                    <Button color=\"primary\" size=\"small\" variant=\"text\">\n                        View all <ArrowRightIcon />\n                    </Button>\n                </LinkClasses>\n            </CardActions>\n        </Card>\n    );\n};\n\nLatestProducts.propTypes = {\n    className: PropTypes.string\n};\n\nexport default LatestProducts;\n"]},"metadata":{},"sourceType":"module"}