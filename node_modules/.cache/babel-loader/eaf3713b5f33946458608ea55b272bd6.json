{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Dashboard\\\\components\\\\MemberByPresence\\\\MemberByPresence.js\";\nimport React, { useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Button, Divider, Typography, Menu, MenuItem } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { DialogStatistical } from './components';\nimport { data, devices, options } from './chart';\nimport styles from './styles';\nconst optionsSelect = ['By week', 'By month', 'By year'];\n\nconst MemberByPresence = props => {\n  const className = props.className,\n        classes = props.classes,\n        rest = _objectWithoutProperties(props, [\"className\", \"classes\"]);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        anchorEl = _useState2[0],\n        setAnchorEl = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedIndex = _useState4[0],\n        setSelectedIndex = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        open = _useState6[0],\n        setOpen = _useState6[1];\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(DialogStatistical, {\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    action: React.createElement(Button, {\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      variant: \"text\",\n      className: classes.paperButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, optionsSelect[selectedIndex]), React.createElement(ArrowDropDownIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })),\n    title: \"Members by presence\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, devices.map(device => React.createElement(\"div\", {\n    className: classes.device,\n    key: device.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.deviceIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, device.icon), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, device.title), React.createElement(Typography, {\n    style: {\n      color: device.color\n    },\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, device.value, \"%\"))))), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, optionsSelect.map((option, index) => React.createElement(MenuItem, {\n    onClick: event => handleMenuItemClick(event, index),\n    key: option,\n    selected: index === selectedIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, option))));\n};\n\nexport default withStyles(styles)(MemberByPresence);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\components\\MemberByPresence\\MemberByPresence.js"],"names":["React","useState","Pie","clsx","withStyles","Card","CardHeader","CardContent","Button","Divider","Typography","Menu","MenuItem","ArrowDropDownIcon","DialogStatistical","data","devices","options","styles","optionsSelect","MemberByPresence","props","className","classes","rest","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","open","setOpen","handleClick","event","currentTarget","handleClose","handleMenuItemClick","index","root","paperButton","chartContainer","stats","map","device","title","deviceIcon","icon","color","value","Boolean","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    Button,\n    Divider,\n    Typography,\n    Menu,\n    MenuItem\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { DialogStatistical } from './components';\nimport { data, devices, options } from './chart';\nimport styles from './styles';\n\nconst optionsSelect = ['By week', 'By month', 'By year'];\nconst MemberByPresence = props => {\n    const { className, classes, ...rest } = props;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [open, setOpen] = useState(false);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const handleMenuItemClick = (event, index) => {\n        setSelectedIndex(index);\n        setAnchorEl(null);\n    };\n\n    return (\n        <Card {...rest} className={clsx(classes.root, className)}>\n            <DialogStatistical \n                open={open}\n            />\n            <CardHeader\n                action={\n                    <Button\n                        aria-haspopup=\"true\"\n                        onClick={handleClick}\n                        variant=\"text\"\n                        className={classes.paperButton}\n                    >\n                        <Typography variant=\"h5\">\n                            {optionsSelect[selectedIndex]}\n                        </Typography>\n                        <ArrowDropDownIcon />\n                    </Button>\n                }\n                title=\"Members by presence\"\n            />\n            <Divider />\n            <CardContent>\n                <div className={classes.chartContainer}>\n                    <Pie data={data} options={options} />\n                </div>\n                <div className={classes.stats}>\n                    {devices.map(device => (\n                        <div className={classes.device} key={device.title}>\n                            <span className={classes.deviceIcon}>\n                                {device.icon}\n                            </span>\n                            <Typography variant=\"body1\">\n                                {device.title}\n                            </Typography>\n                            <Typography\n                                style={{ color: device.color }}\n                                variant=\"h2\"\n                            >\n                                {device.value}%\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n            </CardContent>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {optionsSelect.map((option, index) => (\n                    <MenuItem\n                        onClick={event => handleMenuItemClick(event, index)}\n                        key={option}\n                        selected={index === selectedIndex}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </Card>\n    );\n};\nexport default withStyles(styles)(MemberByPresence);\n"]},"metadata":{},"sourceType":"module"}