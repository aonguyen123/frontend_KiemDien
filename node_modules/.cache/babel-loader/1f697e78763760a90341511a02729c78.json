{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\ClassDetail\\\\components\\\\CardClassMember\\\\CardClassMember.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport { Avatar, Card, CardHeader, CardContent, CardActions, Divider, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, IconButton, TablePagination, Menu, MenuItem } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport styles from './styles';\n\nconst CardClassMember = props => {\n  const classes = props.classes,\n        className = props.className,\n        classById = props.classById;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        anchorEl = _useState2[0],\n        setAnchorEl = _useState2[1];\n\n  const _useState3 = useState(5),\n        _useState4 = _slicedToArray(_useState3, 2),\n        rowsPerPage = _useState4[0],\n        setRowsPerPage = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        page = _useState6[0],\n        setPage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selectedMember = _useState8[0],\n        setSelectedMember = _useState8[1];\n\n  const dssv = classById.dssv;\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setPage(0);\n    setRowsPerPage(+event.target.value);\n  };\n\n  const handleSelectAll = event => {\n    let selectedMember;\n\n    if (event.target.checked) {\n      selectedMember = dssv.map(sv => sv._id);\n    } else {\n      selectedMember = [];\n    }\n\n    setSelectedMember(selectedMember);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedMember.indexOf(id);\n    let newSelectedMember = [];\n\n    if (selectedIndex === -1) {\n      newSelectedMember = newSelectedMember.concat(selectedMember, id);\n    } else if (selectedIndex === 0) {\n      newSelectedMember = newSelectedMember.concat(selectedMember.slice(1));\n    } else if (selectedIndex === selectedMember.length - 1) {\n      newSelectedMember = newSelectedMember.concat(selectedMember.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedMember = newSelectedMember.concat(selectedMember.slice(0, selectedIndex), selectedMember.slice(selectedIndex + 1));\n    }\n\n    setSelectedMember(newSelectedMember);\n  };\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Class members\",\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(MoreVertIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(GetAppIcon, {\n    className: classes.iconCardMember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"text-button-file\",\n    multiple: true,\n    type: \"file\" //onChange={handleChange}\n    ,\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"text-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Button, {\n    component: \"span\",\n    className: classes.uploadButton,\n    color: \"primary\",\n    variant: \"text\" //disabled={loadingButtonUpload}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Import\"))), React.createElement(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(PersonAddIcon, {\n    className: classes.iconCardMember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Add member\"))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, (classById.dssv && classById.dssv.length) === 0 ? React.createElement(Typography, {\n    variant: \"body1\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Member not found\") : React.createElement(Table, {\n    styles: {\n      border: '1px solid red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: dssv ? selectedMember.length === dssv.length : null,\n    color: \"primary\",\n    indeterminate: selectedMember.length > 0 && selectedMember.length < dssv.length,\n    onChange: handleSelectAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"MSSV\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"BirthDay\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, dssv ? dssv.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(sv => React.createElement(TableRow, {\n    className: classes.tableRow,\n    hover: true,\n    key: 1,\n    selected: selectedMember.indexOf(sv._id) !== -1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: selectedMember.indexOf(sv._id) !== -1,\n    color: \"primary\",\n    onChange: handleSelectOne,\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: \"//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"aonguyen\"))), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"31151410004\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Nam\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"20/09/1092\"))) : null)))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: dssv ? dssv.length : 0,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [],\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    labelRowsPerPage: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })));\n};\n\nexport default withStyles(styles)(CardClassMember);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\ClassDetail\\components\\CardClassMember\\CardClassMember.js"],"names":["React","useState","clsx","PerfectScrollbar","withStyles","Avatar","Card","CardHeader","CardContent","CardActions","Divider","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","IconButton","TablePagination","Menu","MenuItem","MoreVertIcon","GetAppIcon","PersonAddIcon","styles","CardClassMember","props","classes","className","classById","anchorEl","setAnchorEl","rowsPerPage","setRowsPerPage","page","setPage","selectedMember","setSelectedMember","dssv","handleClick","event","currentTarget","handleClose","handlePageChange","handleRowsPerPageChange","target","value","handleSelectAll","checked","map","sv","_id","handleSelectOne","id","selectedIndex","indexOf","newSelectedMember","concat","slice","length","root","Boolean","iconCardMember","input","uploadButton","content","border","tableRow","nameContainer","avatar","actions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Checkbox,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography,\r\n    IconButton,\r\n    TablePagination,\r\n    Menu,\r\n    MenuItem\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport styles from './styles';\r\n\r\nconst CardClassMember = props => {\r\n    const { classes, className, classById } = props;\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [page, setPage] = useState(0);\r\n    const [selectedMember, setSelectedMember] = useState([]);\r\n\r\n    const { dssv } = classById;\r\n    function handleClick(event) {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n    function handleClose() {\r\n        setAnchorEl(null);\r\n    }\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page);\r\n    };\r\n    const handleRowsPerPageChange = event => {\r\n        setPage(0);\r\n        setRowsPerPage(+event.target.value);\r\n    };\r\n    const handleSelectAll = event => {\r\n        let selectedMember;\r\n        if (event.target.checked) {\r\n            selectedMember = dssv.map(sv => sv._id);\r\n        } else {\r\n            selectedMember = [];\r\n        }\r\n        setSelectedMember(selectedMember);\r\n    };\r\n    const handleSelectOne = (event, id) => {\r\n        const selectedIndex = selectedMember.indexOf(id);\r\n        let newSelectedMember = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelectedMember = newSelectedMember.concat(\r\n                selectedMember,\r\n                id\r\n            );\r\n        } else if (selectedIndex === 0) {\r\n            newSelectedMember = newSelectedMember.concat(\r\n                selectedMember.slice(1)\r\n            );\r\n        } else if (selectedIndex === selectedMember.length - 1) {\r\n            newSelectedMember = newSelectedMember.concat(\r\n                selectedMember.slice(0, -1)\r\n            );\r\n        } else if (selectedIndex > 0) {\r\n            newSelectedMember = newSelectedMember.concat(\r\n                selectedMember.slice(0, selectedIndex),\r\n                selectedMember.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n        setSelectedMember(newSelectedMember);\r\n    };\r\n    return (\r\n        <Card className={clsx(classes.root, className)}>\r\n            <CardHeader\r\n                title=\"Class members\"\r\n                action={\r\n                    <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n            />\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem>\r\n                    <GetAppIcon className={classes.iconCardMember} />\r\n                    <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"text-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    //onChange={handleChange}\r\n                    \r\n                    value=\"\"\r\n                    />\r\n                    <label htmlFor=\"text-button-file\">\r\n                        <Button\r\n                            component=\"span\"\r\n                            className={classes.uploadButton}\r\n                            color=\"primary\"\r\n                            variant=\"text\"\r\n                            //disabled={loadingButtonUpload}\r\n                        >\r\n                            {/* {loadingButtonUpload ? <LoadingButton /> : null} */}\r\n                            Import\r\n                        </Button>\r\n                    </label>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <PersonAddIcon className={classes.iconCardMember} />\r\n                    <Typography variant=\"button\">Add member</Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n            <Divider />\r\n            <CardContent className={classes.content}>\r\n                <PerfectScrollbar>\r\n                    {(classById.dssv && classById.dssv.length) === 0 ? (\r\n                        <Typography variant=\"body1\" align=\"center\">\r\n                            Member not found\r\n                        </Typography>\r\n                    ) : (\r\n                        <Table styles={{ border: '1px solid red' }}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            checked={\r\n                                                dssv\r\n                                                    ? selectedMember.length ===\r\n                                                      dssv.length\r\n                                                    : null\r\n                                            }\r\n                                            color=\"primary\"\r\n                                            indeterminate={\r\n                                                selectedMember.length > 0 &&\r\n                                                selectedMember.length <\r\n                                                    dssv.length\r\n                                            }\r\n                                            onChange={handleSelectAll}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>MSSV</TableCell>\r\n                                    <TableCell>Gender</TableCell>\r\n                                    <TableCell>BirthDay</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {dssv ? \r\n                                    dssv\r\n                                    .slice(\r\n                                        page * rowsPerPage,\r\n                                        page * rowsPerPage + rowsPerPage\r\n                                    )\r\n                                    .map(sv => (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            hover\r\n                                            key={1}\r\n                                            selected={\r\n                                                selectedMember.indexOf(\r\n                                                    sv._id\r\n                                                ) !== -1\r\n                                            }\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={\r\n                                                        selectedMember.indexOf(\r\n                                                            sv._id\r\n                                                        ) !== -1\r\n                                                    }\r\n                                                    color=\"primary\"\r\n                                                    onChange={handleSelectOne}\r\n                                                    value=\"true\"\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <div\r\n                                                    className={\r\n                                                        classes.nameContainer\r\n                                                    }\r\n                                                >\r\n                                                    <Avatar\r\n                                                        className={\r\n                                                            classes.avatar\r\n                                                        }\r\n                                                        src={`//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm`}\r\n                                                    ></Avatar>\r\n                                                    <Typography variant=\"body1\">\r\n                                                        aonguyen\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>31151410004</TableCell>\r\n                                            <TableCell>Nam</TableCell>\r\n                                            <TableCell>20/09/1092</TableCell>\r\n                                        </TableRow>\r\n                                    )): null}\r\n                            </TableBody>\r\n                        </Table>\r\n                    )}\r\n                </PerfectScrollbar>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions className={classes.actions}>\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={dssv ? dssv.length : 0}\r\n                    onChangePage={handlePageChange}\r\n                    onChangeRowsPerPage={handleRowsPerPageChange}\r\n                    page={page}\r\n                    rowsPerPage={rowsPerPage}\r\n                    rowsPerPageOptions={[]}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'previous page'\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'next page'\r\n                    }}\r\n                    labelRowsPerPage=\"\"\r\n                />\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\nexport default withStyles(styles)(CardClassMember);\r\n"]},"metadata":{},"sourceType":"module"}