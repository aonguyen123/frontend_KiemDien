{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\UserList\\\\UserList.js\";\nimport React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { UsersToolbar, UsersTable } from './components';\nimport { getUsers } from './../../actions/users';\nimport { createUser, deleteUsers } from './../../actions/actionUser';\nimport { searchTask } from './../../actions/actionTask';\nimport { clearErrors } from './../../actions/clearErrors';\nimport { closeNotify } from './../../actions/notify';\nimport { LoadingCenter } from 'components';\nimport { Notifies } from 'components';\nimport styles from './styles';\n\nconst UserList = props => {\n  const classes = props.classes,\n        errors = props.errors,\n        actionUser = props.actionUser,\n        isLoading = props.isLoading,\n        getUsers = props.getUsers,\n        createUser = props.createUser,\n        deleteUsers = props.deleteUsers,\n        showNotify = props.showNotify,\n        closeNotify = props.closeNotify,\n        clearErrors = props.clearErrors,\n        searchTask = props.searchTask,\n        search = props.search;\n  let users = props.users;\n  useEffect(() => {\n    getUsers();\n  }, [getUsers, actionUser]);\n\n  const setCloseNotify = () => {\n    closeNotify();\n  };\n\n  users = users.filter(user => user.email.toLowerCase().indexOf(search.toLowerCase()) !== -1);\n  if (isLoading) return React.createElement(LoadingCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Notifies, {\n    variant: actionUser.isSuccess ? 'success' : 'error',\n    message: actionUser.message,\n    openNotify: actionUser.isSuccess === null ? false : showNotify,\n    setCloseNotify: setCloseNotify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(UsersToolbar, {\n    createUser: createUser,\n    errors: errors,\n    clearErrors: clearErrors,\n    searchTask: searchTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(UsersTable, {\n    users: users,\n    deleteUsers: deleteUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  users: state.users.users,\n  actionUser: state.actionUser,\n  isLoading: state.isLoading.isLoading,\n  showNotify: state.showNotify.isShow,\n  errors: state.errors,\n  search: state.task.search\n});\n\nexport default connect(mapStateToProps, {\n  getUsers,\n  deleteUsers,\n  createUser,\n  clearErrors,\n  closeNotify,\n  searchTask\n})(withStyles(styles)(UserList));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\UserList\\UserList.js"],"names":["React","useEffect","withStyles","connect","UsersToolbar","UsersTable","getUsers","createUser","deleteUsers","searchTask","clearErrors","closeNotify","LoadingCenter","Notifies","styles","UserList","props","classes","errors","actionUser","isLoading","showNotify","search","users","setCloseNotify","filter","user","email","toLowerCase","indexOf","root","isSuccess","message","content","mapStateToProps","state","isShow","task"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\n\nimport { UsersToolbar, UsersTable } from './components';\nimport { getUsers } from './../../actions/users';\nimport { createUser, deleteUsers } from './../../actions/actionUser';\nimport { searchTask } from './../../actions/actionTask';\nimport { clearErrors } from './../../actions/clearErrors';\nimport { closeNotify } from './../../actions/notify';\nimport { LoadingCenter } from 'components';\nimport { Notifies } from 'components';\nimport styles from './styles';\n\nconst UserList = props => {\n    const {\n        classes,\n        errors,\n        actionUser,\n        isLoading,\n        getUsers,\n        createUser,\n        deleteUsers,\n        showNotify,\n        closeNotify,\n        clearErrors,\n        searchTask,\n        search\n    } = props;\n    let { users } = props;\n\n    useEffect(() => {\n        getUsers();\n    }, [getUsers, actionUser]);\n\n    const setCloseNotify = () => {\n        closeNotify();\n    };\n    users = users.filter(user => user.email.toLowerCase().indexOf(search.toLowerCase()) !== -1);\n\n    if(isLoading) return <LoadingCenter />\n    return (\n        <div className={classes.root}>\n            <Notifies\n                variant={actionUser.isSuccess ? 'success' : 'error'}\n                message={actionUser.message}\n                openNotify={actionUser.isSuccess === null ? false : showNotify}\n                setCloseNotify={setCloseNotify}\n            />\n            <UsersToolbar\n                createUser={createUser}\n                errors={errors}\n                clearErrors={clearErrors}\n                searchTask={searchTask}\n            />\n            <div className={classes.content}>\n                <UsersTable \n                    users={users} \n                    deleteUsers={deleteUsers}\n                />\n            </div>\n        </div>\n    );    \n};\nconst mapStateToProps = state => ({\n    users: state.users.users,\n    actionUser: state.actionUser,\n    isLoading: state.isLoading.isLoading,\n    showNotify: state.showNotify.isShow,\n    errors: state.errors,\n    search: state.task.search\n});\nexport default connect(\n    mapStateToProps,\n    { getUsers, deleteUsers, createUser, clearErrors, closeNotify, searchTask }\n)(withStyles(styles)(UserList));"]},"metadata":{},"sourceType":"module"}