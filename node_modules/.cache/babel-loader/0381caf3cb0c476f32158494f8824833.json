{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\components\\\\Notifies\\\\Notifies.js\";\nimport React from 'react';\nimport { amber, green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slide from '@material-ui/core/Slide';\nimport styles from './styles';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nfunction SlideTransition(props) {\n  return React.createElement(Slide, Object.assign({}, props, {\n    direction: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n}\n\nconst Notifies = props => {\n  const _React$useState = React.useState({\n    open: true,\n    Transition: SlideTransition\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const message = props.message,\n        variant = props.variant,\n        classes = props.classes,\n        className = props.className;\n  const Icon = variantIcon[variant];\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      open: false\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    className: clsx(classes[variant], className),\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: state.open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    TransitionComponent: state.Transition,\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default withStyles(styles)(Notifies);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\components\\Notifies\\Notifies.js"],"names":["React","amber","green","PropTypes","clsx","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","IconButton","Snackbar","SnackbarContent","WarningIcon","withStyles","makeStyles","Slide","styles","variantIcon","success","warning","error","info","SlideTransition","props","Notifies","useState","open","Transition","state","setState","message","variant","classes","className","Icon","handleClose","event","reason","vertical","horizontal","icon","iconVariant"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport styles from './styles';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n};\r\nfunction SlideTransition(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nconst Notifies = props => {\r\n    const [state, setState] = React.useState({\r\n        open: true,\r\n        Transition: SlideTransition\r\n    });\r\n    const { message, variant, classes, className } = props;\r\n    const Icon = variantIcon[variant];\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setState({\r\n            ...state,\r\n            open: false\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                className={clsx(classes[variant], className)}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                }}\r\n                open={state.open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                TransitionComponent={state.Transition}\r\n                message={\r\n                    <span id=\"client-snackbar\" className={classes.message}>\r\n                        <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                        {message}\r\n                    </span>\r\n                }\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        <CloseIcon className={classes.icon} />\r\n                    </IconButton>\r\n                ]}\r\n            >\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\nexport default withStyles(styles)(Notifies);\r\n"]},"metadata":{},"sourceType":"module"}