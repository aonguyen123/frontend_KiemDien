{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\ClassDetail\\\\ClassDetail.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { ToolbarClassDetal, CardClassDetail, CardManage, CardClassMember, CardClassAvatar } from './components';\nimport { LoadingCenter, Notifies } from 'components';\nimport { clearErrors } from './../../actions/clearErrors';\nimport { getUserConditionStatusTrue } from './../../actions/users';\nimport { getClassById } from './../../actions/classes';\nimport { deleteClass } from './../../actions/actionClass';\nimport { searchTaskDraw, clearnTaskDraw } from './../../actions/actionTask';\nimport { updateInfoClassById, updateAvatarClassById, removeAvatarClass, importDssvClassById, addClassMemberById, editClassMemberById, deleteClassMemberById, changeManagerPerson, removeManagerPerson } from './../../actions/actionClassDetail';\nimport { closeNotify } from './../../actions/notify';\nimport styles from './styles';\n\nconst ClassDetail = props => {\n  const match = props.match,\n        classes = props.classes,\n        getClassById = props.getClassById,\n        classById = props.classById,\n        userOfClass = props.userOfClass,\n        errors = props.errors,\n        history = props.history,\n        isLoading = props.isLoading,\n        updateInfoClassById = props.updateInfoClassById,\n        showNotify = props.showNotify,\n        actionClass = props.actionClass,\n        closeNotify = props.closeNotify,\n        updateAvatarClassById = props.updateAvatarClassById,\n        removeAvatarClass = props.removeAvatarClass,\n        importDssvClassById = props.importDssvClassById,\n        addClassMemberById = props.addClassMemberById,\n        editClassMemberById = props.editClassMemberById,\n        clearErrors = props.clearErrors,\n        deleteClassMemberById = props.deleteClassMemberById,\n        deleteClass = props.deleteClass,\n        getUserConditionStatusTrue = props.getUserConditionStatusTrue,\n        loadingLocal = props.loadingLocal,\n        changeManagerPerson = props.changeManagerPerson,\n        removeManagerPerson = props.removeManagerPerson,\n        searchTaskDraw = props.searchTaskDraw,\n        clearnTaskDraw = props.clearnTaskDraw,\n        searchDraw = props.searchDraw;\n  let users = props.users;\n  const idClass = classById._id;\n  useEffect(() => {\n    getClassById(match.params.id, history);\n  }, [getClassById, match.params.id, history, actionClass]);\n  useEffect(() => {\n    getUserConditionStatusTrue();\n  }, [getUserConditionStatusTrue]);\n\n  const setCloseNotify = () => {\n    closeNotify();\n  };\n\n  users = users.filter(user => user.name.toLowerCase().indexOf(searchDraw.toLowerCase()) !== -1);\n\n  if (isLoading) {\n    return React.createElement(LoadingCenter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Notifies, {\n    variant: actionClass.isSuccess ? 'success' : 'error',\n    message: actionClass.message,\n    openNotify: actionClass.isSuccess === null ? false : showNotify,\n    setCloseNotify: setCloseNotify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(ToolbarClassDetal, {\n    classById: classById,\n    deleteClass: deleteClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 8,\n    md: 6,\n    xl: 8,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(CardClassDetail, {\n    classById: classById,\n    updateInfoClassById: updateInfoClassById,\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 6,\n    xl: 4,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(CardClassAvatar, {\n    classById: classById,\n    updateAvatarClassById: updateAvatarClassById,\n    errors: errors,\n    removeAvatarClass: removeAvatarClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 8,\n    md: 6,\n    xl: 8,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(CardClassMember, {\n    classById: classById,\n    importDssvClassById: importDssvClassById,\n    addClassMemberById: addClassMemberById,\n    errors: errors,\n    editClassMemberById: editClassMemberById,\n    clearErrors: clearErrors,\n    deleteClassMemberById: deleteClassMemberById,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 6,\n    xl: 4,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(CardManage, {\n    userOfClass: userOfClass,\n    loadingLocal: loadingLocal,\n    users: users,\n    changeManagerPerson: changeManagerPerson,\n    idClass: idClass,\n    removeManagerPerson: removeManagerPerson,\n    searchTaskDraw: searchTaskDraw,\n    clearnTaskDraw: clearnTaskDraw,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  classById: state.classById.lop,\n  userOfClass: state.classById.user,\n  actionClass: state.actionClass,\n  isLoading: state.isLoading.isLoading,\n  loadingLocal: state.loadingLocal.loadingLocal,\n  errors: state.errors,\n  showNotify: state.showNotify.isShow,\n  users: state.users.users,\n  searchDraw: state.taskDraw.search\n});\n\nexport default connect(mapStateToProps, {\n  getClassById,\n  updateInfoClassById,\n  closeNotify,\n  updateAvatarClassById,\n  removeAvatarClass,\n  importDssvClassById,\n  addClassMemberById,\n  editClassMemberById,\n  clearErrors,\n  deleteClassMemberById,\n  deleteClass,\n  getUserConditionStatusTrue,\n  changeManagerPerson,\n  removeManagerPerson,\n  searchTaskDraw,\n  clearnTaskDraw\n})(withStyles(styles)(ClassDetail));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\ClassDetail\\ClassDetail.js"],"names":["React","useEffect","connect","withStyles","Grid","ToolbarClassDetal","CardClassDetail","CardManage","CardClassMember","CardClassAvatar","LoadingCenter","Notifies","clearErrors","getUserConditionStatusTrue","getClassById","deleteClass","searchTaskDraw","clearnTaskDraw","updateInfoClassById","updateAvatarClassById","removeAvatarClass","importDssvClassById","addClassMemberById","editClassMemberById","deleteClassMemberById","changeManagerPerson","removeManagerPerson","closeNotify","styles","ClassDetail","props","match","classes","classById","userOfClass","errors","history","isLoading","showNotify","actionClass","loadingLocal","searchDraw","users","idClass","_id","params","id","setCloseNotify","filter","user","name","toLowerCase","indexOf","root","isSuccess","message","content","mapStateToProps","state","lop","isShow","taskDraw","search"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport {\r\n    ToolbarClassDetal,\r\n    CardClassDetail,\r\n    CardManage,\r\n    CardClassMember,\r\n    CardClassAvatar\r\n} from './components';\r\nimport { LoadingCenter, Notifies } from 'components';\r\nimport { clearErrors } from './../../actions/clearErrors';\r\nimport { getUserConditionStatusTrue } from './../../actions/users';\r\nimport { getClassById } from './../../actions/classes';\r\nimport { deleteClass } from './../../actions/actionClass';\r\nimport { searchTaskDraw, clearnTaskDraw } from './../../actions/actionTask';\r\nimport {\r\n    updateInfoClassById,\r\n    updateAvatarClassById,\r\n    removeAvatarClass,\r\n    importDssvClassById,\r\n    addClassMemberById,\r\n    editClassMemberById,\r\n    deleteClassMemberById,\r\n    changeManagerPerson,\r\n    removeManagerPerson\r\n} from './../../actions/actionClassDetail';\r\nimport { closeNotify } from './../../actions/notify';\r\nimport styles from './styles';\r\n\r\nconst ClassDetail = props => {\r\n    const {\r\n        match,\r\n        classes,\r\n        getClassById,\r\n        classById,\r\n        userOfClass,\r\n        errors,\r\n        history,\r\n        isLoading,\r\n        updateInfoClassById,\r\n        showNotify,\r\n        actionClass,\r\n        closeNotify,\r\n        updateAvatarClassById,\r\n        removeAvatarClass,\r\n        importDssvClassById,\r\n        addClassMemberById,\r\n        editClassMemberById,\r\n        clearErrors,\r\n        deleteClassMemberById,\r\n        deleteClass,\r\n        getUserConditionStatusTrue,\r\n        loadingLocal,\r\n        changeManagerPerson,\r\n        removeManagerPerson,\r\n        searchTaskDraw,\r\n        clearnTaskDraw,\r\n        searchDraw\r\n    } = props;\r\n    let { users } = props;\r\n\r\n    const idClass = classById._id;\r\n\r\n    useEffect(() => {\r\n        getClassById(match.params.id, history);\r\n    }, [getClassById, match.params.id, history, actionClass]);\r\n    useEffect(() => {\r\n        getUserConditionStatusTrue();\r\n    }, [getUserConditionStatusTrue]);\r\n\r\n    const setCloseNotify = () => {\r\n        closeNotify();\r\n    };\r\n\r\n    users = users.filter(user => user.name.toLowerCase().indexOf(searchDraw.toLowerCase()) !== -1);\r\n\r\n    if (isLoading) {\r\n        return <LoadingCenter />;\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Notifies\r\n                variant={actionClass.isSuccess ? 'success' : 'error'}\r\n                message={actionClass.message}                \r\n                openNotify={actionClass.isSuccess === null ? false : showNotify}\r\n                setCloseNotify={setCloseNotify}\r\n            />\r\n            <ToolbarClassDetal \r\n                classById={classById} \r\n                deleteClass={deleteClass}\r\n            />\r\n            <div className={classes.content}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item lg={8} md={6} xl={8} xs={12}>\r\n                        <CardClassDetail\r\n                            classById={classById}\r\n                            updateInfoClassById={updateInfoClassById}\r\n                            errors={errors}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} xl={4} xs={12}>\r\n                        <CardClassAvatar\r\n                            classById={classById}\r\n                            updateAvatarClassById={updateAvatarClassById}\r\n                            errors={errors}\r\n                            removeAvatarClass={removeAvatarClass}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={8} md={6} xl={8} xs={12}>\r\n                        <CardClassMember \r\n                            classById={classById} \r\n                            importDssvClassById={importDssvClassById}\r\n                            addClassMemberById={addClassMemberById}\r\n                            errors={errors}\r\n                            editClassMemberById={editClassMemberById}\r\n                            clearErrors={clearErrors}\r\n                            deleteClassMemberById={deleteClassMemberById}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} xl={4} xs={12}>\r\n                        <CardManage \r\n                            userOfClass={userOfClass} \r\n                            loadingLocal={loadingLocal}\r\n                            users={users}\r\n                            changeManagerPerson={changeManagerPerson}\r\n                            idClass={idClass}\r\n                            removeManagerPerson={removeManagerPerson}\r\n                            searchTaskDraw={searchTaskDraw}\r\n                            clearnTaskDraw={clearnTaskDraw}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    classById: state.classById.lop,\r\n    userOfClass: state.classById.user,\r\n    actionClass: state.actionClass,\r\n    isLoading: state.isLoading.isLoading,\r\n    loadingLocal: state.loadingLocal.loadingLocal,\r\n    errors: state.errors,\r\n    showNotify: state.showNotify.isShow,\r\n    users: state.users.users,\r\n    searchDraw: state.taskDraw.search\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getClassById,\r\n        updateInfoClassById,\r\n        closeNotify,\r\n        updateAvatarClassById,\r\n        removeAvatarClass,\r\n        importDssvClassById,\r\n        addClassMemberById,\r\n        editClassMemberById,\r\n        clearErrors,\r\n        deleteClassMemberById,\r\n        deleteClass,\r\n        getUserConditionStatusTrue,\r\n        changeManagerPerson,\r\n        removeManagerPerson,\r\n        searchTaskDraw,\r\n        clearnTaskDraw\r\n    }\r\n)(withStyles(styles)(ClassDetail));\r\n"]},"metadata":{},"sourceType":"module"}