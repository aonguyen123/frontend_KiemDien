{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\layouts\\\\Main\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport jwt_decode from 'jwt-decode';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Sidebar, Topbar, Footer } from './components';\nimport { getInfoAccount } from './../../actions/account';\nimport { logout } from './../../actions/authentication';\nimport { getCity } from './../../actions/city';\nimport styles from './styles';\n\nconst Main = props => {\n  const children = props.children,\n        account = props.account,\n        logout = props.logout,\n        classes = props.classes,\n        history = props.history,\n        citys = props.citys,\n        getCity = props.getCity,\n        getInfoAccount = props.getInfoAccount;\n\n  const idAccount = jwt_decode(localStorage.jwtToken)._id;\n\n  useEffect(() => {\n    if (!localStorage.jwtToken) {\n      history.push('/sign-in');\n    }\n  });\n  useEffect(() => {\n    getInfoAccount(idAccount);\n  }, [getInfoAccount, idAccount]);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openSidebar = _useState2[0],\n        setOpenSidebar = _useState2[1];\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n  return React.createElement(\"div\", {\n    className: clsx({\n      [classes.root]: true,\n      [classes.shiftContent]: isDesktop\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Topbar, {\n    onSidebarOpen: handleSidebarOpen,\n    logout: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    onClose: handleSidebarClose,\n    open: shouldOpenSidebar,\n    variant: isDesktop ? 'persistent' : 'temporary',\n    logout: logout,\n    account: account,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, children, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n};\n\nMain.propTypes = {\n  children: PropTypes.node,\n  user: PropTypes.object,\n  logout: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  account: state.account,\n  isAuth: state.auth.isAuthenticated,\n  citys: state.citys\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  getCity,\n  getInfoAccount\n})(withRouter(withStyles(styles)(Main)));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\layouts\\Main\\Main.js"],"names":["React","useState","useEffect","PropTypes","clsx","jwt_decode","withStyles","useTheme","useMediaQuery","connect","withRouter","Sidebar","Topbar","Footer","getInfoAccount","logout","getCity","styles","Main","props","children","account","classes","history","citys","idAccount","localStorage","jwtToken","_id","push","theme","isDesktop","breakpoints","up","defaultMatches","openSidebar","setOpenSidebar","handleSidebarOpen","handleSidebarClose","shouldOpenSidebar","root","shiftContent","content","propTypes","node","user","object","func","mapStateToProps","state","isAuth","auth","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport jwt_decode from 'jwt-decode';\nimport { withStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { Sidebar, Topbar, Footer } from './components';\nimport { getInfoAccount } from './../../actions/account';\nimport { logout } from './../../actions/authentication';\nimport { getCity } from './../../actions/city';\nimport styles from './styles';\n\nconst Main = props => {\n    const { children, account, logout, classes, history, citys, getCity, getInfoAccount } = props;\n    const idAccount = jwt_decode(localStorage.jwtToken)._id;\n\n    useEffect(() => {\n        if(!localStorage.jwtToken)\n        {\n            history.push('/sign-in');\n        }\n    });\n    useEffect(() => {\n        getInfoAccount(idAccount);\n    }, [getInfoAccount, idAccount]);\n\n    const theme = useTheme();\n    const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n        defaultMatches: true\n    });\n\n    const [openSidebar, setOpenSidebar] = useState(false);\n\n    const handleSidebarOpen = () => {\n        setOpenSidebar(true);\n    };\n\n    const handleSidebarClose = () => {\n        setOpenSidebar(false);\n    };\n\n    const shouldOpenSidebar = isDesktop ? true : openSidebar;\n    return (\n        <div\n            className={clsx({\n                [classes.root]: true,\n                [classes.shiftContent]: isDesktop\n            })}\n        >\n            <Topbar \n                onSidebarOpen={handleSidebarOpen}\n                logout={logout}\n            />\n            <Sidebar\n                onClose={handleSidebarClose}\n                open={shouldOpenSidebar}\n                variant={isDesktop ? 'persistent' : 'temporary'}\n                logout={logout}\n                account={account}\n            />\n            <main className={classes.content}>\n                {children}\n                <Footer />\n            </main>\n        </div>\n    );\n};\n\nMain.propTypes = {\n    children: PropTypes.node,\n    user: PropTypes.object,\n    logout: PropTypes.func\n};\nconst mapStateToProps = state => ({\n    account: state.account,\n    isAuth: state.auth.isAuthenticated,\n    citys: state.citys,\n})\nexport default connect(mapStateToProps, { logout, getCity, getInfoAccount })(withRouter(withStyles(styles)(Main)));\n"]},"metadata":{},"sourceType":"module"}