{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\components\\\\AccountProfile\\\\AccountProfile.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  avatar: {\n    marginLeft: 'auto',\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nconst AccountProfile = props => {\n  const className = props.className,\n        auth = props.auth,\n        uploadPicture = props.uploadPicture,\n        file = props.file,\n        errors = props.errors;\n  const classes = useStyles();\n\n  let _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      avatar = _useState2[0],\n      setAvatar = _useState2[1];\n\n  const profileComplete = () => {\n    if (auth.isAuthenticated) {\n      let complete = 0;\n\n      if (auth.user.firstName) {\n        complete += 20;\n      }\n\n      if (auth.user.lastName) {\n        complete += 20;\n      }\n\n      if (auth.user.sdt) {\n        complete += 20;\n      }\n\n      if (auth.user.city) {\n        complete += 20;\n      }\n\n      if (auth.user.avatar.slice(0, 18) !== '//www.gravatar.com') {\n        complete += 20;\n      }\n\n      return complete;\n    } else {\n      return 0;\n    }\n  };\n\n  const handleChange = e => {\n    avatar = e.target.files[0];\n    console.log(auth.user.id); //uploadPicture(avatar);\n  };\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\".concat(auth.user.firstName, \" \").concat(auth.user.lastName)), React.createElement(Typography, {\n    className: classes.locationText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, auth.user.city, \", \", auth.user.country), React.createElement(Typography, {\n    className: classes.dateText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, moment().format('hh:mm A'), \" (\", 'GTM-7', \")\")), React.createElement(Avatar, {\n    className: classes.avatar,\n    src: auth.user.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Profile Completeness: \".concat(profileComplete(), \"%\")), React.createElement(LinearProgress, {\n    value: profileComplete(),\n    variant: \"determinate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"text-button-file\",\n    multiple: true,\n    type: \"file\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"text-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Button, {\n    component: \"span\",\n    className: classes.uploadButton,\n    color: \"primary\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Upload picture\")), React.createElement(Button, {\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Remove picture\")));\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n  auth: PropTypes.object,\n  uploadPicture: PropTypes.func,\n  file: PropTypes.string,\n  errors: PropTypes.object\n};\nexport default AccountProfile;","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\components\\AccountProfile\\AccountProfile.js"],"names":["React","useState","useEffect","PropTypes","clsx","moment","makeStyles","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","useStyles","theme","root","details","display","avatar","marginLeft","height","width","flexShrink","flexGrow","progress","marginTop","spacing","uploadButton","marginRight","input","AccountProfile","props","className","auth","uploadPicture","file","errors","classes","setAvatar","profileComplete","isAuthenticated","complete","user","firstName","lastName","sdt","city","slice","handleChange","e","target","files","console","log","id","locationText","country","dateText","format","propTypes","string","object","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Typography,\n    Divider,\n    Button,\n    LinearProgress\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    details: {\n        display: 'flex'\n    },\n    avatar: {\n        marginLeft: 'auto',\n        height: 110,\n        width: 100,\n        flexShrink: 0,\n        flexGrow: 0\n    },\n    progress: {\n        marginTop: theme.spacing(2)\n    },\n    uploadButton: {\n        marginRight: theme.spacing(2)\n    },\n    input: {\n        display: 'none'\n    }\n}));\n\nconst AccountProfile = props => {\n    const { className, auth, uploadPicture, file, errors } = props;\n    const classes = useStyles();\n    let [ avatar, setAvatar ] = useState(null);\n    \n    const profileComplete = () => {\n        if (auth.isAuthenticated) {\n            let complete = 0;\n            if (auth.user.firstName) {\n                complete += 20;\n            }\n            if (auth.user.lastName) {\n                complete += 20;\n            }\n            if (auth.user.sdt) {\n                complete += 20;\n            }\n            if (auth.user.city) {\n                complete += 20;\n            }\n            if (auth.user.avatar.slice(0, 18) !== '//www.gravatar.com') {\n                complete += 20;\n            }\n            return complete;\n        } else {\n            return 0;\n        }\n    };\n    const handleChange = e => {\n        avatar = e.target.files[0];\n        console.log(auth.user.id);\n        //uploadPicture(avatar);\n    }\n    \n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardContent>\n                <div className={classes.details}>\n                    <div>\n                        <Typography gutterBottom variant=\"h2\">\n                            {`${auth.user.firstName} ${auth.user.lastName}`}\n                        </Typography>\n                        <Typography\n                            className={classes.locationText}\n                            color=\"textSecondary\"\n                            variant=\"body1\"\n                        >\n                            {auth.user.city}, {auth.user.country}\n                        </Typography>\n                        <Typography\n                            className={classes.dateText}\n                            color=\"textSecondary\"\n                            variant=\"body1\"\n                        >\n                            {moment().format('hh:mm A')} ({'GTM-7'})\n                        </Typography>\n                    </div>\n                    <Avatar className={classes.avatar} src={auth.user.avatar} />\n                </div>\n                <div className={classes.progress}>\n                    <Typography variant=\"body1\">\n                        {`Profile Completeness: ${profileComplete()}%`}\n                    </Typography>\n                    <LinearProgress\n                        value={profileComplete()}\n                        variant=\"determinate\"\n                    />\n                </div>\n            </CardContent>\n            <Divider />\n            <CardActions>\n                <input\n                    accept=\"image/*\"\n                    className={classes.input}\n                    id=\"text-button-file\"\n                    multiple\n                    type=\"file\"\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"text-button-file\">\n                    <Button \n                        component=\"span\" \n                        className={classes.uploadButton}\n                        color=\"primary\"\n                        variant=\"text\"\n                    >\n                        Upload picture\n                    </Button>\n                </label>\n                <Button variant=\"text\">Remove picture</Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nAccountProfile.propTypes = {\n    className: PropTypes.string,\n    auth: PropTypes.object,\n    uploadPicture: PropTypes.func,\n    file: PropTypes.string,\n    errors: PropTypes.object\n};\nexport default AccountProfile;\n"]},"metadata":{},"sourceType":"module"}