{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Dashboard\\\\components\\\\MemberByPresence\\\\MemberByPresence.js\";\nimport React, { useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Button, Divider, Typography, Menu, MenuItem } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { DialogStatistical } from './components';\nimport { options, fillData } from './chart';\nimport styles from './styles';\nconst optionsSelect = ['By month', 'By week', 'By year'];\n\nconst MemberByPresence = props => {\n  const className = props.className,\n        classes = props.classes,\n        filterTask = props.filterTask,\n        filterStatistical = props.filterStatistical,\n        DataByPresences_Statistical = props.DataByPresences_Statistical,\n        getDateFilter = props.getDateFilter,\n        dateFilter = props.dateFilter,\n        rest = _objectWithoutProperties(props, [\"className\", \"classes\", \"filterTask\", \"filterStatistical\", \"DataByPresences_Statistical\", \"getDateFilter\", \"dateFilter\"]);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        anchorEl = _useState2[0],\n        setAnchorEl = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedIndex = _useState4[0],\n        setSelectedIndex = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        open = _useState6[0],\n        setOpen = _useState6[1];\n\n  const _fillData = fillData(DataByPresences_Statistical, filterStatistical, dateFilter),\n        data = _fillData.data,\n        statusPresences = _fillData.statusPresences;\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index); //filterTask(index);\n\n    setOpen(true);\n    setAnchorEl(null);\n  };\n\n  const handleCloseDialog = params => {\n    setOpen(params);\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(DialogStatistical, {\n    open: open,\n    handleCloseDialog: handleCloseDialog,\n    index: selectedIndex,\n    getDateFilter: getDateFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    action: React.createElement(Button, {\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      variant: \"text\",\n      className: classes.paperButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, optionsSelect[selectedIndex]), React.createElement(ArrowDropDownIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })),\n    title: \"Members by presence\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), data !== null ? React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, statusPresences.map(status => React.createElement(\"div\", {\n    className: classes.device,\n    key: status.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.deviceIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, status.icon), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, status.title), React.createElement(Typography, {\n    style: {\n      color: status.color\n    },\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, status.value, \"%\"))))) : React.createElement(Typography, {\n    style: {\n      marginTop: '50%'\n    },\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Data not found\"), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, optionsSelect.map((option, index) => React.createElement(MenuItem, {\n    onClick: event => handleMenuItemClick(event, index),\n    key: option,\n    selected: index === selectedIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, option))));\n};\n\nexport default withStyles(styles)(MemberByPresence);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\components\\MemberByPresence\\MemberByPresence.js"],"names":["React","useState","Pie","clsx","withStyles","Card","CardHeader","CardContent","Button","Divider","Typography","Menu","MenuItem","ArrowDropDownIcon","DialogStatistical","options","fillData","styles","optionsSelect","MemberByPresence","props","className","classes","filterTask","filterStatistical","DataByPresences_Statistical","getDateFilter","dateFilter","rest","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","open","setOpen","data","statusPresences","handleClick","event","currentTarget","handleClose","handleMenuItemClick","index","handleCloseDialog","params","root","paperButton","chartContainer","stats","map","status","device","title","deviceIcon","icon","color","value","marginTop","Boolean","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    Button,\n    Divider,\n    Typography,\n    Menu,\n    MenuItem\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { DialogStatistical } from './components';\nimport { options, fillData } from './chart';\nimport styles from './styles';\n\nconst optionsSelect = ['By month', 'By week', 'By year'];\nconst MemberByPresence = props => {\n    const {\n        className,\n        classes,\n        filterTask,\n        filterStatistical,\n        DataByPresences_Statistical,\n        getDateFilter,\n        dateFilter,\n        ...rest\n    } = props;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [open, setOpen] = useState(false);\n    const { data, statusPresences } = fillData(\n        DataByPresences_Statistical,\n        filterStatistical,\n        dateFilter\n    );\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const handleMenuItemClick = (event, index) => {\n        setSelectedIndex(index);\n        //filterTask(index);\n        setOpen(true);\n        setAnchorEl(null);\n    };\n    const handleCloseDialog = params => {\n        setOpen(params);\n    };\n\n    return (\n        <Card {...rest} className={clsx(classes.root, className)}>\n            <DialogStatistical\n                open={open}\n                handleCloseDialog={handleCloseDialog}\n                index={selectedIndex}\n                getDateFilter={getDateFilter}\n            />\n            <CardHeader\n                action={\n                    <Button\n                        aria-haspopup=\"true\"\n                        onClick={handleClick}\n                        variant=\"text\"\n                        className={classes.paperButton}\n                    >\n                        <Typography variant=\"h5\">\n                            {optionsSelect[selectedIndex]}\n                        </Typography>\n                        <ArrowDropDownIcon />\n                    </Button>\n                }\n                title=\"Members by presence\"\n            />\n            <Divider />\n            {data !== null ? (\n                <CardContent>\n                    <div className={classes.chartContainer}>\n                        <Pie data={data} options={options} />\n                    </div>\n                    <div className={classes.stats}>\n                        {statusPresences.map(status => (\n                            <div className={classes.device} key={status.title}>\n                                <span className={classes.deviceIcon}>\n                                    {status.icon}\n                                </span>\n                                <Typography variant=\"body1\">\n                                    {status.title}\n                                </Typography>\n                                <Typography\n                                    style={{ color: status.color }}\n                                    variant=\"h2\"\n                                >\n                                    {status.value}%\n                                </Typography>\n                            </div>\n                        ))}\n                    </div>\n                </CardContent>\n            ) : (\n                <Typography\n                    style={{ marginTop: '50%' }}\n                    variant=\"h5\"\n                    align=\"center\"\n                >\n                    Data not found\n                </Typography>\n            )}\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {optionsSelect.map((option, index) => (\n                    <MenuItem\n                        onClick={event => handleMenuItemClick(event, index)}\n                        key={option}\n                        selected={index === selectedIndex}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </Card>\n    );\n};\nexport default withStyles(styles)(MemberByPresence);\n"]},"metadata":{},"sourceType":"module"}