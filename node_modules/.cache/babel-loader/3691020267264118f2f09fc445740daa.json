{"ast":null,"code":"import _objectWithoutProperties from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\layouts\\\\Main\\\\components\\\\Sidebar\\\\components\\\\SidebarNav\\\\SidebarNav.js\";\n\n/* eslint-disable react/no-multi-comp */\n\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors, Hidden, Divider } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  buttonLogout: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium,\n    margin: theme.spacing(3, 0)\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  },\n  divider: {\n    margin: theme.spacing(10, 0)\n  }\n}));\nconst CustomRouterLink = forwardRef((props, ref) => React.createElement(\"div\", {\n  ref: ref,\n  style: {\n    flexGrow: 1\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(RouterLink, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}))));\n\nconst SidebarNav = props => {\n  const pages = props.pages,\n        className = props.className,\n        rest = _objectWithoutProperties(props, [\"pages\", \"className\"]);\n\n  const classes = useStyles();\n  return React.createElement(List, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), pages.map(page => React.createElement(ListItem, {\n    className: classes.item,\n    disableGutters: true,\n    key: page.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, page.href === '/logout' ? React.createElement(Hidden, {\n    lgUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    absolute: true,\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Button, {\n    activeClassName: classes.active,\n    className: classes.buttonLogout,\n    component: CustomRouterLink,\n    to: page.href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, page.icon), page.title)) : React.createElement(Button, {\n    activeClassName: classes.active,\n    className: classes.button,\n    component: CustomRouterLink,\n    to: page.href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, page.icon), page.title))));\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\nexport default SidebarNav;","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\layouts\\Main\\components\\Sidebar\\components\\SidebarNav\\SidebarNav.js"],"names":["React","forwardRef","NavLink","RouterLink","clsx","PropTypes","makeStyles","List","ListItem","Button","colors","Hidden","Divider","useStyles","theme","root","item","display","paddingTop","paddingBottom","button","color","blueGrey","padding","justifyContent","textTransform","letterSpacing","width","fontWeight","typography","fontWeightMedium","buttonLogout","margin","spacing","icon","palette","height","alignItems","marginRight","active","primary","main","divider","CustomRouterLink","props","ref","flexGrow","SidebarNav","pages","className","rest","classes","map","page","title","href","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors, Hidden, Divider } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    item: {\n        display: 'flex',\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    button: {\n        color: colors.blueGrey[800],\n        padding: '10px 8px',\n        justifyContent: 'flex-start',\n        textTransform: 'none',\n        letterSpacing: 0,\n        width: '100%',\n        fontWeight: theme.typography.fontWeightMedium\n    },\n    buttonLogout: {\n        color: colors.blueGrey[800],\n        padding: '10px 8px',\n        justifyContent: 'flex-start',\n        textTransform: 'none',\n        letterSpacing: 0,\n        width: '100%',\n        fontWeight: theme.typography.fontWeightMedium,\n        margin: theme.spacing(3, 0)\n    },\n    icon: {\n        color: theme.palette.icon,\n        width: 24,\n        height: 24,\n        display: 'flex',\n        alignItems: 'center',\n        marginRight: theme.spacing(1)\n    },\n    active: {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium,\n        '& $icon': {\n            color: theme.palette.primary.main\n        }\n    },\n    divider: {\n        margin: theme.spacing(10, 0)\n    }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n    <div ref={ref} style={{ flexGrow: 1 }}>\n        <RouterLink {...props} />\n    </div>\n));\n\nconst SidebarNav = props => {\n    const { pages, className, ...rest } = props;\n    const classes = useStyles();\n\n    return (\n        <List {...rest} className={clsx(classes.root, className)}>\n            {pages.map(page => (\n                <ListItem\n                    className={classes.item}\n                    disableGutters\n                    key={page.title}\n                > \n                    {\n                        (page.href === '/logout') ? \n                        <Hidden lgUp>\n                            <Divider absolute className={classes.divider} />\n                            <Button\n                                activeClassName={classes.active}\n                                className={classes.buttonLogout}\n                                component={CustomRouterLink}\n                                to={page.href}\n                            >\n                                <div className={classes.icon}>{page.icon}</div>\n                                {page.title}\n                            </Button> \n                        </Hidden>\n                        : \n                        <Button\n                            activeClassName={classes.active}\n                            className={classes.button}\n                            component={CustomRouterLink}\n                            to={page.href}\n                        >\n                            <div className={classes.icon}>{page.icon}</div>\n                            {page.title}\n                        </Button>\n                    }\n                </ListItem>\n            ))}\n        </List>\n    );\n};\n\nSidebarNav.propTypes = {\n    className: PropTypes.string,\n    pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n"]},"metadata":{},"sourceType":"module"}