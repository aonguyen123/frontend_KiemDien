{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\components\\\\Notifies\\\\Notifies.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nfunction MySnackbarContentWrapper(props) {\n  const className = props.className,\n        message = props.message,\n        onClose = props.onClose,\n        variant = props.variant,\n        classes = props.classes,\n        other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\", \"classes\"]);\n\n  const Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\n\nconst Notifies = props => {\n  const classes = props.classes;\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.margin,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Open success snackbar\"), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(MySnackbarContentWrapper, {\n    onClose: handleClose,\n    variant: \"success\",\n    message: \"This is a success message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(MySnackbarContentWrapper, {\n    variant: \"error\",\n    className: classes.margin,\n    message: \"This is an error message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(MySnackbarContentWrapper, {\n    variant: \"warning\",\n    className: classes.margin,\n    message: \"This is a warning message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(MySnackbarContentWrapper, {\n    variant: \"info\",\n    className: classes.margin,\n    message: \"This is an information message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(MySnackbarContentWrapper, {\n    variant: \"success\",\n    className: classes.margin,\n    message: \"This is a success message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }));\n};\n\nexport default withStyles(styles)(Notifies);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\components\\Notifies\\Notifies.js"],"names":["React","PropTypes","clsx","Button","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","IconButton","Snackbar","SnackbarContent","WarningIcon","withStyles","styles","variantIcon","success","warning","error","info","MySnackbarContentWrapper","props","className","message","onClose","variant","classes","other","Icon","icon","iconVariant","propTypes","string","func","oneOf","isRequired","Notifies","useState","open","setOpen","handleClick","handleClose","event","reason","margin","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n};\r\nfunction MySnackbarContentWrapper(props) {\r\n    const { className, message, onClose, variant, classes, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\r\n};\r\n\r\nconst Notifies = props => {\r\n    const { classes } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleClick() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                className={classes.margin}\r\n                onClick={handleClick}\r\n            >\r\n                Open success snackbar\r\n            </Button>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left'\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={handleClose}\r\n                    variant=\"success\"\r\n                    message=\"This is a success message!\"\r\n                />\r\n            </Snackbar>\r\n            <MySnackbarContentWrapper\r\n                variant=\"error\"\r\n                className={classes.margin}\r\n                message=\"This is an error message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"warning\"\r\n                className={classes.margin}\r\n                message=\"This is a warning message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"info\"\r\n                className={classes.margin}\r\n                message=\"This is an information message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"success\"\r\n                className={classes.margin}\r\n                message=\"This is a success message!\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default withStyles(styles)(Notifies);"]},"metadata":{},"sourceType":"module"}