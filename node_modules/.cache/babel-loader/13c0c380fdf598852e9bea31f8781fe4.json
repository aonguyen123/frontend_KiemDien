{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\components\\\\AccountProfile\\\\AccountProfile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress, withStyles } from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport { getInfoUser } from './../../../../actions/authentication';\nimport { uploadPicture } from './../../../../actions/account'; //import styles from './styles';\n\nclass AccountProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      avatar: ''\n    };\n    this.useStyles = makeStyles(theme => ({\n      root: {},\n      details: {\n        display: 'flex'\n      },\n      avatar: {\n        marginLeft: 'auto',\n        height: 110,\n        width: 100,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      progress: {\n        marginTop: theme.spacing(2)\n      },\n      uploadButton: {\n        marginRight: theme.spacing(2)\n      },\n      input: {\n        display: 'none'\n      }\n    }));\n\n    this.profileComplete = (user, isAuth) => {\n      if (isAuth) {\n        let complete = 0;\n\n        if (user.firstName) {\n          complete += 20;\n        }\n\n        if (user.lastName) {\n          complete += 20;\n        }\n\n        if (user.sdt) {\n          complete += 20;\n        }\n\n        if (user.city) {\n          complete += 20;\n        } // if (user.avatar.slice(0, 18) !== '//www.gravatar.com') {\n        //     complete += 20;\n        // }\n\n\n        return complete;\n      } else {\n        return 0;\n      }\n    };\n\n    this.handleChange = async (e, user) => {\n      this.state.avatar = e.target.files[0];\n\n      if (this.state.avatar) {\n        const rs = await uploadPicture(this.state.avatar, user.id);\n\n        if (rs === undefined) {\n          await getInfoUser(user.id);\n        }\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          user = _this$props.user,\n          uploadPicture = _this$props.uploadPicture,\n          isAuth = _this$props.isAuth,\n          getInfoUser = _this$props.getInfoUser,\n          file = _this$props.file;\n    const classes = useStyles();\n    return React.createElement(Card, {\n      className: clsx(classes.root, className),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\".concat(user.firstName, \" \").concat(user.lastName)), React.createElement(Typography, {\n      className: classes.locationText,\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, user.city, \", \", user.country), React.createElement(Typography, {\n      className: classes.dateText,\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, moment().format('hh:mm A'), \" (\", 'GTM-7', \")\")), React.createElement(Avatar, {\n      className: classes.avatar,\n      src: \"\".concat(URL_getImage).concat(user.avatar),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Profile Completeness: \".concat(this.profileComplete(user, isAuth), \"%\")), React.createElement(LinearProgress, {\n      value: this.profileComplete(user, isAuth),\n      variant: \"determinate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"text-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: (e, user) => this.handleChange(e, user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"text-button-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Button, {\n      component: \"span\",\n      className: classes.uploadButton,\n      color: \"primary\",\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Upload picture\")), React.createElement(Button, {\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Remove picture\")));\n  }\n\n} //\n//     console.log(user);\n//     // useEffect(() => {\n//     //     if(file)\n//     //     {\n//     //         getInfoUser(user.id);\n//     //         file = false;\n//     //     }\n//     // },[file]);\n//     );\n// };\n\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n  auth: PropTypes.object,\n  uploadPicture: PropTypes.func,\n  file: PropTypes.string,\n  errors: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  file: state.file,\n  isAuth: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getInfoUser,\n  uploadPicture\n})(AccountProfile);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\components\\AccountProfile\\AccountProfile.js"],"names":["React","Component","PropTypes","clsx","moment","makeStyles","connect","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","withStyles","URL_getImage","getInfoUser","uploadPicture","AccountProfile","state","avatar","useStyles","theme","root","details","display","marginLeft","height","width","flexShrink","flexGrow","progress","marginTop","spacing","uploadButton","marginRight","input","profileComplete","user","isAuth","complete","firstName","lastName","sdt","city","handleChange","e","target","files","rs","id","undefined","render","props","className","file","classes","locationText","country","dateText","format","propTypes","string","auth","object","func","errors","mapStateToProps","isAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,IADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,MAJJ,EAKIC,UALJ,EAMIC,OANJ,EAOIC,MAPJ,EAQIC,cARJ,EASIC,UATJ,QAUO,mBAVP;AAWA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,aAAT,QAA8B,+BAA9B,C,CACA;;AAEA,MAAMC,cAAN,SAA6BlB,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCmB,KADmC,GAC3B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAD2B;AAAA,SAInCC,SAJmC,GAIvBjB,UAAU,CAACkB,KAAK,KAAK;AAC7BC,MAAAA,IAAI,EAAE,EADuB;AAE7BC,MAAAA,OAAO,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OAFoB;AAK7BL,MAAAA,MAAM,EAAE;AACJM,QAAAA,UAAU,EAAE,MADR;AAEJC,QAAAA,MAAM,EAAE,GAFJ;AAGJC,QAAAA,KAAK,EAAE,GAHH;AAIJC,QAAAA,UAAU,EAAE,CAJR;AAKJC,QAAAA,QAAQ,EAAE;AALN,OALqB;AAY7BC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,SAAS,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AADL,OAZmB;AAe7BC,MAAAA,YAAY,EAAE;AACVC,QAAAA,WAAW,EAAEb,KAAK,CAACW,OAAN,CAAc,CAAd;AADH,OAfe;AAkB7BG,MAAAA,KAAK,EAAE;AACHX,QAAAA,OAAO,EAAE;AADN;AAlBsB,KAAL,CAAN,CAJa;;AAAA,SA0BnCY,eA1BmC,GA0BjB,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAChC,UAAIA,MAAJ,EAAY;AACR,YAAIC,QAAQ,GAAG,CAAf;;AACA,YAAIF,IAAI,CAACG,SAAT,EAAoB;AAChBD,UAAAA,QAAQ,IAAI,EAAZ;AACH;;AACD,YAAIF,IAAI,CAACI,QAAT,EAAmB;AACfF,UAAAA,QAAQ,IAAI,EAAZ;AACH;;AACD,YAAIF,IAAI,CAACK,GAAT,EAAc;AACVH,UAAAA,QAAQ,IAAI,EAAZ;AACH;;AACD,YAAIF,IAAI,CAACM,IAAT,EAAe;AACXJ,UAAAA,QAAQ,IAAI,EAAZ;AACH,SAbO,CAcR;AACA;AACA;;;AACA,eAAOA,QAAP;AACH,OAlBD,MAkBO;AACH,eAAO,CAAP;AACH;AACJ,KAhDkC;;AAAA,SAiDnCK,YAjDmC,GAiDpB,OAAOC,CAAP,EAAUR,IAAV,KAAmB;AAC9B,WAAKnB,KAAL,CAAWC,MAAX,GAAoB0B,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB;;AACA,UAAI,KAAK7B,KAAL,CAAWC,MAAf,EAAuB;AACnB,cAAM6B,EAAE,GAAG,MAAMhC,aAAa,CAAC,KAAKE,KAAL,CAAWC,MAAZ,EAAoBkB,IAAI,CAACY,EAAzB,CAA9B;;AACA,YAAID,EAAE,KAAKE,SAAX,EAAsB;AAClB,gBAAMnC,WAAW,CAACsB,IAAI,CAACY,EAAN,CAAjB;AACH;AACJ;AACJ,KAzDkC;AAAA;;AA0DnCE,EAAAA,MAAM,GAAG;AAAA,wBAQD,KAAKC,KARJ;AAAA,UAEDC,SAFC,eAEDA,SAFC;AAAA,UAGDhB,IAHC,eAGDA,IAHC;AAAA,UAIDrB,aAJC,eAIDA,aAJC;AAAA,UAKDsB,MALC,eAKDA,MALC;AAAA,UAMDvB,WANC,eAMDA,WANC;AAAA,UAODuC,IAPC,eAODA,IAPC;AASL,UAAMC,OAAO,GAAGnC,SAAS,EAAzB;AACA,WACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEnB,IAAI,CAACsD,OAAO,CAACjC,IAAT,EAAe+B,SAAf,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEE,OAAO,CAAChC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQc,IAAI,CAACG,SADb,cAC0BH,IAAI,CAACI,QAD/B,EADJ,EAII,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEc,OAAO,CAACC,YADvB;AAEI,MAAA,KAAK,EAAC,eAFV;AAGI,MAAA,OAAO,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKnB,IAAI,CAACM,IALV,QAKkBN,IAAI,CAACoB,OALvB,CAJJ,EAWI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEF,OAAO,CAACG,QADvB;AAEI,MAAA,KAAK,EAAC,eAFV;AAGI,MAAA,OAAO,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKxD,MAAM,GAAGyD,MAAT,CAAgB,SAAhB,CALL,QAKmC,OALnC,MAXJ,CADJ,EAoBI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAEJ,OAAO,CAACpC,MADvB;AAEI,MAAA,GAAG,YAAKL,YAAL,SAAoBuB,IAAI,CAAClB,MAAzB,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CADJ,EA0BI;AAAK,MAAA,SAAS,EAAEoC,OAAO,CAACzB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAC8B,KAAKM,eAAL,CACtBC,IADsB,EAEtBC,MAFsB,CAD9B,OADJ,EAOI,oBAAC,cAAD;AACI,MAAA,KAAK,EAAE,KAAKF,eAAL,CAAqBC,IAArB,EAA2BC,MAA3B,CADX;AAEI,MAAA,OAAO,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CA1BJ,CADJ,EAwCI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCJ,EAyCI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,MAAM,EAAC,SADX;AAEI,MAAA,SAAS,EAAEiB,OAAO,CAACpB,KAFvB;AAGI,MAAA,EAAE,EAAC,kBAHP;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,QAAQ,EAAE,CAACU,CAAD,EAAIR,IAAJ,KAAa,KAAKO,YAAL,CAAkBC,CAAlB,EAAqBR,IAArB,CAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI;AAAO,MAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,SAAS,EAAEkB,OAAO,CAACtB,YAFvB;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,OAAO,EAAC,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CATJ,EAmBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBJ,CAzCJ,CADJ;AAiEH;;AArIkC,C,CAuIvC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEAhB,cAAc,CAAC2C,SAAf,GAA2B;AACvBP,EAAAA,SAAS,EAAErD,SAAS,CAAC6D,MADE;AAEvBC,EAAAA,IAAI,EAAE9D,SAAS,CAAC+D,MAFO;AAGvB/C,EAAAA,aAAa,EAAEhB,SAAS,CAACgE,IAHF;AAIvBV,EAAAA,IAAI,EAAEtD,SAAS,CAAC6D,MAJO;AAKvBI,EAAAA,MAAM,EAAEjE,SAAS,CAAC+D;AALK,CAA3B;;AAOA,MAAMG,eAAe,GAAGhD,KAAK,KAAK;AAC9BmB,EAAAA,IAAI,EAAEnB,KAAK,CAAC4C,IAAN,CAAWzB,IADa;AAE9BiB,EAAAA,IAAI,EAAEpC,KAAK,CAACoC,IAFkB;AAG9BhB,EAAAA,MAAM,EAAEpB,KAAK,CAAC4C,IAAN,CAAWK;AAHW,CAAL,CAA7B;;AAKA,eAAe/D,OAAO,CAClB8D,eADkB,EAElB;AAAEnD,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAFkB,CAAP,CAGbC,cAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Typography,\n    Divider,\n    Button,\n    LinearProgress,\n    withStyles\n} from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport { getInfoUser } from './../../../../actions/authentication';\nimport { uploadPicture } from './../../../../actions/account';\n//import styles from './styles';\n\nclass AccountProfile extends Component {\n    state = {\n        avatar: ''\n    };\n    useStyles = makeStyles(theme => ({\n        root: {},\n        details: {\n            display: 'flex'\n        },\n        avatar: {\n            marginLeft: 'auto',\n            height: 110,\n            width: 100,\n            flexShrink: 0,\n            flexGrow: 0\n        },\n        progress: {\n            marginTop: theme.spacing(2)\n        },\n        uploadButton: {\n            marginRight: theme.spacing(2)\n        },\n        input: {\n            display: 'none'\n        }\n    }));\n    profileComplete = (user, isAuth) => {\n        if (isAuth) {\n            let complete = 0;\n            if (user.firstName) {\n                complete += 20;\n            }\n            if (user.lastName) {\n                complete += 20;\n            }\n            if (user.sdt) {\n                complete += 20;\n            }\n            if (user.city) {\n                complete += 20;\n            }\n            // if (user.avatar.slice(0, 18) !== '//www.gravatar.com') {\n            //     complete += 20;\n            // }\n            return complete;\n        } else {\n            return 0;\n        }\n    };\n    handleChange = async (e, user) => {\n        this.state.avatar = e.target.files[0];\n        if (this.state.avatar) {\n            const rs = await uploadPicture(this.state.avatar, user.id);\n            if (rs === undefined) {\n                await getInfoUser(user.id);\n            }\n        }\n    };\n    render() {\n        const {\n            className,\n            user,\n            uploadPicture,\n            isAuth,\n            getInfoUser,\n            file,\n        } = this.props;\n        const classes = useStyles();\n        return (\n            <Card className={clsx(classes.root, className)}>\n                <CardContent>\n                    <div className={classes.details}>\n                        <div>\n                            <Typography gutterBottom variant=\"h2\">\n                                {`${user.firstName} ${user.lastName}`}\n                            </Typography>\n                            <Typography\n                                className={classes.locationText}\n                                color=\"textSecondary\"\n                                variant=\"body1\"\n                            >\n                                {user.city}, {user.country}\n                            </Typography>\n                            <Typography\n                                className={classes.dateText}\n                                color=\"textSecondary\"\n                                variant=\"body1\"\n                            >\n                                {moment().format('hh:mm A')} ({'GTM-7'})\n                            </Typography>\n                        </div>\n                        <Avatar\n                            className={classes.avatar}\n                            src={`${URL_getImage}${user.avatar}`}\n                        />\n                    </div>\n                    <div className={classes.progress}>\n                        <Typography variant=\"body1\">\n                            {`Profile Completeness: ${this.profileComplete(\n                                user,\n                                isAuth\n                            )}%`}\n                        </Typography>\n                        <LinearProgress\n                            value={this.profileComplete(user, isAuth)}\n                            variant=\"determinate\"\n                        />\n                    </div>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        id=\"text-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={(e, user) => this.handleChange(e, user)}\n                    />\n                    <label htmlFor=\"text-button-file\">\n                        <Button\n                            component=\"span\"\n                            className={classes.uploadButton}\n                            color=\"primary\"\n                            variant=\"text\"\n                        >\n                            Upload picture\n                        </Button>\n                    </label>\n                    <Button variant=\"text\">Remove picture</Button>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n//\n//     console.log(user);\n\n//     // useEffect(() => {\n//     //     if(file)\n//     //     {\n//     //         getInfoUser(user.id);\n//     //         file = false;\n//     //     }\n//     // },[file]);\n\n//     );\n// };\n\nAccountProfile.propTypes = {\n    className: PropTypes.string,\n    auth: PropTypes.object,\n    uploadPicture: PropTypes.func,\n    file: PropTypes.string,\n    errors: PropTypes.object\n};\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    file: state.file,\n    isAuth: state.auth.isAuthenticated\n});\nexport default connect(\n    mapStateToProps,\n    { getInfoUser, uploadPicture }\n)(AccountProfile);\n"]},"metadata":{},"sourceType":"module"}