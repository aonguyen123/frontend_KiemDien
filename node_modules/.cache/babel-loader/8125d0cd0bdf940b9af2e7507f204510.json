{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\ClassDetail\\\\components\\\\ChangePersonDrawers\\\\ChangePersonDrawers.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport styles from './styles';\n\nconst ChangePersonDrawers = props => {\n  const classes = props.classes,\n        handleChangePerson = props.handleChangePerson,\n        open = props.open;\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const sideList = side => React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, ['All mail', 'Trash', 'Spam'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }) : React.createElement(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })))));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(SwipeableDrawer, {\n    anchor: \"right\",\n    open: open,\n    onClose: handleChangePerson,\n    onOpen: handleChangePerson,\n    disableBackdropTransition: !iOS,\n    disableDiscovery: iOS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, sideList('right')));\n};\n\nexport default withStyles(styles)(ChangePersonDrawers);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\ClassDetail\\components\\ChangePersonDrawers\\ChangePersonDrawers.js"],"names":["React","withStyles","SwipeableDrawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","styles","ChangePersonDrawers","props","classes","handleChangePerson","open","iOS","process","browser","test","navigator","userAgent","sideList","side","list","toggleDrawer","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport styles from './styles';\r\n\r\nconst ChangePersonDrawers = props => {\r\n    const { classes, handleChangePerson, open } = props;\r\n\r\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n    const sideList = side => (\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(side, false)}\r\n            onKeyDown={toggleDrawer(side, false)}\r\n        >\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map(\r\n                    (text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    )\r\n                )}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>\r\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <SwipeableDrawer\r\n                anchor=\"right\"\r\n                open={open}\r\n                onClose={handleChangePerson}\r\n                onOpen={handleChangePerson}\r\n                disableBackdropTransition={!iOS} \r\n                disableDiscovery={iOS}\r\n            >\r\n                {sideList('right')}\r\n            </SwipeableDrawer>\r\n        </div>\r\n    );\r\n};\r\nexport default withStyles(styles)(ChangePersonDrawers);\r\n"]},"metadata":{},"sourceType":"module"}