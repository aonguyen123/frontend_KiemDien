{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\ClassDetail\\\\components\\\\ChangePersonDrawers\\\\ChangePersonDrawers.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport styles from './styles';\n\nconst ChangePersonDrawers = props => {\n  const classes = props.classes;\n\n  const _React$useState = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const toggleDrawer = (side, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const sideList = side => React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }) : React.createElement(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, ['All mail', 'Trash', 'Spam'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : React.createElement(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))));\n\n  const fullList = side => React.createElement(\"div\", {\n    className: classes.fullList,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }) : React.createElement(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, ['All mail', 'Trash', 'Spam'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }) : React.createElement(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleDrawer('left', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Open Left\"), React.createElement(Button, {\n    onClick: toggleDrawer('right', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Open Right\"), React.createElement(Button, {\n    onClick: toggleDrawer('top', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Open Top\"), React.createElement(Button, {\n    onClick: toggleDrawer('bottom', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Open Bottom\"), React.createElement(SwipeableDrawer, {\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    onOpen: toggleDrawer('left', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, sideList('left')), React.createElement(SwipeableDrawer, {\n    anchor: \"top\",\n    open: state.top,\n    onClose: toggleDrawer('top', false),\n    onOpen: toggleDrawer('top', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, fullList('top')), React.createElement(SwipeableDrawer, {\n    anchor: \"bottom\",\n    open: state.bottom,\n    onClose: toggleDrawer('bottom', false),\n    onOpen: toggleDrawer('bottom', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, fullList('bottom')), React.createElement(SwipeableDrawer, {\n    anchor: \"right\",\n    open: state.right,\n    onClose: toggleDrawer('right', false),\n    onOpen: toggleDrawer('right', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, sideList('right')));\n};\n\nexport default withStyles(styles)(ChangePersonDrawers);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\ClassDetail\\components\\ChangePersonDrawers\\ChangePersonDrawers.js"],"names":["React","withStyles","SwipeableDrawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","styles","ChangePersonDrawers","props","classes","useState","top","left","bottom","right","state","setState","toggleDrawer","side","open","event","type","key","sideList","list","map","text","index","fullList"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport styles from './styles';\r\n\r\nconst ChangePersonDrawers = props => {\r\n    const { classes } = props;\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false\r\n    });\r\n\r\n    const toggleDrawer = (side, open) => event => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [side]: open });\r\n    };\r\n\r\n    const sideList = side => (\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(side, false)}\r\n            onKeyDown={toggleDrawer(side, false)}\r\n        >\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map(\r\n                    (text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    )\r\n                )}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>\r\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const fullList = side => (\r\n        <div\r\n            className={classes.fullList}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(side, false)}\r\n            onKeyDown={toggleDrawer(side, false)}\r\n        >\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map(\r\n                    (text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    )\r\n                )}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>\r\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n            <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n            <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n            <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n            <SwipeableDrawer\r\n                open={state.left}\r\n                onClose={toggleDrawer('left', false)}\r\n                onOpen={toggleDrawer('left', true)}\r\n            >\r\n                {sideList('left')}\r\n            </SwipeableDrawer>\r\n            <SwipeableDrawer\r\n                anchor=\"top\"\r\n                open={state.top}\r\n                onClose={toggleDrawer('top', false)}\r\n                onOpen={toggleDrawer('top', true)}\r\n            >\r\n                {fullList('top')}\r\n            </SwipeableDrawer>\r\n            <SwipeableDrawer\r\n                anchor=\"bottom\"\r\n                open={state.bottom}\r\n                onClose={toggleDrawer('bottom', false)}\r\n                onOpen={toggleDrawer('bottom', true)}\r\n            >\r\n                {fullList('bottom')}\r\n            </SwipeableDrawer>\r\n            <SwipeableDrawer\r\n                anchor=\"right\"\r\n                open={state.right}\r\n                onClose={toggleDrawer('right', false)}\r\n                onOpen={toggleDrawer('right', true)}\r\n            >\r\n                {sideList('right')}\r\n            </SwipeableDrawer>\r\n        </div>\r\n    );\r\n};\r\nexport default withStyles(styles)(ChangePersonDrawers);\r\n"]},"metadata":{},"sourceType":"module"}