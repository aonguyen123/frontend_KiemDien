{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\layouts\\\\Main\\\\components\\\\Sidebar\\\\Sidebar.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ClassRoundedIcon from '@material-ui/icons/ClassRounded';\nimport { Profile, SidebarNav } from './components';\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const open = props.open,\n        variant = props.variant,\n        onClose = props.onClose,\n        className = props.className,\n        logout = props.logout,\n        auth = props.auth;\n  const classes = useStyles();\n  const pages = [{\n    title: 'Dashboard',\n    href: '/dashboard',\n    icon: React.createElement(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })\n  }, {\n    title: 'Users',\n    href: '/users',\n    icon: React.createElement(PeopleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })\n  }, {\n    title: 'Classes',\n    href: '/classes',\n    icon: React.createElement(ClassRoundedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })\n  }, {\n    title: 'Typography',\n    href: '/typography',\n    icon: React.createElement(TextFieldsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })\n  }, {\n    title: 'Icons',\n    href: '/icons',\n    icon: React.createElement(ImageIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })\n  }, {\n    title: 'Account',\n    href: '/account',\n    icon: React.createElement(AccountBoxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })\n  }, {\n    title: 'Settings',\n    href: '/settings',\n    icon: React.createElement(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })\n  }];\n  return React.createElement(Drawer, {\n    anchor: \"left\",\n    classes: {\n      paper: classes.drawer\n    },\n    onClose: onClose,\n    open: open,\n    variant: variant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Profile, {\n    auth: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(SidebarNav, {\n    className: classes.nav,\n    pages: pages,\n    logout: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })));\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\nexport default Sidebar;","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\layouts\\Main\\components\\Sidebar\\Sidebar.js"],"names":["React","clsx","PropTypes","makeStyles","Divider","Drawer","DashboardIcon","PeopleIcon","TextFieldsIcon","ImageIcon","AccountBoxIcon","SettingsIcon","ClassRoundedIcon","Profile","SidebarNav","useStyles","theme","drawer","width","breakpoints","up","marginTop","height","root","backgroundColor","palette","white","display","flexDirection","padding","spacing","divider","margin","nav","marginBottom","Sidebar","props","open","variant","onClose","className","logout","auth","classes","pages","title","href","icon","paper","propTypes","string","func","bool","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ClassRoundedIcon from '@material-ui/icons/ClassRounded';\n\nimport { Profile, SidebarNav } from './components';\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 240,\n        [theme.breakpoints.up('lg')]: {\n            marginTop: 64,\n            height: 'calc(100% - 64px)'\n        }\n    },\n    root: {\n        backgroundColor: theme.palette.white,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        padding: theme.spacing(2)\n    },\n    divider: {\n        margin: theme.spacing(2, 0)\n    },\n    nav: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nconst Sidebar = props => {\n    const { open, variant, onClose, className, logout, auth } = props;\n\n    const classes = useStyles();\n\n    const pages = [\n        {\n            title: 'Dashboard',\n            href: '/dashboard',\n            icon: <DashboardIcon />\n        },\n        {\n            title: 'Users',\n            href: '/users',\n            icon: <PeopleIcon />\n        },\n        {\n            title: 'Classes',\n            href: '/classes',\n            icon: <ClassRoundedIcon />\n        },\n        {\n            title: 'Typography',\n            href: '/typography',\n            icon: <TextFieldsIcon />\n        },\n        {\n            title: 'Icons',\n            href: '/icons',\n            icon: <ImageIcon />\n        },\n        {\n            title: 'Account',\n            href: '/account',\n            icon: <AccountBoxIcon />\n        },\n        {\n            title: 'Settings',\n            href: '/settings',\n            icon: <SettingsIcon />\n        }\n    ];\n\n    return (\n        <Drawer\n            anchor=\"left\"\n            classes={{ paper: classes.drawer }}\n            onClose={onClose}\n            open={open}\n            variant={variant}\n        >\n            <div className={clsx(classes.root, className)}>\n                <Profile\n                    auth={auth}\n                />\n                <Divider className={classes.divider} />\n                <SidebarNav className={classes.nav} pages={pages} logout={logout} />                \n            </div>\n        </Drawer>\n    );\n};\n\nSidebar.propTypes = {\n    className: PropTypes.string,\n    onClose: PropTypes.func,\n    open: PropTypes.bool.isRequired,\n    variant: PropTypes.string.isRequired\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}