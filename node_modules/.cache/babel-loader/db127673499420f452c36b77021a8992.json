{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\UserList\\\\components\\\\UsersTable\\\\UsersTable.js\";\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Avatar, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, TablePagination } from '@material-ui/core';\nimport { getInitials } from 'helpers';\nimport { ToolbarTable } from './components';\nimport styles from './styles';\n\nclass UsersTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectAll = event => {\n      const users = this.props.users;\n      let selectedUsers;\n\n      if (event.target.checked) {\n        selectedUsers = users.map(user => user._id);\n      } else {\n        selectedUsers = [];\n      }\n\n      this.setState({\n        selectedUsers: selectedUsers\n      });\n    };\n\n    this.handleSelectOne = (event, id) => {\n      const selectedIndex = this.state.selectedUsers.indexOf(id);\n      let newSelectedUsers = [];\n\n      if (selectedIndex === -1) {\n        newSelectedUsers = newSelectedUsers.concat(this.state.selectedUsers, id);\n      } else if (selectedIndex === 0) {\n        newSelectedUsers = newSelectedUsers.concat(this.state.selectedUsers.slice(1));\n      } else if (selectedIndex === this.state.selectedUsers.length - 1) {\n        newSelectedUsers = newSelectedUsers.concat(this.state.selectedUsers.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelectedUsers = newSelectedUsers.concat(this.state.selectedUsers.slice(0, selectedIndex), this.state.selectedUsers.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selectedUsers: newSelectedUsers\n      });\n    };\n\n    this.handlePageChange = (event, page) => {\n      this.setState({\n        page: page\n      });\n    };\n\n    this.handleRowsPerPageChange = event => {\n      this.setState({\n        rowsPerPage: +event.target.value,\n        page: 0\n      });\n    };\n\n    this.state = {\n      selectedUsers: [],\n      rowsPerPage: 1,\n      page: 0,\n      loadingTable: false\n    };\n  }\n\n  componentDidUpdate(preProps) {\n    if (preProps.users.length !== this.props.users.length) {\n      this.setState({\n        selectedUsers: []\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          users = _this$props.users,\n          classes = _this$props.classes,\n          deleteUsers = _this$props.deleteUsers,\n          setShowStatusUsers = _this$props.setShowStatusUsers;\n    const _this$state = this.state,\n          selectedUsers = _this$state.selectedUsers,\n          page = _this$state.page,\n          rowsPerPage = _this$state.rowsPerPage;\n    let perPage = users.length - 2 <= 0 ? '' : users.length - 2;\n    let all = [perPage, users.length];\n    return React.createElement(Card, {\n      className: clsx(classes.root, className),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(PerfectScrollbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ToolbarTable, {\n      numSelected: selectedUsers.length,\n      deleteUsers: deleteUsers,\n      selectedUsers: selectedUsers,\n      setShowStatusUsers: setShowStatusUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.inner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: selectedUsers.length === users.length,\n      color: \"primary\",\n      indeterminate: selectedUsers.length > 0 && selectedUsers.length < users.length,\n      onChange: this.handleSelectAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"M\\xE3 user\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Email\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Registration date\"))))))), users.length === 0 ? React.createElement(Typography, {\n      variant: \"subtitle2\",\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Ch\\u01B0a c\\xF3 danh s\\xE1ch user\") : React.createElement(CardActions, {\n      className: classes.actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(TablePagination, {\n      component: \"div\",\n      count: users.length,\n      onChangePage: this.handlePageChange,\n      onChangeRowsPerPage: this.handleRowsPerPageChange,\n      page: page,\n      rowsPerPage: rowsPerPage,\n      rowsPerPageOptions: all,\n      backIconButtonProps: {\n        'aria-label': 'previous page'\n      },\n      nextIconButtonProps: {\n        'aria-label': 'next page'\n      },\n      labelRowsPerPage: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })));\n  }\n\n}\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(UsersTable);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\UserList\\components\\UsersTable\\UsersTable.js"],"names":["React","Component","clsx","PropTypes","moment","PerfectScrollbar","withStyles","Card","CardActions","CardContent","Avatar","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","getInitials","ToolbarTable","styles","UsersTable","constructor","props","handleSelectAll","event","users","selectedUsers","target","checked","map","user","_id","setState","handleSelectOne","id","selectedIndex","state","indexOf","newSelectedUsers","concat","slice","length","handlePageChange","page","handleRowsPerPageChange","rowsPerPage","value","loadingTable","componentDidUpdate","preProps","render","className","classes","deleteUsers","setShowStatusUsers","perPage","all","root","content","inner","textAlign","actions","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Checkbox,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n    TablePagination\n} from '@material-ui/core';\n\nimport { getInitials } from 'helpers';\nimport { ToolbarTable } from './components';\nimport styles from './styles';\n\nclass UsersTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedUsers: [],\n            rowsPerPage: 1,\n            page: 0,\n            loadingTable: false\n        };\n    }\n    handleSelectAll = event => {\n        const { users } = this.props;\n        let selectedUsers;\n        if (event.target.checked) {\n            selectedUsers = users.map(user => user._id);\n        } else {\n            selectedUsers = [];\n        }\n        this.setState({\n            selectedUsers: selectedUsers\n        });\n    };\n    handleSelectOne = (event, id) => {\n        const selectedIndex = this.state.selectedUsers.indexOf(id);\n        let newSelectedUsers = [];\n\n        if (selectedIndex === -1) {\n            newSelectedUsers = newSelectedUsers.concat(\n                this.state.selectedUsers,\n                id\n            );\n        } else if (selectedIndex === 0) {\n            newSelectedUsers = newSelectedUsers.concat(\n                this.state.selectedUsers.slice(1)\n            );\n        } else if (selectedIndex === this.state.selectedUsers.length - 1) {\n            newSelectedUsers = newSelectedUsers.concat(\n                this.state.selectedUsers.slice(0, -1)\n            );\n        } else if (selectedIndex > 0) {\n            newSelectedUsers = newSelectedUsers.concat(\n                this.state.selectedUsers.slice(0, selectedIndex),\n                this.state.selectedUsers.slice(selectedIndex + 1)\n            );\n        }\n        this.setState({\n            selectedUsers: newSelectedUsers\n        });\n    };\n    componentDidUpdate(preProps) {\n        if(preProps.users.length !== this.props.users.length)\n        {\n            this.setState({\n                selectedUsers: []\n            })\n        }\n    }\n\n    handlePageChange = (event, page) => {\n        this.setState({\n            page: page\n        });\n    };\n    handleRowsPerPageChange = event => {\n        this.setState({\n            rowsPerPage: +event.target.value,\n            page: 0\n        });\n    };\n    render() {\n        const {\n            className,\n            users,\n            classes,\n            deleteUsers,\n            setShowStatusUsers\n        } = this.props;\n        const { selectedUsers, page, rowsPerPage } = this.state;\n        let perPage = (users.length - 2 <= 0) ? '' : users.length - 2;\n        let all = [perPage, users.length];\n        return (\n            <Card className={clsx(classes.root, className)}>\n                <CardContent className={classes.content}>\n                    <PerfectScrollbar>\n                        <ToolbarTable\n                            numSelected={selectedUsers.length}\n                            deleteUsers={deleteUsers}\n                            selectedUsers={selectedUsers}\n                            setShowStatusUsers={setShowStatusUsers}\n                        />\n                        <div className={classes.inner}>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                checked={\n                                                    selectedUsers.length ===\n                                                    users.length\n                                                }\n                                                color=\"primary\"\n                                                indeterminate={\n                                                    selectedUsers.length > 0 &&\n                                                    selectedUsers.length <\n                                                        users.length\n                                                }\n                                                onChange={this.handleSelectAll}\n                                            />\n                                        </TableCell>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell>Mã user</TableCell>\n                                        <TableCell>Email</TableCell>\n                                        <TableCell>Phone</TableCell>\n                                        <TableCell>Registration date</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                \n                            </Table>\n                        </div>\n                    </PerfectScrollbar>\n                </CardContent>\n                {users.length === 0 ? (\n                    <Typography\n                        variant=\"subtitle2\"\n                        style={{ textAlign: 'center' }}\n                    >\n                        Chưa có danh sách user\n                    </Typography>\n                ) : (\n                    <CardActions className={classes.actions}>\n                        <TablePagination\n                            component=\"div\"\n                            count={users.length}\n                            onChangePage={this.handlePageChange}\n                            onChangeRowsPerPage={this.handleRowsPerPageChange}\n                            page={page}\n                            rowsPerPage={rowsPerPage}\n                            rowsPerPageOptions={all}\n                            backIconButtonProps={{\n                                'aria-label': 'previous page'\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'next page'\n                            }}\n                            labelRowsPerPage=\"\"\n                        />\n                    </CardActions>\n                )}\n            </Card>\n        );\n    }\n}\n\nUsersTable.propTypes = {\n    className: PropTypes.string,\n    users: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(UsersTable);\n"]},"metadata":{},"sourceType":"module"}