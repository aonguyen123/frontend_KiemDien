{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\UserList\\\\UserList.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { UsersToolbar, UsersTable } from './components';\nimport { getUsers, deleteUsers, createUser } from './../../actions/users';\nimport { LoadingCenter } from 'components';\nimport styles from './styles';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  } // componentDidMount() {\n  //     this.props.getUsers();\n  // }\n  // componentDidUpdate(preProps) {\n  //     if(preProps.users.length !== this.props.users.length )\n  //     {\n  //         this.setState({\n  //             isLoading: false,\n  //         })\n  //     }\n  //     if(preProps.addUser !== this.props.addUser)\n  //     {\n  //         this.props.getUsers();\n  //     }\n  // }\n\n\n  render() {\n    //         const { classes, users, deleteUsers, statusUser, createUser, errors, addUser } = this.props;\n    //         const { isLoading } = this.state;\n    //         if(isLoading && statusUser !== 'USERS_NOTFOUND' && statusUser !== 'USERS_EXITS')\n    //         { \n    //             return <LoadingCenter />;\n    //         }\n    //         return (\n    //                 <div className={classes.root}>\n    //                     <UsersToolbar \n    //                         createUser={createUser}\n    //                         errors={errors}\n    //                         addUser={addUser}\n    //                     />\n    //                     <div className={classes.content}>\n    //                         <UsersTable \n    //                             users={users} \n    //                             deleteUsers={deleteUsers}\n    //                         />\n    //                     </div>\n    //                 </div>\n    //         );\n    //     }\n    // };\n    // const mapStateToProps = state => ({\n    //     users: state.users.users,\n    //     statusUser: state.users.status,\n    //     errors: state.errors,\n    //     addUser: state.addUser\n    // });\n    //export default connect(mapStateToProps, { getUsers, deleteUsers, createUser })(withStyles(styles)(UserList));\n    return React.createElement(\"input\", {\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\UserList\\UserList.js"],"names":["React","Component","withStyles","connect","UsersToolbar","UsersTable","getUsers","deleteUsers","createUser","LoadingCenter","styles","UserList","constructor","props","state","isLoading","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,cAAzC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,uBAAlD;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAC7BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH,GAN4B,CAO7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,WACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGP;;AAxDgC;;AA0DjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\n\nimport { UsersToolbar, UsersTable } from './components';\nimport { getUsers, deleteUsers, createUser } from './../../actions/users';\nimport { LoadingCenter } from 'components';\nimport styles from './styles';\n\nclass UserList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true\n        };\n    }\n    // componentDidMount() {\n    //     this.props.getUsers();\n    // }\n    // componentDidUpdate(preProps) {\n    //     if(preProps.users.length !== this.props.users.length )\n    //     {\n    //         this.setState({\n    //             isLoading: false,\n    //         })\n    //     }\n    //     if(preProps.addUser !== this.props.addUser)\n    //     {\n    //         this.props.getUsers();\n    //     }\n    // }\n    render() {\n//         const { classes, users, deleteUsers, statusUser, createUser, errors, addUser } = this.props;\n//         const { isLoading } = this.state;\n//         if(isLoading && statusUser !== 'USERS_NOTFOUND' && statusUser !== 'USERS_EXITS')\n//         { \n//             return <LoadingCenter />;\n//         }\n//         return (\n//                 <div className={classes.root}>\n//                     <UsersToolbar \n//                         createUser={createUser}\n//                         errors={errors}\n//                         addUser={addUser}\n//                     />\n//                     <div className={classes.content}>\n//                         <UsersTable \n//                             users={users} \n//                             deleteUsers={deleteUsers}\n//                         />\n//                     </div>\n//                 </div>\n//         );\n//     }\n// };\n// const mapStateToProps = state => ({\n//     users: state.users.users,\n//     statusUser: state.users.status,\n//     errors: state.errors,\n//     addUser: state.addUser\n// });\n//export default connect(mapStateToProps, { getUsers, deleteUsers, createUser })(withStyles(styles)(UserList));\n        return (\n            <input type=\"file\" />\n        );\n}\n}\nexport default UserList;"]},"metadata":{},"sourceType":"module"}