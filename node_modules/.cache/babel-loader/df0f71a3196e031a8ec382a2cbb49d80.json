{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\UserList\\\\components\\\\UsersTable\\\\UsersTable.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Avatar, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, TablePagination } from '@material-ui/core';\nimport { getInitials } from 'helpers';\nimport { ToolbarTable } from './components';\nimport styles from './styles';\n\nconst UsersTable = props => {\n  const className = props.className,\n        users = props.users,\n        classes = props.classes,\n        deleteUsers = props.deleteUsers,\n        setShowStatusUsers = props.setShowStatusUsers;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedUsers = _useState2[0],\n        setSelectedUsers = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        rowsPerPage = _useState4[0],\n        setRowsPerPage = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        page = _useState6[0],\n        setPage = _useState6[1];\n\n  const handleSelectAll = event => {\n    const users = props.users;\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user._id);\n    } else {\n      selectedUsers = [];\n    }\n\n    setSelectedUsers(selectedUsers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, selectedIndex), selectedUsers.slice(selectedIndex + 1));\n    }\n\n    setSelectedUsers(newSelectedUsers);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  let all = [1, users.length];\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(ToolbarTable, {\n    numSelected: selectedUsers.length,\n    deleteUsers: deleteUsers,\n    selectedUsers: selectedUsers,\n    setShowStatusUsers: setShowStatusUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: selectedUsers.length === users.length,\n    color: \"primary\",\n    indeterminate: selectedUsers.length > 0 && selectedUsers.length < users.length,\n    onChange: handleSelectAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"M\\xE3 user\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Email\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Registration date\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(user => React.createElement(TableRow, {\n    className: classes.tableRow,\n    hover: true,\n    key: user._id,\n    selected: selectedUsers.indexOf(user._id) !== -1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: selectedUsers.indexOf(user._id) !== -1,\n    color: \"primary\",\n    onChange: event => handleSelectOne(event, user._id),\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: user.avatar ? user.avatar : \"//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, getInitials(user.name)), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, user.name))), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, user.maGV), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, user.email), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, user.sdt), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, moment(user.createdAt).format('DD/MM/YYYY'))))))))), users.length === 0 ? React.createElement(Typography, {\n    variant: \"subtitle2\",\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Ch\\u01B0a c\\xF3 danh s\\xE1ch user\") : React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: users.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: all,\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    labelRowsPerPage: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })));\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(UsersTable);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\UserList\\components\\UsersTable\\UsersTable.js"],"names":["React","useState","clsx","PropTypes","moment","PerfectScrollbar","withStyles","Card","CardActions","CardContent","Avatar","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","getInitials","ToolbarTable","styles","UsersTable","props","className","users","classes","deleteUsers","setShowStatusUsers","selectedUsers","setSelectedUsers","rowsPerPage","setRowsPerPage","page","setPage","handleSelectAll","event","target","checked","map","user","_id","handleSelectOne","id","selectedIndex","indexOf","newSelectedUsers","concat","slice","length","handlePageChange","handleRowsPerPageChange","value","all","root","content","inner","tableRow","nameContainer","avatar","name","maGV","email","sdt","createdAt","format","textAlign","actions","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Checkbox,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n    TablePagination\n} from '@material-ui/core';\n\nimport { getInitials } from 'helpers';\nimport { ToolbarTable } from './components';\nimport styles from './styles';\n\nconst UsersTable = props => {\n    const { className, users, classes, deleteUsers, setShowStatusUsers } = props;\n\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [rowsPerPage, setRowsPerPage] = useState(1);\n    const [page, setPage] = useState(0);\n\n    const handleSelectAll = event => {\n        const { users } = props;\n        let selectedUsers;\n        if (event.target.checked) {\n            selectedUsers = users.map(user => user._id);\n        } else {\n            selectedUsers = [];\n        }\n        setSelectedUsers(selectedUsers);\n    };\n\n    const handleSelectOne = (event, id) => {\n        const selectedIndex = selectedUsers.indexOf(id);\n        let newSelectedUsers = [];\n\n        if (selectedIndex === -1) {\n            newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n        } else if (selectedIndex === 0) {\n            newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n        } else if (selectedIndex === selectedUsers.length - 1) {\n            newSelectedUsers = newSelectedUsers.concat(\n                selectedUsers.slice(0, -1)\n            );\n        } else if (selectedIndex > 0) {\n            newSelectedUsers = newSelectedUsers.concat(\n                selectedUsers.slice(0, selectedIndex),\n                selectedUsers.slice(selectedIndex + 1)\n            );\n        }\n        setSelectedUsers(newSelectedUsers);\n    };\n\n    const handlePageChange = (event, page) => {\n        setPage(page);\n    };\n\n    const handleRowsPerPageChange = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    let all = [1, users.length];\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardContent className={classes.content}>\n                <PerfectScrollbar>\n                    <ToolbarTable \n                        numSelected={selectedUsers.length} \n                        deleteUsers={deleteUsers}\n                        selectedUsers={selectedUsers}\n                        setShowStatusUsers={setShowStatusUsers}\n                    />\n                    <div className={classes.inner}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            checked={\n                                                selectedUsers.length ===\n                                                users.length\n                                            }\n                                            color=\"primary\"\n                                            indeterminate={\n                                                selectedUsers.length > 0 &&\n                                                selectedUsers.length <\n                                                    users.length\n                                            }\n                                            onChange={handleSelectAll}\n                                        />\n                                    </TableCell>\n                                    <TableCell>Name</TableCell>\n                                    <TableCell>Mã user</TableCell>\n                                    <TableCell>Email</TableCell>\n                                    <TableCell>Phone</TableCell>\n                                    <TableCell>Registration date</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(user => (\n                                    <TableRow\n                                        className={classes.tableRow}\n                                        hover\n                                        key={user._id}\n                                        selected={\n                                            selectedUsers.indexOf(user._id) !==\n                                            -1\n                                        }\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                checked={\n                                                    selectedUsers.indexOf(\n                                                        user._id\n                                                    ) !== -1\n                                                }\n                                                color=\"primary\"\n                                                onChange={event =>\n                                                    handleSelectOne(\n                                                        event,\n                                                        user._id\n                                                    )\n                                                }\n                                                value=\"true\"\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <div\n                                                className={\n                                                    classes.nameContainer\n                                                }\n                                            >\n                                                <Avatar\n                                                    className={classes.avatar}\n                                                    src={user.avatar ? user.avatar : `//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm`}\n                                                >\n                                                    {getInitials(user.name)}\n                                                </Avatar>\n                                                <Typography variant=\"body1\">\n                                                    {user.name}\n                                                </Typography>\n                                            </div>\n                                        </TableCell>\n                                        <TableCell>{user.maGV}</TableCell>\n                                        <TableCell>{user.email}</TableCell>\n                                        <TableCell>{user.sdt}</TableCell>\n                                        <TableCell>\n                                            {moment(user.createdAt).format(\n                                                'DD/MM/YYYY'\n                                            )}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </PerfectScrollbar>\n            </CardContent>\n            {\n                users.length === 0 \n                ? <Typography variant=\"subtitle2\" style={{textAlign: 'center'}}>Chưa có danh sách user</Typography>\n                : \n                    <CardActions className={classes.actions}>\n                        <TablePagination\n                            component=\"div\"\n                            count={users.length}\n                            onChangePage={handlePageChange}\n                            onChangeRowsPerPage={handleRowsPerPageChange}\n                            page={page}\n                            rowsPerPage={rowsPerPage}\n                            rowsPerPageOptions={all}\n                            backIconButtonProps={{\n                                'aria-label': 'previous page'\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'next page'\n                            }}\n                            labelRowsPerPage=\"\"\n                        />\n                </CardActions>\n            }\n        </Card>\n    );\n};\n\nUsersTable.propTypes = {\n    className: PropTypes.string,\n    users: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(UsersTable);\n"]},"metadata":{},"sourceType":"module"}