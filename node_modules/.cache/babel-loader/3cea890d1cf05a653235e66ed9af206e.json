{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\components\\\\AccountProfile\\\\AccountProfile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport { getInfoUser } from './../../../../actions/authentication';\nimport { uploadPicture } from './../../../../actions/account';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  avatar: {\n    marginLeft: 'auto',\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nclass AccountProfile extends Component {\n  render() {\n    const classes = useStyles();\n    const _this$props = this.props,\n          className = _this$props.className,\n          user = _this$props.user,\n          uploadPicture = _this$props.uploadPicture,\n          isAuth = _this$props.isAuth,\n          getInfoUser = _this$props.getInfoUser,\n          file = _this$props.file;\n    return React.createElement(Card, {\n      className: clsx(classes.root, className),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\".concat(user.firstName, \" \").concat(user.lastName)), React.createElement(Typography, {\n      className: classes.locationText,\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, user.city, \", \", user.country), React.createElement(Typography, {\n      className: classes.dateText,\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, moment().format('hh:mm A'), \" (\", 'GTM-7', \")\")), React.createElement(Avatar, {\n      className: classes.avatar,\n      src: \"\".concat(URL_getImage).concat(user.avatar),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Profile Completeness: \".concat(profileComplete(), \"%\")), React.createElement(LinearProgress, {\n      value: profileComplete(),\n      variant: \"determinate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"text-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"text-button-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      component: \"span\",\n      className: classes.uploadButton,\n      color: \"primary\",\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Upload picture\")), React.createElement(Button, {\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Remove picture\")));\n  }\n\n} // const AccountProfile = props => {\n//     \n//     const classes = useStyles();\n//     let [avatar, setAvatar] = useState('');\n//     const profileComplete = () => {\n//         if (isAuth) {\n//             let complete = 0;\n//             if (user.firstName) {\n//                 complete += 20;\n//             }\n//             if (user.lastName) {\n//                 complete += 20;\n//             }\n//             if (user.sdt) {\n//                 complete += 20;\n//             }\n//             if (user.city) {\n//                 complete += 20;\n//             }\n//             // if (user.avatar.slice(0, 18) !== '//www.gravatar.com') {\n//             //     complete += 20;\n//             // }\n//             return complete;\n//         } else {\n//             return 0;\n//         }\n//     };\n//     const handleChange = async e => {\n//         avatar = e.target.files[0];\n//         if(avatar)\n//         {\n//            const rs = await uploadPicture(avatar, user.id);\n//            if(rs === undefined)\n//            {\n//                 await getInfoUser(user.id);\n//            }\n//         }\n//     };\n//     console.log(user);\n//     // useEffect(() => {\n//     //     if(file)\n//     //     {\n//     //         getInfoUser(user.id);\n//     //         file = false;\n//     //     }\n//     // },[file]);\n//     );\n// };\n\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n  auth: PropTypes.object,\n  uploadPicture: PropTypes.func,\n  file: PropTypes.string,\n  errors: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  file: state.file,\n  isAuth: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getInfoUser,\n  uploadPicture\n})(AccountProfile);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\components\\AccountProfile\\AccountProfile.js"],"names":["React","Component","PropTypes","clsx","moment","makeStyles","connect","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","URL_getImage","getInfoUser","uploadPicture","useStyles","theme","root","details","display","avatar","marginLeft","height","width","flexShrink","flexGrow","progress","marginTop","spacing","uploadButton","marginRight","input","AccountProfile","render","classes","props","className","user","isAuth","file","firstName","lastName","locationText","city","country","dateText","format","profileComplete","handleChange","propTypes","string","auth","object","func","errors","mapStateToProps","state","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Typography,\n    Divider,\n    Button,\n    LinearProgress\n} from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport { getInfoUser } from './../../../../actions/authentication';\nimport { uploadPicture } from './../../../../actions/account';\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    details: {\n        display: 'flex'\n    },\n    avatar: {\n        marginLeft: 'auto',\n        height: 110,\n        width: 100,\n        flexShrink: 0,\n        flexGrow: 0\n    },\n    progress: {\n        marginTop: theme.spacing(2)\n    },\n    uploadButton: {\n        marginRight: theme.spacing(2)\n    },\n    input: {\n        display: 'none'\n    }\n}));\n\nclass AccountProfile extends Component {\n    render() {\n        const classes = useStyles();\n        const { className, user, uploadPicture, isAuth, getInfoUser, file } = this.props;\n        return (\n            <Card className={clsx(classes.root, className)}>\n                <CardContent>\n                    <div className={classes.details}>\n                        <div>\n                            <Typography gutterBottom variant=\"h2\">\n                                {`${user.firstName} ${user.lastName}`}\n                            </Typography>\n                            <Typography\n                                className={classes.locationText}\n                                color=\"textSecondary\"\n                                variant=\"body1\"\n                            >\n                                {user.city}, {user.country}\n                            </Typography>\n                            <Typography\n                                className={classes.dateText}\n                                color=\"textSecondary\"\n                                variant=\"body1\"\n                            >\n                                {moment().format('hh:mm A')} ({'GTM-7'})\n                            </Typography>\n                        </div>\n                        <Avatar\n                            className={classes.avatar}\n                            src={`${URL_getImage}${user.avatar}`}\n                        />\n                    </div>\n                    <div className={classes.progress}>\n                        <Typography variant=\"body1\">\n                            {`Profile Completeness: ${profileComplete()}%`}\n                        </Typography>\n                        <LinearProgress\n                            value={profileComplete()}\n                            variant=\"determinate\"\n                        />\n                    </div>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        id=\"text-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={handleChange}\n                    />\n                    <label htmlFor=\"text-button-file\">\n                        <Button\n                            component=\"span\"\n                            className={classes.uploadButton}\n                            color=\"primary\"\n                            variant=\"text\"\n                        >\n                            Upload picture\n                        </Button>\n                    </label>\n                    <Button variant=\"text\">Remove picture</Button>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n// const AccountProfile = props => {\n//     \n//     const classes = useStyles();\n//     let [avatar, setAvatar] = useState('');\n\n//     const profileComplete = () => {\n//         if (isAuth) {\n//             let complete = 0;\n//             if (user.firstName) {\n//                 complete += 20;\n//             }\n//             if (user.lastName) {\n//                 complete += 20;\n//             }\n//             if (user.sdt) {\n//                 complete += 20;\n//             }\n//             if (user.city) {\n//                 complete += 20;\n//             }\n//             // if (user.avatar.slice(0, 18) !== '//www.gravatar.com') {\n//             //     complete += 20;\n//             // }\n//             return complete;\n//         } else {\n//             return 0;\n//         }\n//     };\n//     const handleChange = async e => {\n//         avatar = e.target.files[0];\n//         if(avatar)\n//         {\n//            const rs = await uploadPicture(avatar, user.id);\n//            if(rs === undefined)\n//            {\n//                 await getInfoUser(user.id);\n//            }\n//         }\n//     };\n//     console.log(user);\n\n//     // useEffect(() => {\n//     //     if(file)\n//     //     {\n//     //         getInfoUser(user.id);\n//     //         file = false;\n//     //     }\n//     // },[file]);\n\n//     );\n// };\n\nAccountProfile.propTypes = {\n    className: PropTypes.string,\n    auth: PropTypes.object,\n    uploadPicture: PropTypes.func,\n    file: PropTypes.string,\n    errors: PropTypes.object\n};\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    file: state.file,\n    isAuth: state.auth.isAuthenticated\n});\nexport default connect(\n    mapStateToProps,\n    { getInfoUser, uploadPicture }\n)(AccountProfile);\n"]},"metadata":{},"sourceType":"module"}