{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Dashboard\\\\Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { TotalClasses, TotalUsers, TasksProgress, TotalMember, LatestSales, MemberByPresence, LatestClasses, LatestAssigned } from './components';\nimport { closeNotify } from './../../actions/notify';\nimport { filterTask } from './../../actions/actionTask';\nimport { getDataDashBoard } from './../../actions/dashboard';\nimport { deleteClass } from './../../actions/actionClass';\nimport { Notifies, LoadingCenter } from 'components';\nimport styles from './styles';\n\nconst Dashboard = props => {\n  const classes = props.classes,\n        showNotify = props.showNotify,\n        closeNotify = props.closeNotify,\n        classLatest = props.classLatest,\n        getDataDashBoard = props.getDataDashBoard,\n        isLoading = props.isLoading,\n        deleteClass = props.deleteClass,\n        actionClass = props.actionClass,\n        assignesLatest = props.assignesLatest,\n        totalClass = props.totalClass,\n        totalUser = props.totalUser,\n        totalMember = props.totalMember,\n        filterTask = props.filterTask,\n        filterStatistical = props.filterStatistical,\n        presencesData = props.presencesData,\n        classesDataByPresences = props.classesDataByPresences;\n  useEffect(() => {\n    getDataDashBoard();\n  }, [getDataDashBoard, actionClass]);\n\n  const setCloseNotify = () => {\n    closeNotify();\n  };\n\n  if (isLoading) return React.createElement(LoadingCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Notifies, {\n    variant: actionClass.isSuccess ? 'success' : 'error',\n    message: actionClass.message,\n    openNotify: showNotify,\n    setCloseNotify: setCloseNotify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    sm: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TotalClasses, {\n    totalClass: totalClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    sm: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TotalUsers, {\n    totalUser: totalUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    sm: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TasksProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    sm: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TotalMember, {\n    totalMember: totalMember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 8,\n    md: 12,\n    xl: 9,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(LatestSales, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(MemberByPresence, {\n    filterTask: filterTask,\n    filterStatistical: filterStatistical,\n    presencesData: presencesData,\n    classesDataByPresences: classesDataByPresences,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 6,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(LatestClasses, {\n    classLatest: classLatest,\n    deleteClass: deleteClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    lg: 8,\n    md: 12,\n    xl: 9,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(LatestAssigned, {\n    assignesLatest: assignesLatest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  showNotify: state.showNotify.isShow,\n  classLatest: state.classes.classes,\n  isLoading: state.isLoading.isLoading,\n  actionClass: state.actionClass,\n  assignesLatest: state.assignesClass,\n  totalClass: state.totalClass,\n  totalUser: state.totalUser,\n  totalMember: state.totalMember,\n  filterStatistical: state.task.index,\n  presencesData: state.statisticalPresences,\n  classesDataByPresences: state.statisticalClasses\n});\n\nexport default connect(mapStateToProps, {\n  closeNotify,\n  getDataDashBoard,\n  deleteClass,\n  filterTask\n})(withStyles(styles)(Dashboard));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\Dashboard.js"],"names":["React","useEffect","connect","withStyles","Grid","TotalClasses","TotalUsers","TasksProgress","TotalMember","LatestSales","MemberByPresence","LatestClasses","LatestAssigned","closeNotify","filterTask","getDataDashBoard","deleteClass","Notifies","LoadingCenter","styles","Dashboard","props","classes","showNotify","classLatest","isLoading","actionClass","assignesLatest","totalClass","totalUser","totalMember","filterStatistical","presencesData","classesDataByPresences","setCloseNotify","root","isSuccess","message","mapStateToProps","state","isShow","assignesClass","task","index","statisticalPresences","statisticalClasses"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport {\n    TotalClasses,\n    TotalUsers,\n    TasksProgress,\n    TotalMember,\n    LatestSales,\n    MemberByPresence,\n    LatestClasses,\n    LatestAssigned\n} from './components';\nimport { closeNotify } from './../../actions/notify';\nimport { filterTask } from './../../actions/actionTask';\nimport { getDataDashBoard } from './../../actions/dashboard';\nimport { deleteClass } from './../../actions/actionClass';\nimport { Notifies, LoadingCenter } from 'components';\nimport styles from './styles';\n\nconst Dashboard = props => {\n    const {\n        classes,\n        showNotify,\n        closeNotify,\n        classLatest,\n        getDataDashBoard,\n        isLoading,\n        deleteClass,\n        actionClass,\n        assignesLatest,\n        totalClass,\n        totalUser,\n        totalMember,\n        filterTask,\n        filterStatistical,\n        presencesData,\n        classesDataByPresences\n    } = props;\n\n    useEffect(() => {\n        getDataDashBoard();\n    }, [getDataDashBoard, actionClass]);\n\n    const setCloseNotify = () => {\n        closeNotify();\n    };\n\n    if (isLoading) return <LoadingCenter />;\n    return (\n        <div className={classes.root}>\n            <Notifies\n                variant={actionClass.isSuccess ? 'success' : 'error'}\n                message={actionClass.message}\n                openNotify={showNotify}\n                setCloseNotify={setCloseNotify}\n            />\n            <Grid container spacing={4}>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                    <TotalClasses \n                        totalClass={totalClass}\n                    />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                    <TotalUsers \n                        totalUser={totalUser}\n                    />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                    <TasksProgress />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                    <TotalMember \n                        totalMember={totalMember}\n                    />\n                </Grid>\n                <Grid item lg={8} md={12} xl={9} xs={12}>\n                    <LatestSales />\n                </Grid>\n                <Grid item lg={4} md={6} xl={3} xs={12}>\n                    <MemberByPresence \n                        filterTask={filterTask}\n                        filterStatistical={filterStatistical}\n                        presencesData={presencesData}\n                        classesDataByPresences={classesDataByPresences}\n                    />\n                </Grid>\n                <Grid item lg={4} md={6} xl={3} xs={12}>\n                    <LatestClasses \n                        classLatest={classLatest} \n                        deleteClass={deleteClass}\n                    />\n                </Grid>\n                <Grid item lg={8} md={12} xl={9} xs={12}>\n                    <LatestAssigned \n                        assignesLatest={assignesLatest}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\nconst mapStateToProps = state => ({\n    showNotify: state.showNotify.isShow,\n    classLatest: state.classes.classes,\n    isLoading: state.isLoading.isLoading,\n    actionClass: state.actionClass,\n    assignesLatest: state.assignesClass,\n    totalClass: state.totalClass,\n    totalUser: state.totalUser,\n    totalMember: state.totalMember,\n    filterStatistical: state.task.index,\n    presencesData: state.statisticalPresences,\n    classesDataByPresences: state.statisticalClasses\n});\nexport default connect(\n    mapStateToProps,\n    { closeNotify, getDataDashBoard, deleteClass, filterTask }\n)(withStyles(styles)(Dashboard));\n"]},"metadata":{},"sourceType":"module"}