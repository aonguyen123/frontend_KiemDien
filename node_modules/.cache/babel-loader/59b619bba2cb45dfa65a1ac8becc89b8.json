{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, CLEARN_ERRORS, SET_CURRENT_USER } from './../constants/types';\nimport setAuthToken from './../common/setAuthToken';\nimport callAPI from './../common/callApi';\nexport const login = (user, history) => dispatch => {\n  callAPI('/login', 'POST', user).then(res => {\n    const token = res.data.token;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decode = jwt_decode(token);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decode\n    });\n    dispatch({\n      type: CLEARN_ERRORS,\n      payload: {}\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const logout = history => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch({\n    type: CLEARN_ERRORS,\n    payload: {}\n  });\n  dispatch(setCurrentUser({}));\n  history.push('/sign-in');\n};\nexport const logoutSystem = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const getInfoUser = idUser => dispatch => {\n  callAPI(\"/getInfoUser/?id=\".concat(idUser), 'GET', null).then(res => {\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: res.data\n    });\n  });\n};","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\actions\\authentication.js"],"names":["jwt_decode","GET_ERRORS","CLEARN_ERRORS","SET_CURRENT_USER","setAuthToken","callAPI","login","user","history","dispatch","then","res","token","data","localStorage","setItem","decode","type","payload","push","catch","err","response","logout","removeItem","setCurrentUser","logoutSystem","decoded","getInfoUser","idUser"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,gBAApC,QAA4D,sBAA5D;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmBC,QAAQ,IAAI;AAChDJ,EAAAA,OAAO,CAAC,QAAD,EAAW,MAAX,EAAmBE,IAAnB,CAAP,CACKG,IADL,CACUC,GAAG,IAAI;AAAA,UACDC,KADC,GACSD,GAAG,CAACE,IADb,CACDD,KADC;AAETE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;AACAR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACA,UAAMI,MAAM,GAAGhB,UAAU,CAACY,KAAD,CAAzB;AACAH,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEd,gBADD;AAELe,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,aADD;AAELgB,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIAV,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACH,GAfL,EAgBKC,KAhBL,CAgBWC,GAAG,IAAI;AACVZ,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEhB,UADD;AAELiB,MAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaT;AAFjB,KAAD,CAAR;AAIH,GArBL;AAsBH,CAvBM;AAwBP,OAAO,MAAMU,MAAM,GAAGf,OAAO,IAAIC,QAAQ,IAAI;AACzCK,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACApB,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,EAAAA,QAAQ,CAAC;AACLQ,IAAAA,IAAI,EAAEf,aADD;AAELgB,IAAAA,OAAO,EAAE;AAFJ,GAAD,CAAR;AAIAT,EAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACAjB,EAAAA,OAAO,CAACW,IAAR,CAAa,UAAb;AACH,CATM;AAUP,OAAO,MAAMO,YAAY,GAAG,MAAMjB,QAAQ,IAAI;AAC1CK,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACApB,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,EAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CAJM;AAKP,OAAO,MAAMA,cAAc,GAAGE,OAAO,IAAI;AACrC,SAAO;AACHV,IAAAA,IAAI,EAAEd,gBADH;AAEHe,IAAAA,OAAO,EAAES;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,WAAW,GAAGC,MAAM,IAAIpB,QAAQ,IAAI;AAC7CJ,EAAAA,OAAO,4BAAqBwB,MAArB,GAA+B,KAA/B,EAAsC,IAAtC,CAAP,CACKnB,IADL,CACUC,GAAG,IAAI;AACTF,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEd,gBADD;AAELe,MAAAA,OAAO,EAAEP,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GANL;AAOH,CARM","sourcesContent":["import jwt_decode from 'jwt-decode';\r\n\r\nimport { GET_ERRORS, CLEARN_ERRORS, SET_CURRENT_USER } from './../constants/types';\r\nimport setAuthToken from './../common/setAuthToken';\r\nimport callAPI from './../common/callApi';\r\n\r\nexport const login = (user, history) => dispatch => {\r\n    callAPI('/login', 'POST', user)\r\n        .then(res => {\r\n            const { token } = res.data;\r\n            localStorage.setItem('jwtToken', token);\r\n            setAuthToken(token);\r\n            const decode = jwt_decode(token);            \r\n            dispatch({\r\n                type: SET_CURRENT_USER,\r\n                payload: decode\r\n            });\r\n            dispatch({\r\n                type: CLEARN_ERRORS,\r\n                payload: {}\r\n            })\r\n            history.push('/');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });  \r\n};\r\nexport const logout = history => dispatch => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuthToken(false);\r\n    dispatch({\r\n        type: CLEARN_ERRORS,\r\n        payload: {}\r\n    });\r\n    dispatch(setCurrentUser({}));\r\n    history.push('/sign-in');\r\n}\r\nexport const logoutSystem = () => dispatch => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n}\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n};\r\nexport const getInfoUser = idUser => dispatch => {\r\n    callAPI(`/getInfoUser/?id=${idUser}`, 'GET', null)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_CURRENT_USER,\r\n                payload: res.data\r\n            });\r\n        });\r\n};"]},"metadata":{},"sourceType":"module"}