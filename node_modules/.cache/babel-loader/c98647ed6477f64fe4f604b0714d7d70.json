{"ast":null,"code":"import _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Presences\\\\Presences.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid, TablePagination, Link, Typography } from '@material-ui/core';\nimport { getClassPresences } from './../../actions/presences';\nimport { LoadingCenter } from 'components';\nimport { PresencesToolbar, PresencesCard } from './components';\nimport styles from './styles';\n\nconst Presences = props => {\n  const classes = props.classes,\n        presencesClass = props.presencesClass,\n        getClassPresences = props.getClassPresences,\n        isLoading = props.isLoading;\n\n  const _useState = useState(6),\n        _useState2 = _slicedToArray(_useState, 2),\n        rowsPerPage = _useState2[0],\n        setRowsPerPage = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  useEffect(() => {\n    getClassPresences();\n  }, [getClassPresences]);\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  console.log(page);\n  console.log(rowsPerPage);\n  if (isLoading) return React.createElement(LoadingCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(PresencesToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"\".concat(presencesClass.length, \" Records found. Page \").concat(page + 1, \" of \").concat(Math.round(presencesClass.length / rowsPerPage))), presencesClass.length === 0 ? React.createElement(\"div\", {\n    className: classes.classNotfound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Class not found\")) : React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, presencesClass.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(lop => React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 6,\n    xs: 12,\n    key: lop._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(PresencesCard, {\n    lop: lop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: presencesClass.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [],\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    labelRowsPerPage: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  presencesClass: state.presencesClass,\n  isLoading: state.isLoading.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  getClassPresences\n})(withStyles(styles)(Presences));","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Presences\\Presences.js"],"names":["React","useState","useEffect","connect","withStyles","Grid","TablePagination","Link","Typography","getClassPresences","LoadingCenter","PresencesToolbar","PresencesCard","styles","Presences","props","classes","presencesClass","isLoading","rowsPerPage","setRowsPerPage","page","setPage","handlePageChange","event","handleRowsPerPageChange","target","value","console","log","root","length","Math","round","classNotfound","content","slice","map","lop","_id","pagination","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Grid, TablePagination, Link, Typography } from '@material-ui/core';\r\nimport { getClassPresences } from './../../actions/presences';\r\nimport { LoadingCenter } from 'components';\r\nimport { PresencesToolbar, PresencesCard } from './components';\r\nimport styles from './styles';\r\n\r\nconst Presences = props => {\r\n    const { classes, presencesClass, getClassPresences, isLoading } = props;\r\n    const [rowsPerPage, setRowsPerPage] = useState(6);\r\n    const [page, setPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getClassPresences();\r\n    }, [getClassPresences]);\r\n\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page);\r\n    };\r\n    const handleRowsPerPageChange = event => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    console.log(page);\r\n    console.log(rowsPerPage);\r\n    if (isLoading) return <LoadingCenter />;\r\n    return (\r\n        <div className={classes.root}>\r\n            <PresencesToolbar />\r\n            <Typography variant=\"body2\">\r\n                {\r\n                    `${presencesClass.length} Records found. Page ${page +\r\n                    1} of ${Math.round(presencesClass.length / rowsPerPage)}`\r\n                }\r\n            </Typography>\r\n            {presencesClass.length === 0 ? (\r\n                <div className={classes.classNotfound}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Class not found\r\n                    </Typography>\r\n                </div>\r\n            ) : (\r\n                <div className={classes.content}>\r\n                    <Grid container spacing={3}>\r\n                        {presencesClass\r\n                            .slice(\r\n                                page * rowsPerPage,\r\n                                page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map(lop => (\r\n                                <Grid item lg={4} md={6} xs={12} key={lop._id}>\r\n                                    <PresencesCard lop={lop} />\r\n                                </Grid>\r\n                            ))}\r\n                    </Grid>\r\n                </div>\r\n            )}\r\n            <div className={classes.pagination}>\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={presencesClass.length}\r\n                    onChangePage={handlePageChange}\r\n                    onChangeRowsPerPage={handleRowsPerPageChange}\r\n                    page={page}\r\n                    rowsPerPage={rowsPerPage}\r\n                    rowsPerPageOptions={[]}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'previous page'\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'next page'\r\n                    }}\r\n                    labelRowsPerPage=\"\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => ({\r\n    presencesClass: state.presencesClass,\r\n    isLoading: state.isLoading.isLoading\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getClassPresences }\r\n)(withStyles(styles)(Presences));\r\n"]},"metadata":{},"sourceType":"module"}