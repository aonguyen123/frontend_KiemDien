{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Settings\\\\components\\\\Password\\\\Password.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, CardActions, Divider, Button, TextField } from '@material-ui/core';\nimport styles from './styles';\n\nconst Password = props => {\n  const className = props.className,\n        classes = props.classes,\n        user = props.user,\n        updatePassword = props.updatePassword,\n        errors = props.errors;\n  console.log(errors);\n\n  const _useState = useState({\n    password: '',\n    confirm: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleClick = User => {\n    const user = {};\n    user.password = values.password;\n    user.password_confirm = values.confirm;\n    user.id = User._id;\n    updatePassword(user);\n  };\n\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    subheader: \"Update password\",\n    title: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Confirm password\",\n    name: \"confirm\",\n    onChange: handleChange,\n    style: {\n      marginTop: '1rem'\n    },\n    type: \"password\",\n    value: values.confirm,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: () => handleClick(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Update\"))));\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\nexport default withStyles(styles)(Password);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Settings\\components\\Password\\Password.js"],"names":["React","useState","PropTypes","clsx","withStyles","Card","CardHeader","CardContent","CardActions","Divider","Button","TextField","styles","Password","props","className","classes","user","updatePassword","errors","console","log","password","confirm","values","setValues","handleChange","event","target","name","value","handleClick","User","password_confirm","id","_id","root","marginTop","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    CardActions,\n    Divider,\n    Button,\n    TextField\n} from '@material-ui/core';\nimport styles from './styles';\n\nconst Password = props => {\n    const { className, classes, user, updatePassword, errors } = props;\n    console.log(errors);\n    const [values, setValues] = useState({\n        password: '',\n        confirm: ''\n    });\n\n    const handleChange = event => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n    const handleClick = (User) => {\n        const user = {};\n        user.password = values.password;\n        user.password_confirm = values.confirm;\n        user.id = User._id;\n        updatePassword(user);\n    }\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <form>\n                <CardHeader subheader=\"Update password\" title=\"Password\" />\n                <Divider />\n                <CardContent>\n                    <TextField\n                        fullWidth\n                        label=\"Password\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Confirm password\"\n                        name=\"confirm\"\n                        onChange={handleChange}\n                        style={{ marginTop: '1rem' }}\n                        type=\"password\"\n                        value={values.confirm}\n                        variant=\"outlined\"\n                    />\n                </CardContent>\n                <Divider />\n                <CardActions>\n                    <Button \n                        color=\"primary\" \n                        variant=\"outlined\"\n                        onClick={() => handleClick(user)}\n                    >\n                        Update\n                    </Button>\n                </CardActions>\n            </form>\n        </Card>\n    );\n};\n\nPassword.propTypes = {\n    className: PropTypes.string\n};\n\nexport default withStyles(styles)(Password);\n"]},"metadata":{},"sourceType":"module"}