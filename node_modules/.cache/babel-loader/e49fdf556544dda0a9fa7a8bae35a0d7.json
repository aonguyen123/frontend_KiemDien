{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Dashboard\\\\components\\\\LatestAssigned\\\\LatestAssigned.js\";\nimport React from 'react';\nimport { Link as LinkAssignes } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { StatusBullet } from 'components';\nimport styles from './styles';\nconst statusColors = {\n  true: 'success',\n  false: 'danger'\n};\n\nconst LatestOrders = props => {\n  const className = props.className,\n        classes = props.classes,\n        assignesLatest = props.assignesLatest;\n  return React.createElement(Card, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Latest Assigned\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, assignesLatest.length !== 0 ? React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Class Name\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Manager Person\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"End Time\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, assignesLatest.map(assigne => React.createElement(TableRow, {\n    hover: true,\n    key: assigne._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, assigne.tenlop), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, assigne.tenUser), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, moment(assigne.thoigianketthuc).fromNow()), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.statusContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(StatusBullet, {\n    className: classes.status,\n    color: statusColors[assigne.status],\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), assigne.status ? 'Active' : 'Inactive')))))) : React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"'Assignes not found'\")))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(LinkAssignes, {\n    to: \"/assignes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"View all \", React.createElement(ArrowRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))));\n};\n\nexport default withStyles(styles)(LatestOrders);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Dashboard\\components\\LatestAssigned\\LatestAssigned.js"],"names":["React","Link","LinkAssignes","clsx","moment","PerfectScrollbar","withStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","Typography","ArrowRightIcon","StatusBullet","styles","statusColors","true","false","LatestOrders","props","className","classes","assignesLatest","root","content","inner","length","map","assigne","_id","tenlop","tenUser","thoigianketthuc","fromNow","statusContainer","status","actions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as LinkAssignes } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardHeader,\n    CardContent,\n    Button,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { StatusBullet } from 'components';\nimport styles from './styles';\n\nconst statusColors = {\n    true: 'success',\n    false: 'danger'\n};\n\nconst LatestOrders = props => {\n    const { className, classes, assignesLatest } = props;\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardHeader title=\"Latest Assigned\" />\n            <Divider />\n            <CardContent className={classes.content}>\n                <PerfectScrollbar>\n                    <div className={classes.inner}>\n                        {assignesLatest.length !== 0 ? (\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Class Name</TableCell>\n                                        <TableCell>Manager Person</TableCell>\n                                        <TableCell>End Time</TableCell>\n                                        <TableCell>Status</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {assignesLatest.map(assigne => (\n                                        <TableRow hover key={assigne._id}>\n                                            <TableCell>\n                                                {assigne.tenlop}\n                                            </TableCell>\n                                            <TableCell>\n                                                {assigne.tenUser}\n                                            </TableCell>\n                                            <TableCell>\n                                                {moment(\n                                                    assigne.thoigianketthuc\n                                                ).fromNow()}\n                                            </TableCell>\n                                            <TableCell>\n                                                <div\n                                                    className={\n                                                        classes.statusContainer\n                                                    }\n                                                >\n                                                    <StatusBullet\n                                                        className={\n                                                            classes.status\n                                                        }\n                                                        color={\n                                                            statusColors[\n                                                                assigne.status\n                                                            ]\n                                                        }\n                                                        size=\"sm\"\n                                                    />\n                                                    {assigne.status\n                                                        ? 'Active'\n                                                        : 'Inactive'}\n                                                </div>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        ) : (\n                            <Typography variant='h5' align='center'>'Assignes not found'</Typography>\n                        )}\n                    </div>\n                </PerfectScrollbar>\n            </CardContent>\n            <Divider />\n            <CardActions className={classes.actions}>\n                <LinkAssignes to=\"/assignes\">\n                    <Button color=\"primary\" size=\"small\" variant=\"text\">\n                        View all <ArrowRightIcon />\n                    </Button>\n                </LinkAssignes>\n            </CardActions>\n        </Card>\n    );\n};\nexport default withStyles(styles)(LatestOrders);\n"]},"metadata":{},"sourceType":"module"}