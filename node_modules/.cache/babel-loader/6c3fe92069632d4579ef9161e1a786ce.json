{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Assignes\\\\components\\\\DrawClassAssignes\\\\DrawClassAssignes.js\";\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Avatar, TablePagination, FormControlLabel, CircularProgress } from '@material-ui/core';\nimport { SearchInput, LoadingLocal } from 'components';\nimport { URI } from './../../../../constants/types';\nimport Drawer from '@material-ui/core/Drawer';\nimport styles from './styles';\n\nconst DrawClassAssignes = props => {\n  const classes = props.classes,\n        open = props.open,\n        handleChangePerson = props.handleChangePerson,\n        loadingLocal = props.loadingLocal,\n        users = props.users,\n        idClass = props.idClass,\n        changeManagerPerson = props.changeManagerPerson,\n        searchTaskDraw = props.searchTaskDraw;\n\n  const _useState = useState(8),\n        _useState2 = _slicedToArray(_useState, 2),\n        rowsPerPage = _useState2[0],\n        setRowsPerPage = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const _useState5 = useState({\n    load: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleClick = (event, id) => {\n    setLoading(_objectSpread({}, loading, {\n      load: id\n    }));\n    changeManagerPerson(id, idClass);\n  };\n\n  const handleChange = event => {\n    searchTaskDraw(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    anchor: \"right\",\n    open: open,\n    onClose: handleChangePerson('right', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    placeholder: \"Search person\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.drawHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Change manager\")), users.length === 0 && React.createElement(Typography, {\n    variant: \"body1\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Users not found\"), loadingLocal ? React.createElement(LoadingLocal, {\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }) : users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(user => React.createElement(\"div\", {\n    className: classes.nameContainer,\n    key: user._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    onClick: event => handleClick(event, user._id),\n    control: React.createElement(Avatar, {\n      className: classes.avatar,\n      src: user.avatar ? \"\".concat(URI, \"/getAvatar/\").concat(user.avatar) : \"//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    label: React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, user.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), loading.load === user._id && React.createElement(CircularProgress, {\n    size: 20,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: users.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [],\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    labelRowsPerPage: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))));\n};\n\nexport default withStyles(styles)(DrawClassAssignes);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Assignes\\components\\DrawClassAssignes\\DrawClassAssignes.js"],"names":["React","useState","withStyles","Typography","Avatar","TablePagination","FormControlLabel","CircularProgress","SearchInput","LoadingLocal","URI","Drawer","styles","DrawClassAssignes","props","classes","open","handleChangePerson","loadingLocal","users","idClass","changeManagerPerson","searchTaskDraw","rowsPerPage","setRowsPerPage","page","setPage","load","loading","setLoading","handlePageChange","event","handleRowsPerPageChange","target","value","handleClick","id","handleChange","list","search","drawHeader","length","slice","map","user","nameContainer","_id","avatar","name","pagination"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    Avatar,\r\n    TablePagination,\r\n    FormControlLabel,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\nimport { SearchInput, LoadingLocal } from 'components';\r\nimport { URI } from './../../../../constants/types';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport styles from './styles';\r\n\r\nconst DrawClassAssignes = props => {\r\n    const {\r\n        classes,\r\n        open,\r\n        handleChangePerson,\r\n        loadingLocal,\r\n        users,\r\n        idClass,\r\n        changeManagerPerson,\r\n        searchTaskDraw\r\n    } = props;\r\n    const [rowsPerPage, setRowsPerPage] = useState(8);\r\n    const [page, setPage] = useState(0);\r\n    const [loading, setLoading] = useState({ load: '' });\r\n\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page);\r\n    };\r\n    const handleRowsPerPageChange = event => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const handleClick = (event, id) => {\r\n        setLoading({\r\n            ...loading,\r\n            load: id\r\n        });\r\n        changeManagerPerson(id, idClass);\r\n    };\r\n    const handleChange = event => {\r\n        searchTaskDraw(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                anchor=\"right\"\r\n                open={open}\r\n                onClose={handleChangePerson('right', false)}\r\n            >\r\n                <div className={classes.list}>\r\n                    <div className={classes.search}>\r\n                        <SearchInput \r\n                            placeholder=\"Search person\" \r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.drawHeader}>\r\n                        <Typography variant=\"h5\">Change manager</Typography>\r\n                    </div>\r\n                    {\r\n                        users.length === 0\r\n                        &&\r\n                        <Typography variant='body1' align='center'>Users not found</Typography>\r\n                    }\r\n                    {loadingLocal ? (\r\n                        <LoadingLocal size={30} />\r\n                    ) : (\r\n                        users\r\n                            .slice(\r\n                                page * rowsPerPage,\r\n                                page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map(user => (\r\n                                <div\r\n                                    className={classes.nameContainer}\r\n                                    key={user._id}\r\n                                >\r\n                                    <FormControlLabel\r\n                                        onClick={event =>\r\n                                            handleClick(event, user._id)\r\n                                        }\r\n                                        control={\r\n                                            <Avatar\r\n                                                className={classes.avatar}\r\n                                                src={\r\n                                                    user.avatar\r\n                                                        ? `${URI}/getAvatar/${user.avatar}`\r\n                                                        : `//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm`\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                        label={\r\n                                            <Typography variant=\"h6\">\r\n                                                {user.name}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                    {loading.load === user._id && (\r\n                                        <CircularProgress\r\n                                            size={20}\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            ))\r\n                    )}\r\n                    <div className={classes.pagination}>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            count={users.length}\r\n                            onChangePage={handlePageChange}\r\n                            onChangeRowsPerPage={handleRowsPerPageChange}\r\n                            page={page}\r\n                            rowsPerPage={rowsPerPage}\r\n                            rowsPerPageOptions={[]}\r\n                            backIconButtonProps={{\r\n                                'aria-label': 'previous page'\r\n                            }}\r\n                            nextIconButtonProps={{\r\n                                'aria-label': 'next page'\r\n                            }}\r\n                            labelRowsPerPage=\"\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\nexport default withStyles(styles)(DrawClassAssignes);\r\n"]},"metadata":{},"sourceType":"module"}