{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\Account\\\\components\\\\AccountProfile\\\\AccountProfile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Avatar, Typography, Divider, Button, LinearProgress } from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport styles from './styles';\nimport { LoadingButton } from './../../../../components';\n\nclass AccountProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.profileComplete = (user, isAuth) => {\n      if (isAuth) {\n        let complete = 0;\n\n        if (user.firstName) {\n          complete += 20;\n        }\n\n        if (user.lastName) {\n          complete += 20;\n        }\n\n        if (user.sdt) {\n          complete += 20;\n        }\n\n        if (user.city) {\n          complete += 20;\n        }\n\n        if (user.avatar) {\n          complete += 20;\n        }\n\n        return complete;\n      } else {\n        return 0;\n      }\n    };\n\n    this.handleChange = (e, user) => {\n      this.setState({\n        isLoadingButton: true\n      });\n      let file = this.state.avatar;\n      file = e.target.files[0];\n\n      if (file) {\n        this.props.uploadPicture(file, user._id);\n      }\n    };\n\n    this.state = {\n      avatar: '',\n      isLoadingButton: false,\n      showErrorFile: false\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.file !== this.props.file) {\n      this.props.getInfoUser(this.props.user._id);\n    }\n\n    if (nextProps.user !== this.props.user) {\n      this.setState({\n        isLoadingButton: false\n      });\n    }\n\n    if (nextProps.errors !== this.props.errors) {\n      this.setState({\n        isLoadingButton: false\n      });\n    }\n\n    console.log(nextProps);\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          user = _this$props.user,\n          isAuth = _this$props.isAuth,\n          classes = _this$props.classes,\n          errors = _this$props.errors;\n    const _this$state = this.state,\n          isLoadingButton = _this$state.isLoadingButton,\n          showErrorFile = _this$state.showErrorFile;\n    return React.createElement(Card, {\n      className: clsx(classes.root, className),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\".concat(user.firstName, \" \").concat(user.lastName)), React.createElement(Typography, {\n      className: classes.locationText,\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, user.city, \", \", user.country), React.createElement(Typography, {\n      className: classes.dateText,\n      color: \"textSecondary\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, moment().format('hh:mm A'), \" (\", 'GTM-7', \")\")), React.createElement(Avatar, {\n      className: classes.avatar,\n      src: user.avatar ? \"\".concat(URL_getImage).concat(user.avatar) : \"//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Profile Completeness: \".concat(this.profileComplete(user, isAuth), \"%\")), React.createElement(LinearProgress, {\n      value: this.profileComplete(user, isAuth),\n      variant: \"determinate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.showError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, showErrorFile ? React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, errors.status) : null)), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"text-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: e => this.handleChange(e, user),\n      disabled: isLoadingButton ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"text-button-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Button, {\n      component: \"span\",\n      className: classes.uploadButton,\n      color: \"primary\",\n      variant: \"text\",\n      disabled: isLoadingButton ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, isLoadingButton && React.createElement(LoadingButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \"Upload picture\")), React.createElement(Button, {\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Remove picture\")));\n  }\n\n}\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n  auth: PropTypes.object,\n  uploadPicture: PropTypes.func,\n  file: PropTypes.string,\n  errors: PropTypes.object\n};\nexport default withStyles(styles)(AccountProfile);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\Account\\components\\AccountProfile\\AccountProfile.js"],"names":["React","Component","PropTypes","clsx","moment","withStyles","Card","CardActions","CardContent","Avatar","Typography","Divider","Button","LinearProgress","URL_getImage","styles","LoadingButton","AccountProfile","constructor","props","profileComplete","user","isAuth","complete","firstName","lastName","sdt","city","avatar","handleChange","e","setState","isLoadingButton","file","state","target","files","uploadPicture","_id","showErrorFile","componentWillUpdate","nextProps","nextState","getInfoUser","errors","console","log","render","className","classes","root","details","locationText","country","dateText","format","progress","showError","status","input","uploadButton","propTypes","string","auth","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Avatar,\n    Typography,\n    Divider,\n    Button,\n    LinearProgress\n} from '@material-ui/core';\nimport { URL_getImage } from './../../../../constants/types';\nimport styles from './styles';\nimport { LoadingButton } from './../../../../components';\n\nclass AccountProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avatar: '',\n            isLoadingButton: false,\n            showErrorFile: false\n        };\n    }\n    profileComplete = (user, isAuth) => {\n        if (isAuth) {\n            let complete = 0;\n            if (user.firstName) {\n                complete += 20;\n            }\n            if (user.lastName) {\n                complete += 20;\n            }\n            if (user.sdt) {\n                complete += 20;\n            }\n            if (user.city) {\n                complete += 20;\n            }\n            if (user.avatar) {\n                complete += 20;\n            }\n            return complete;\n        } else {\n            return 0;\n        }\n    };\n    handleChange = (e, user) => {\n        this.setState({\n            isLoadingButton: true\n        });\n        let file = this.state.avatar;\n        file = e.target.files[0];\n        if (file) {\n            this.props.uploadPicture(file, user._id);\n        }\n    };\n    componentWillUpdate(nextProps, nextState) {\n        if (nextProps.file !== this.props.file) {\n            this.props.getInfoUser(this.props.user._id);\n        }\n        if (nextProps.user !== this.props.user) {\n            this.setState({\n                isLoadingButton: false\n            });\n        }\n        if (nextProps.errors !== this.props.errors) {\n            this.setState({\n                isLoadingButton: false\n            });\n        }\n        console.log(nextProps);\n    }\n    render() {\n        const { className, user, isAuth, classes, errors } = this.props;\n        const { isLoadingButton, showErrorFile } = this.state;\n        return (\n            <Card className={clsx(classes.root, className)}>\n                <CardContent>\n                    <div className={classes.details}>\n                        <div>\n                            <Typography gutterBottom variant=\"h2\">\n                                {`${user.firstName} ${user.lastName}`}\n                            </Typography>\n                            <Typography\n                                className={classes.locationText}\n                                color=\"textSecondary\"\n                                variant=\"body1\"\n                            >\n                                {user.city}, {user.country}\n                            </Typography>\n                            <Typography\n                                className={classes.dateText}\n                                color=\"textSecondary\"\n                                variant=\"body1\"\n                            >\n                                {moment().format('hh:mm A')} ({'GTM-7'})\n                            </Typography>\n                        </div>\n                        <Avatar\n                            className={classes.avatar}\n                            src={\n                                user.avatar\n                                    ? `${URL_getImage}${user.avatar}`\n                                    : `//www.gravatar.com/avatar/f8aef9003205946523250a062b54bbb6?s=200&r=pg&d=mm`\n                            }\n                        />\n                    </div>\n                    <div className={classes.progress}>\n                        <Typography variant=\"body1\">\n                            {`Profile Completeness: ${this.profileComplete(\n                                user,\n                                isAuth\n                            )}%`}\n                        </Typography>\n                        <LinearProgress\n                            value={this.profileComplete(user, isAuth)}\n                            variant=\"determinate\"\n                        />\n                    </div>\n                    <div className={classes.showError}>\n                        { \n                            showErrorFile \n                            ? <Typography variant=\"subtitle2\" color=\"secondary\">{errors.status}</Typography>\n                            : null\n                        }\n                    </div>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        id=\"text-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={e => this.handleChange(e, user)}\n                        disabled={isLoadingButton ? true : false}\n                    />\n                    <label htmlFor=\"text-button-file\">\n                        <Button\n                            component=\"span\"\n                            className={classes.uploadButton}\n                            color=\"primary\"\n                            variant=\"text\"\n                            disabled={isLoadingButton ? true : false}\n                        >\n                            {isLoadingButton && <LoadingButton />}\n                            Upload picture\n                        </Button>\n                    </label>\n                    <Button variant=\"text\">Remove picture</Button>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nAccountProfile.propTypes = {\n    className: PropTypes.string,\n    auth: PropTypes.object,\n    uploadPicture: PropTypes.func,\n    file: PropTypes.string,\n    errors: PropTypes.object\n};\n\nexport default withStyles(styles)(AccountProfile);\n"]},"metadata":{},"sourceType":"module"}