{"ast":null,"code":"import _objectSpread from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\react-material\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-material\\\\front-end\\\\src\\\\views\\\\UserList\\\\components\\\\DialogAddUser\\\\DialogAddUser.js\";\nimport React, { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Card, CardHeader, CardContent, CardActions, Divider, Grid, Button, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { LoadingButton } from 'components';\nimport styles from './styles';\n\nconst DialogAddUser = props => {\n  const open = props.open,\n        handleCloseDialog = props.handleCloseDialog,\n        classes = props.classes,\n        createUser = props.createUser,\n        errors = props.errors,\n        addUser = props.addUser,\n        getUsers = props.getUsers;\n\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loadingButton = _useState4[0],\n        SetLoadingButton = _useState4[1];\n\n  useEffect(() => {\n    if (Object.entries(errors).length > 0) {\n      SetLoadingButton(false);\n    }\n\n    if (Object.entries(addUser).length > 0) {\n      SetLoadingButton(false);\n      getUsers();\n      handleCloseDialog(false);\n    }\n  }, [SetLoadingButton, errors, addUser, handleCloseDialog]);\n\n  const handleClose = () => {\n    handleCloseDialog(false);\n  };\n\n  const handleChange = event => {\n    setValue(_objectSpread({}, value, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleClick = () => {\n    SetLoadingButton(true);\n    createUser(value);\n  };\n\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Add user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Email\",\n    margin: \"dense\",\n    name: \"email\",\n    variant: \"outlined\",\n    required: true,\n    onChange: handleChange,\n    error: errors.email ? true : false,\n    helperText: errors.email ? errors.email : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Password\",\n    margin: \"dense\",\n    name: \"password\",\n    variant: \"outlined\",\n    required: true,\n    type: \"password\",\n    onChange: handleChange,\n    error: errors.password ? true : false,\n    helperText: errors.password ? errors.password : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClick,\n    color: \"primary\",\n    disabled: loadingButton ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, loadingButton ? React.createElement(LoadingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }) : null, \"Save\"), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Cancel\")))))));\n};\n\nexport default withStyles(styles)(DialogAddUser);","map":{"version":3,"sources":["E:\\react-material\\front-end\\src\\views\\UserList\\components\\DialogAddUser\\DialogAddUser.js"],"names":["React","useState","useEffect","Dialog","Card","CardHeader","CardContent","CardActions","Divider","Grid","Button","TextField","withStyles","LoadingButton","styles","DialogAddUser","props","open","handleCloseDialog","classes","createUser","errors","addUser","getUsers","email","password","value","setValue","loadingButton","SetLoadingButton","Object","entries","length","handleClose","handleChange","event","target","name","handleClick","root"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { LoadingButton } from 'components';\r\nimport styles from './styles';\r\n\r\nconst DialogAddUser = props => {\r\n    const { open, handleCloseDialog, classes, createUser, errors, addUser, getUsers } = props;\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [loadingButton, SetLoadingButton] = useState(false);\r\n    useEffect(() => {\r\n        if(Object.entries(errors).length > 0)\r\n        {\r\n            SetLoadingButton(false);\r\n        }\r\n        if(Object.entries(addUser).length > 0)\r\n        {\r\n            SetLoadingButton(false);\r\n            getUsers();\r\n            handleCloseDialog(false);\r\n        }\r\n    },[SetLoadingButton, errors, addUser, handleCloseDialog]);\r\n    const handleClose = () => {\r\n        handleCloseDialog(false);\r\n    };\r\n    const handleChange = event => {\r\n        setValue({\r\n            ...value,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n    const handleClick = () => {\r\n        SetLoadingButton(true);\r\n        createUser(value);\r\n    };\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"draggable-dialog-title\"\r\n        >\r\n            <div className={classes.root}>\r\n                <Card>\r\n                    <form autoComplete=\"off\" noValidate>\r\n                        <CardHeader title=\"Add user\" />\r\n                        <Divider />\r\n                        <CardContent>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item md={6} xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Email\"\r\n                                        margin=\"dense\"\r\n                                        name=\"email\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        onChange={handleChange}\r\n                                        error={errors.email ? true : false}\r\n                                        helperText={\r\n                                            errors.email ? errors.email : null\r\n                                        }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item md={6} xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label=\"Password\"\r\n                                        margin=\"dense\"\r\n                                        name=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        type=\"password\"\r\n                                        onChange={handleChange}\r\n                                        error={errors.password ? true : false}\r\n                                        helperText={\r\n                                            errors.password ? errors.password : null\r\n                                        }\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        <Divider />\r\n                        <CardActions>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"flex-end\"\r\n                                alignItems=\"flex-end\"\r\n                            >\r\n                                <Button \r\n                                    onClick={handleClick} \r\n                                    color=\"primary\"\r\n                                    disabled={loadingButton ? true : false}\r\n                                >\r\n                                    { \r\n                                       loadingButton ? <LoadingButton /> : null\r\n                                    }\r\n                                    Save\r\n                                </Button>\r\n                                <Button onClick={handleClose} color=\"secondary\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </CardActions>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\nexport default withStyles(styles)(DialogAddUser);\r\n"]},"metadata":{},"sourceType":"module"}